Java HotSpot(TM) Client VM warning: PrintAssembly is enabled; turning on DebugNonSafepoints to gain additional output
Loaded disassembler from hsdis-i386.dll
Decoding compiled method 0x025fc308:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x025fc400: nop    
  0x025fc401: nop    
  0x025fc402: nop    
  0x025fc403: nop    
  0x025fc404: nop    
  0x025fc405: nop    
  0x025fc406: nop    
  0x025fc407: cmp    0x4(%ecx),%eax
  0x025fc40a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fc410: mov    %eax,0xffffd000(%esp)
  0x025fc417: push   %ebp
  0x025fc418: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.String::hashCode@0 (line 1482)
  0x025fc41b: mov    %ecx,0x10(%esp)
  0x025fc41f: mov    0x14(%ecx),%eax    ;*getfield hash
                                        ; - java.lang.String::hashCode@1 (line 1482)
  0x025fc422: mov    0x10(%ecx),%esi    ;*getfield count
                                        ; - java.lang.String::hashCode@6 (line 1483)
  0x025fc425: mov    %esi,0x14(%esp)
  0x025fc429: cmp    $0x0,%eax
  0x025fc42c: jne    0x025fc47e         ;*ifne
                                        ; - java.lang.String::hashCode@11 (line 1484)
  0x025fc432: cmp    $0x0,%esi
  0x025fc435: jle    0x025fc47e         ;*ifle
                                        ; - java.lang.String::hashCode@15 (line 1484)
  0x025fc43b: mov    0xc(%ecx),%edi     ;*getfield offset
                                        ; - java.lang.String::hashCode@19 (line 1485)
  0x025fc43e: mov    0x8(%ecx),%ebx     ;*getfield value
                                        ; - java.lang.String::hashCode@24 (line 1486)
  0x025fc441: mov    $0x0,%edx
  0x025fc446: jmp    0x025fc473         ;*istore
                                        ; - java.lang.String::hashCode@30 (line 1488)
  0x025fc44b: nop    
  0x025fc44c: mov    %edi,%ecx
  0x025fc44e: inc    %ecx
  0x025fc44f: cmp    0x8(%ebx),%edi     ; implicit exception: dispatches to 0x025fc489
  0x025fc452: jae    0x025fc493
  0x025fc458: movzwl 0xc(%ebx,%edi,2),%edi  ;*caload
                                        ; - java.lang.String::hashCode@48 (line 1489)
  0x025fc45d: mov    %eax,%esi
  0x025fc45f: shl    $0x5,%eax
  0x025fc462: sub    %esi,%eax
  0x025fc464: add    %edi,%eax
  0x025fc466: inc    %edx               ; OopMap{ebx=Oop [16]=Oop off=103}
                                        ;*goto
                                        ; - java.lang.String::hashCode@54 (line 1488)
  0x025fc467: test   %eax,0x200100      ;   {poll}
  0x025fc46d: mov    %ecx,%edi          ;*goto
                                        ; - java.lang.String::hashCode@54 (line 1488)
  0x025fc46f: mov    0x14(%esp),%esi
  0x025fc473: cmp    %esi,%edx
  0x025fc475: jl     0x025fc44c         ;*if_icmpge
                                        ; - java.lang.String::hashCode@35 (line 1488)
  0x025fc477: mov    0x10(%esp),%ecx
  0x025fc47b: mov    %eax,0x14(%ecx)    ;*putfield hash
                                        ; - java.lang.String::hashCode@59 (line 1491)
  0x025fc47e: add    $0x28,%esp
  0x025fc481: pop    %ebp
  0x025fc482: test   %eax,0x200100      ;   {poll_return}
  0x025fc488: ret    
  0x025fc489: call   0x025fa0d0         ; OopMap{ebx=Oop [16]=Oop off=142}
                                        ;*caload
                                        ; - java.lang.String::hashCode@48 (line 1489)
                                        ;   {runtime_call}
  0x025fc48e: call   0x025fa0d0         ; OopMap{ebx=Oop [16]=Oop off=147}
                                        ;*caload
                                        ; - java.lang.String::hashCode@48 (line 1489)
                                        ;   {runtime_call}
  0x025fc493: mov    %edi,(%esp)
  0x025fc496: call   0x025f9dd0         ; OopMap{ebx=Oop [16]=Oop off=155}
                                        ;*caload
                                        ; - java.lang.String::hashCode@48 (line 1489)
                                        ;   {runtime_call}
  0x025fc49b: nop    
  0x025fc49c: nop    
  0x025fc49d: mov    %fs:0x0,%esi
  0x025fc4a5: mov    0xfffffff4(%esi),%esi
  0x025fc4a8: mov    0x170(%esi),%eax
  0x025fc4ae: movl   $0x0,0x170(%esi)
  0x025fc4b8: movl   $0x0,0x174(%esi)
  0x025fc4c2: add    $0x28,%esp
  0x025fc4c5: pop    %ebp
  0x025fc4c6: jmp    0x025f9c00         ;   {runtime_call}
  0x025fc4cb: hlt    
  0x025fc4cc: hlt    
  0x025fc4cd: hlt    
  0x025fc4ce: hlt    
  0x025fc4cf: hlt    
[Exception Handler]
[Stub Code]
  0x025fc4d0: call   0x025fb1c0         ;   {no_reloc}
  0x025fc4d5: push   $0x6dab698c        ;   {external_word}
  0x025fc4da: call   0x025fc4df
  0x025fc4df: pusha  
  0x025fc4e0: call   0x6d8b2a00         ;   {runtime_call}
  0x025fc4e5: hlt    
[Deopt Handler Code]
  0x025fc4e6: push   $0x25fc4e6         ;   {section_word}
  0x025fc4eb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025fc6c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x025fc7e0: nop    
  0x025fc7e1: nop    
  0x025fc7e2: nop    
  0x025fc7e3: nop    
  0x025fc7e4: nop    
  0x025fc7e5: nop    
  0x025fc7e6: nop    
  0x025fc7e7: cmp    0x4(%ecx),%eax
  0x025fc7ea: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fc7f0: mov    %eax,0xffffd000(%esp)
  0x025fc7f7: push   %ebp
  0x025fc7f8: sub    $0x18,%esp         ;*aload_0
                                        ; - java.lang.String::equals@0 (line 1005)
  0x025fc7fb: cmp    %edx,%ecx
  0x025fc7fd: je     0x025fc8e4         ;*if_acmpne
                                        ; - java.lang.String::equals@2 (line 1005)
  0x025fc803: cmp    $0x0,%edx
  0x025fc806: je     0x025fc819
  0x025fc80c: cmpl   $0x1459d4b0,0x4(%edx)  ;   {oop('java/lang/String')}
  0x025fc813: je     0x025fc820
  0x025fc819: xor    %eax,%eax
  0x025fc81b: jmp    0x025fc825
  0x025fc820: mov    $0x1,%eax          ;*instanceof
                                        ; - java.lang.String::equals@8 (line 1008)
  0x025fc825: cmp    $0x0,%eax
  0x025fc828: je     0x025fc8d4         ;*ifeq
                                        ; - java.lang.String::equals@11 (line 1008)
  0x025fc82e: cmp    $0x0,%edx
  0x025fc831: je     0x025fc844
  0x025fc837: cmpl   $0x1459d4b0,0x4(%edx)  ;   {oop('java/lang/String')}
  0x025fc83e: jne    0x025fc8f4
  0x025fc844: mov    %edx,%eax          ;*checkcast
                                        ; - java.lang.String::equals@15 (line 1009)
  0x025fc846: mov    0x10(%ecx),%esi    ;*getfield count
                                        ; - java.lang.String::equals@20 (line 1010)
  0x025fc849: mov    0x10(%eax),%edi    ;*getfield count
                                        ; - java.lang.String::equals@26 (line 1011)
                                        ; implicit exception: dispatches to 0x025fc8fc
  0x025fc84c: cmp    %edi,%esi
  0x025fc84e: jne    0x025fc8d4         ;*if_icmpne
                                        ; - java.lang.String::equals@29 (line 1011)
  0x025fc854: mov    0x8(%ecx),%edi     ;*getfield value
                                        ; - java.lang.String::equals@33 (line 1012)
  0x025fc857: mov    %edi,0x10(%esp)
  0x025fc85b: mov    0x8(%eax),%ebx     ;*getfield value
                                        ; - java.lang.String::equals@39 (line 1013)
  0x025fc85e: mov    0xc(%ecx),%edx     ;*getfield offset
                                        ; - java.lang.String::equals@45 (line 1014)
  0x025fc861: mov    0xc(%eax),%eax     ;*getfield offset
                                        ; - java.lang.String::equals@51 (line 1015)
  0x025fc864: jmp    0x025fc8a6         ;*istore
                                        ; - java.lang.String::equals@54 (line 1015)
  0x025fc869: xchg   %ax,%ax
  0x025fc86c: mov    %edx,%esi
  0x025fc86e: inc    %esi
  0x025fc86f: cmp    0x8(%edi),%edx     ; implicit exception: dispatches to 0x025fc901
  0x025fc872: jae    0x025fc90b
  0x025fc878: movzwl 0xc(%edi,%edx,2),%edx  ;*caload
                                        ; - java.lang.String::equals@70 (line 1017)
  0x025fc87d: mov    %eax,%edi
  0x025fc87f: inc    %edi
  0x025fc880: cmp    0x8(%ebx),%eax     ; implicit exception: dispatches to 0x025fc913
  0x025fc883: jae    0x025fc91d
  0x025fc889: movzwl 0xc(%ebx,%eax,2),%eax  ; OopMap{ebx=Oop [16]=Oop off=174}
                                        ;*if_icmpeq
                                        ; - java.lang.String::equals@79 (line 1017)
  0x025fc88e: test   %eax,0x200100      ;   {poll}
  0x025fc894: cmp    %eax,%edx
  0x025fc896: jne    0x025fc8b4
  0x025fc89c: mov    %edi,%eax
  0x025fc89e: mov    %esi,%edx
  0x025fc8a0: mov    %ecx,%esi          ;*if_icmpeq
                                        ; - java.lang.String::equals@79 (line 1017)
  0x025fc8a2: mov    0x10(%esp),%edi
  0x025fc8a6: mov    %esi,%ecx
  0x025fc8a8: dec    %ecx
  0x025fc8a9: cmp    $0x0,%esi
  0x025fc8ac: je     0x025fc8c4
  0x025fc8b2: jmp    0x025fc86c         ;*ifeq
                                        ; - java.lang.String::equals@60 (line 1016)
  0x025fc8b4: mov    $0x0,%eax
  0x025fc8b9: add    $0x18,%esp
  0x025fc8bc: pop    %ebp
  0x025fc8bd: test   %eax,0x200100      ;   {poll_return}
  0x025fc8c3: ret                       ;*ireturn
                                        ; - java.lang.String::equals@83 (line 1018)
  0x025fc8c4: mov    $0x1,%eax
  0x025fc8c9: add    $0x18,%esp
  0x025fc8cc: pop    %ebp
  0x025fc8cd: test   %eax,0x200100      ;   {poll_return}
  0x025fc8d3: ret                       ;*ireturn
                                        ; - java.lang.String::equals@85 (line 1020)
  0x025fc8d4: mov    $0x0,%eax
  0x025fc8d9: add    $0x18,%esp
  0x025fc8dc: pop    %ebp
  0x025fc8dd: test   %eax,0x200100      ;   {poll_return}
  0x025fc8e3: ret                       ;*ireturn
                                        ; - java.lang.String::equals@87 (line 1023)
  0x025fc8e4: mov    $0x1,%eax
  0x025fc8e9: add    $0x18,%esp
  0x025fc8ec: pop    %ebp
  0x025fc8ed: test   %eax,0x200100      ;   {poll_return}
  0x025fc8f3: ret    
  0x025fc8f4: mov    %edx,(%esp)
  0x025fc8f7: call   0x025fb510         ; OopMap{ecx=Oop off=284}
                                        ;*checkcast
                                        ; - java.lang.String::equals@15 (line 1009)
                                        ;   {runtime_call}
  0x025fc8fc: call   0x025fa0d0         ; OopMap{ecx=Oop eax=Oop off=289}
                                        ;*getfield count
                                        ; - java.lang.String::equals@26 (line 1011)
                                        ;   {runtime_call}
  0x025fc901: call   0x025fa0d0         ; OopMap{edi=Oop [16]=Oop ebx=Oop off=294}
                                        ;*caload
                                        ; - java.lang.String::equals@70 (line 1017)
                                        ;   {runtime_call}
  0x025fc906: call   0x025fa0d0         ; OopMap{edi=Oop [16]=Oop ebx=Oop off=299}
                                        ;*caload
                                        ; - java.lang.String::equals@70 (line 1017)
                                        ;   {runtime_call}
  0x025fc90b: mov    %edx,(%esp)
  0x025fc90e: call   0x025f9dd0         ; OopMap{edi=Oop [16]=Oop ebx=Oop off=307}
                                        ;*caload
                                        ; - java.lang.String::equals@70 (line 1017)
                                        ;   {runtime_call}
  0x025fc913: call   0x025fa0d0         ; OopMap{ebx=Oop [16]=Oop off=312}
                                        ;*caload
                                        ; - java.lang.String::equals@78 (line 1017)
                                        ;   {runtime_call}
  0x025fc918: call   0x025fa0d0         ; OopMap{ebx=Oop [16]=Oop off=317}
                                        ;*caload
                                        ; - java.lang.String::equals@78 (line 1017)
                                        ;   {runtime_call}
  0x025fc91d: mov    %eax,(%esp)
  0x025fc920: call   0x025f9dd0         ; OopMap{ebx=Oop [16]=Oop off=325}
                                        ;*caload
                                        ; - java.lang.String::equals@78 (line 1017)
                                        ;   {runtime_call}
  0x025fc925: nop    
  0x025fc926: nop    
  0x025fc927: mov    %fs:0x0,%esi
  0x025fc92f: mov    0xfffffff4(%esi),%esi
  0x025fc932: mov    0x170(%esi),%eax
  0x025fc938: movl   $0x0,0x170(%esi)
  0x025fc942: movl   $0x0,0x174(%esi)
  0x025fc94c: add    $0x18,%esp
  0x025fc94f: pop    %ebp
  0x025fc950: jmp    0x025f9c00         ;   {runtime_call}
  0x025fc955: hlt    
  0x025fc956: hlt    
  0x025fc957: hlt    
  0x025fc958: hlt    
  0x025fc959: hlt    
  0x025fc95a: hlt    
  0x025fc95b: hlt    
  0x025fc95c: hlt    
  0x025fc95d: hlt    
  0x025fc95e: hlt    
  0x025fc95f: hlt    
[Exception Handler]
[Stub Code]
  0x025fc960: call   0x025fb1c0         ;   {no_reloc}
  0x025fc965: push   $0x6dab698c        ;   {external_word}
  0x025fc96a: call   0x025fc96f
  0x025fc96f: pusha  
  0x025fc970: call   0x6d8b2a00         ;   {runtime_call}
  0x025fc975: hlt    
[Deopt Handler Code]
  0x025fc976: push   $0x25fc976         ;   {section_word}
  0x025fc97b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025fcc88:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = int
  # parm1:    [sp+0x30]   = int  (sp of caller)
  0x025fcdb0: nop    
  0x025fcdb1: nop    
  0x025fcdb2: nop    
  0x025fcdb3: nop    
  0x025fcdb4: nop    
  0x025fcdb5: nop    
  0x025fcdb6: nop    
  0x025fcdb7: cmp    0x4(%ecx),%eax
  0x025fcdba: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fcdc0: mov    %eax,0xffffd000(%esp)
  0x025fcdc7: push   %ebp
  0x025fcdc8: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.String::indexOf@0 (line 1564)
  0x025fcdcb: mov    0x30(%esp),%esi
  0x025fcdcf: mov    0xc(%ecx),%edi     ;*getfield offset
                                        ; - java.lang.String::indexOf@1 (line 1564)
  0x025fcdd2: mov    %edi,0x14(%esp)
  0x025fcdd6: mov    0x10(%ecx),%ebx    ;*getfield count
                                        ; - java.lang.String::indexOf@5 (line 1564)
  0x025fcdd9: mov    %ebx,%eax
  0x025fcddb: add    %edi,%eax
  0x025fcddd: mov    %eax,0x10(%esp)
  0x025fcde1: mov    0x8(%ecx),%eax     ;*getfield value
                                        ; - java.lang.String::indexOf@11 (line 1565)
  0x025fcde4: cmp    $0x0,%esi
  0x025fcde7: jge    0x025fcdf7         ;*ifge
                                        ; - java.lang.String::indexOf@17 (line 1567)
  0x025fcded: mov    $0x0,%esi
  0x025fcdf2: jmp    0x025fcdff         ;*goto
                                        ; - java.lang.String::indexOf@22 (line 1568)
  0x025fcdf7: cmp    %ebx,%esi
  0x025fcdf9: jge    0x025fcf1f         ;*if_icmplt
                                        ; - java.lang.String::indexOf@30 (line 1569)
  0x025fcdff: mov    %edi,%ebx
  0x025fce01: add    %esi,%ebx
  0x025fce03: cmp    $0x10000,%edx
  0x025fce09: mov    0x10(%esp),%esi
  0x025fce0d: jge    0x025fce3f
  0x025fce13: jmp    0x025fce35         ;*if_icmpge
                                        ; - java.lang.String::indexOf@46 (line 1575)
  0x025fce18: cmp    0x8(%eax),%ebx     ; implicit exception: dispatches to 0x025fcf2f
  0x025fce1b: jae    0x025fcf39
  0x025fce21: movzwl 0xc(%eax,%ebx,2),%edi  ;*caload
                                        ; - java.lang.String::indexOf@59 (line 1579)
  0x025fce26: cmp    %edx,%edi
  0x025fce28: je     0x025fcefc         ;*if_icmpne
                                        ; - java.lang.String::indexOf@61 (line 1579)
  0x025fce2e: inc    %ebx               ; OopMap{ecx=Oop eax=Oop off=127}
                                        ;*goto
                                        ; - java.lang.String::indexOf@75 (line 1578)
  0x025fce2f: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::indexOf@75 (line 1578)
                                        ;   {poll}
  0x025fce35: cmp    %esi,%ebx
  0x025fce37: jge    0x025fcf0f
  0x025fce3d: jmp    0x025fce18         ;*if_icmpge
                                        ; - java.lang.String::indexOf@52 (line 1578)
  0x025fce3f: cmp    $0x10ffff,%edx
  0x025fce45: jg     0x025fceec         ;*if_icmpgt
                                        ; - java.lang.String::indexOf@83 (line 1586)
  0x025fce4b: mov    %ebx,0x18(%esp)
  0x025fce4f: mov    %eax,0x1c(%esp)
  0x025fce53: mov    %ecx,0x20(%esp)
  0x025fce57: mov    %edx,%ecx          ;*invokestatic toChars
                                        ; - java.lang.String::indexOf@87 (line 1588)
  0x025fce59: nop    
  0x025fce5a: nop    
  0x025fce5b: call   0x025bd340         ; OopMap{[32]=Oop [28]=Oop off=176}
                                        ;*invokestatic toChars
                                        ; - java.lang.String::indexOf@87 (line 1588)
                                        ;   {static_call}
  0x025fce60: mov    0x18(%esp),%ebx    ;*astore
                                        ; - java.lang.String::indexOf@90 (line 1588)
  0x025fce64: mov    0x1c(%esp),%edi
  0x025fce68: mov    0x10(%esp),%esi
  0x025fce6c: cmp    %esi,%ebx
  0x025fce6e: jge    0x025fceec         ;*if_icmpge
                                        ; - java.lang.String::indexOf@95 (line 1589)
  0x025fce74: cmp    0x8(%edi),%ebx     ; implicit exception: dispatches to 0x025fcf41
  0x025fce77: jae    0x025fcf4b
  0x025fce7d: movzwl 0xc(%edi,%ebx,2),%edx  ;*caload
                                        ; - java.lang.String::indexOf@102 (line 1590)
  0x025fce82: cmpl   $0x0,0x8(%eax)     ; implicit exception: dispatches to 0x025fcf53
  0x025fce89: jbe    0x025fcf5d
  0x025fce8f: movzwl 0xc(%eax),%ecx     ;*caload
                                        ; - java.lang.String::indexOf@106 (line 1590)
  0x025fce93: cmp    %ecx,%edx
  0x025fce95: jne    0x025fcecd         ;*if_icmpne
                                        ; - java.lang.String::indexOf@107 (line 1590)
  0x025fce9b: mov    %ebx,%edx
  0x025fce9d: inc    %edx
  0x025fce9e: cmp    %esi,%edx
  0x025fcea0: je     0x025fceec         ;*if_icmpne
                                        ; - java.lang.String::indexOf@115 (line 1591)
  0x025fcea6: cmp    0x8(%edi),%edx
  0x025fcea9: jae    0x025fcf69
  0x025fceaf: movzwl 0xc(%edi,%edx,2),%edx  ;*caload
                                        ; - java.lang.String::indexOf@127 (line 1594)
  0x025fceb4: cmpl   $0x1,0x8(%eax)
  0x025fcebb: jbe    0x025fcf71
  0x025fcec1: movzwl 0xe(%eax),%ecx     ;*caload
                                        ; - java.lang.String::indexOf@131 (line 1594)
  0x025fcec5: cmp    %ecx,%edx
  0x025fcec7: je     0x025fced6         ;*if_icmpne
                                        ; - java.lang.String::indexOf@132 (line 1594)
  0x025fcecd: inc    %ebx               ; OopMap{[32]=Oop eax=Oop edi=Oop off=286}
                                        ;*goto
                                        ; - java.lang.String::indexOf@146 (line 1589)
  0x025fcece: test   %eax,0x200100      ;   {poll}
  0x025fced4: jmp    0x025fce6c         ;*goto
                                        ; - java.lang.String::indexOf@146 (line 1589)
  0x025fced6: mov    0x20(%esp),%ecx
  0x025fceda: mov    0xc(%ecx),%eax     ;*getfield offset
                                        ; - java.lang.String::indexOf@138 (line 1595)
  0x025fcedd: sub    %eax,%ebx
  0x025fcedf: mov    %ebx,%eax
  0x025fcee1: add    $0x28,%esp
  0x025fcee4: pop    %ebp
  0x025fcee5: test   %eax,0x200100      ;   {poll_return}
  0x025fceeb: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@142 (line 1595)
  0x025fceec: mov    $0xffffffff,%eax
  0x025fcef1: add    $0x28,%esp
  0x025fcef4: pop    %ebp
  0x025fcef5: test   %eax,0x200100      ;   {poll_return}
  0x025fcefb: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@150 (line 1600)
  0x025fcefc: mov    0x14(%esp),%edi
  0x025fcf00: sub    %edi,%ebx
  0x025fcf02: mov    %ebx,%eax
  0x025fcf04: add    $0x28,%esp
  0x025fcf07: pop    %ebp
  0x025fcf08: test   %eax,0x200100      ;   {poll_return}
  0x025fcf0e: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@71 (line 1580)
  0x025fcf0f: mov    $0xffffffff,%eax
  0x025fcf14: add    $0x28,%esp
  0x025fcf17: pop    %ebp
  0x025fcf18: test   %eax,0x200100      ;   {poll_return}
  0x025fcf1e: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@79 (line 1583)
  0x025fcf1f: mov    $0xffffffff,%eax
  0x025fcf24: add    $0x28,%esp
  0x025fcf27: pop    %ebp
  0x025fcf28: test   %eax,0x200100      ;   {poll_return}
  0x025fcf2e: ret    
  0x025fcf2f: call   0x025fa0d0         ; OopMap{ecx=Oop eax=Oop off=388}
                                        ;*caload
                                        ; - java.lang.String::indexOf@59 (line 1579)
                                        ;   {runtime_call}
  0x025fcf34: call   0x025fa0d0         ; OopMap{ecx=Oop eax=Oop off=393}
                                        ;*caload
                                        ; - java.lang.String::indexOf@59 (line 1579)
                                        ;   {runtime_call}
  0x025fcf39: mov    %ebx,(%esp)
  0x025fcf3c: call   0x025f9dd0         ; OopMap{ecx=Oop eax=Oop off=401}
                                        ;*caload
                                        ; - java.lang.String::indexOf@59 (line 1579)
                                        ;   {runtime_call}
  0x025fcf41: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=406}
                                        ;*caload
                                        ; - java.lang.String::indexOf@102 (line 1590)
                                        ;   {runtime_call}
  0x025fcf46: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=411}
                                        ;*caload
                                        ; - java.lang.String::indexOf@102 (line 1590)
                                        ;   {runtime_call}
  0x025fcf4b: mov    %ebx,(%esp)
  0x025fcf4e: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=419}
                                        ;*caload
                                        ; - java.lang.String::indexOf@102 (line 1590)
                                        ;   {runtime_call}
  0x025fcf53: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=424}
                                        ;*caload
                                        ; - java.lang.String::indexOf@106 (line 1590)
                                        ;   {runtime_call}
  0x025fcf58: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=429}
                                        ;*caload
                                        ; - java.lang.String::indexOf@106 (line 1590)
                                        ;   {runtime_call}
  0x025fcf5d: movl   $0x0,(%esp)
  0x025fcf64: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=441}
                                        ;*caload
                                        ; - java.lang.String::indexOf@106 (line 1590)
                                        ;   {runtime_call}
  0x025fcf69: mov    %edx,(%esp)
  0x025fcf6c: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=449}
                                        ;*caload
                                        ; - java.lang.String::indexOf@127 (line 1594)
                                        ;   {runtime_call}
  0x025fcf71: movl   $0x1,(%esp)
  0x025fcf78: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop edi=Oop off=461}
                                        ;*caload
                                        ; - java.lang.String::indexOf@131 (line 1594)
                                        ;   {runtime_call}
  0x025fcf7d: nop    
  0x025fcf7e: nop    
  0x025fcf7f: mov    %fs:0x0,%esi
  0x025fcf87: mov    0xfffffff4(%esi),%esi
  0x025fcf8a: mov    0x170(%esi),%eax
  0x025fcf90: movl   $0x0,0x170(%esi)
  0x025fcf9a: movl   $0x0,0x174(%esi)
  0x025fcfa4: add    $0x28,%esp
  0x025fcfa7: pop    %ebp
  0x025fcfa8: jmp    0x025f9c00         ;   {runtime_call}
  0x025fcfad: hlt    
  0x025fcfae: hlt    
  0x025fcfaf: hlt    
[Stub Code]
  0x025fcfb0: nop                       ;   {no_reloc}
  0x025fcfb1: nop    
  0x025fcfb2: mov    $0x0,%ebx          ;   {static_stub}
  0x025fcfb7: jmp    0x025fcfb7         ;   {runtime_call}
[Exception Handler]
  0x025fcfbc: call   0x025fb1c0         ;   {runtime_call}
  0x025fcfc1: push   $0x6dab698c        ;   {external_word}
  0x025fcfc6: call   0x025fcfcb
  0x025fcfcb: pusha  
  0x025fcfcc: call   0x6d8b2a00         ;   {runtime_call}
  0x025fcfd1: hlt    
[Deopt Handler Code]
  0x025fcfd2: push   $0x25fcfd2         ;   {section_word}
  0x025fcfd7: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025fd408:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'charAt' '(I)C' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = int
  #           [sp+0x20]  (sp of caller)
  0x025fd510: nop    
  0x025fd511: nop    
  0x025fd512: nop    
  0x025fd513: nop    
  0x025fd514: nop    
  0x025fd515: nop    
  0x025fd516: nop    
  0x025fd517: cmp    0x4(%ecx),%eax
  0x025fd51a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fd520: mov    %eax,0xffffd000(%esp)
  0x025fd527: push   %ebp
  0x025fd528: sub    $0x18,%esp
  0x025fd52b: mov    %edx,%esi          ;*iload_1
                                        ; - java.lang.String::charAt@0 (line 685)
  0x025fd52d: cmp    $0x0,%esi
  0x025fd530: jl     0x025fd562         ;*iflt
                                        ; - java.lang.String::charAt@1 (line 685)
  0x025fd536: mov    0x10(%ecx),%eax    ;*getfield count
                                        ; - java.lang.String::charAt@6 (line 685)
  0x025fd539: cmp    %eax,%esi
  0x025fd53b: jge    0x025fd562         ;*if_icmplt
                                        ; - java.lang.String::charAt@9 (line 685)
  0x025fd541: mov    0x8(%ecx),%eax     ;*getfield value
                                        ; - java.lang.String::charAt@22 (line 688)
  0x025fd544: mov    0xc(%ecx),%edx     ;*getfield offset
                                        ; - java.lang.String::charAt@27 (line 688)
  0x025fd547: add    %esi,%edx
  0x025fd549: cmp    0x8(%eax),%edx     ; implicit exception: dispatches to 0x025fd589
  0x025fd54c: jae    0x025fd593
  0x025fd552: movzwl 0xc(%eax,%edx,2),%eax  ;*caload
                                        ; - java.lang.String::charAt@31 (line 688)
  0x025fd557: add    $0x18,%esp
  0x025fd55a: pop    %ebp
  0x025fd55b: test   %eax,0x200100      ;   {poll_return}
  0x025fd561: ret                       ;*ireturn
                                        ; - java.lang.String::charAt@32 (line 688)
  0x025fd562: nopw   0x0(%eax,%eax,1)
  0x025fd568: jmp    0x025fd5c0         ;   {no_reloc}
  0x025fd56d: jmp    0x025fd5ca         ;*new  ; - java.lang.String::charAt@12 (line 686)
  0x025fd572: mov    %esi,%edx
  0x025fd574: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::charAt@17 (line 686)
  0x025fd576: mov    %eax,0x10(%esp)
  0x025fd57a: nop    
  0x025fd57b: call   0x025bcf40         ; OopMap{[16]=Oop off=112}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::charAt@17 (line 686)
                                        ;   {optimized virtual_call}
  0x025fd580: mov    0x10(%esp),%eax
  0x025fd584: jmp    0x025fd5fa
  0x025fd589: call   0x025fa0d0         ; OopMap{eax=Oop off=126}
                                        ;*caload
                                        ; - java.lang.String::charAt@31 (line 688)
                                        ;   {runtime_call}
  0x025fd58e: call   0x025fa0d0         ; OopMap{eax=Oop off=131}
                                        ;*caload
                                        ; - java.lang.String::charAt@31 (line 688)
                                        ;   {runtime_call}
  0x025fd593: mov    %edx,(%esp)
  0x025fd596: call   0x025f9dd0         ; OopMap{eax=Oop off=139}
                                        ;*caload
                                        ; - java.lang.String::charAt@31 (line 688)
                                        ;   {runtime_call}
  0x025fd59b: mov    $0x0,%edx          ;   {oop(NULL)}
  0x025fd5a0: push   %eax
  0x025fd5a1: mov    %fs:0x0,%eax
  0x025fd5a9: mov    0xfffffff4(%eax),%eax
  0x025fd5ac: cmp    0xe8(%edx),%eax
  0x025fd5b2: pop    %eax
  0x025fd5b3: jne    0x025fd5c0
  0x025fd5b9: jmp    0x025fd56d
  0x025fd5bb: mov    $0x5202500,%eax
  0x025fd5c0: call   0x025fbd40         ; OopMap{off=181}
                                        ;*new  ; - java.lang.String::charAt@12 (line 686)
                                        ;   {runtime_call}
  0x025fd5c5: jmp    0x025fd568
  0x025fd5c7: nop    
  0x025fd5c8: nop    
  0x025fd5c9: nop    
  0x025fd5ca: mov    %edx,%edx
  0x025fd5cc: call   0x025fa300         ; OopMap{off=193}
                                        ;*new  ; - java.lang.String::charAt@12 (line 686)
                                        ;   {runtime_call}
  0x025fd5d1: jmp    0x025fd572
  0x025fd5d3: nop    
  0x025fd5d4: nop    
  0x025fd5d5: mov    %fs:0x0,%esi
  0x025fd5dd: mov    0xfffffff4(%esi),%esi
  0x025fd5e0: mov    0x170(%esi),%eax
  0x025fd5e6: movl   $0x0,0x170(%esi)
  0x025fd5f0: movl   $0x0,0x174(%esi)
  0x025fd5fa: add    $0x18,%esp
  0x025fd5fd: pop    %ebp
  0x025fd5fe: jmp    0x025f9c00         ;   {runtime_call}
  0x025fd603: hlt    
  0x025fd604: hlt    
  0x025fd605: hlt    
  0x025fd606: hlt    
  0x025fd607: hlt    
  0x025fd608: hlt    
  0x025fd609: hlt    
  0x025fd60a: hlt    
  0x025fd60b: hlt    
  0x025fd60c: hlt    
  0x025fd60d: hlt    
  0x025fd60e: hlt    
  0x025fd60f: hlt    
[Stub Code]
  0x025fd610: nop                       ;   {no_reloc}
  0x025fd611: nop    
  0x025fd612: mov    $0x0,%ebx          ;   {static_stub}
  0x025fd617: jmp    0x025fd617         ;   {runtime_call}
[Exception Handler]
  0x025fd61c: call   0x025fb1c0         ;   {runtime_call}
  0x025fd621: push   $0x6dab698c        ;   {external_word}
  0x025fd626: call   0x025fd62b
  0x025fd62b: pusha  
  0x025fd62c: call   0x6d8b2a00         ;   {runtime_call}
  0x025fd631: hlt    
[Deopt Handler Code]
  0x025fd632: push   $0x25fd632         ;   {section_word}
  0x025fd637: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025fd808:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'toLowerCase' '(Ljava/util/Locale;)Ljava/lang/String;' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = 'java/util/Locale'
  #           [sp+0x70]  (sp of caller)
  0x025fd9d0: nop    
  0x025fd9d1: nop    
  0x025fd9d2: nop    
  0x025fd9d3: nop    
  0x025fd9d4: nop    
  0x025fd9d5: nop    
  0x025fd9d6: nop    
  0x025fd9d7: cmp    0x4(%ecx),%eax
  0x025fd9da: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fd9e0: mov    %eax,0xffffd000(%esp)
  0x025fd9e7: push   %ebp
  0x025fd9e8: sub    $0x68,%esp         ;*aload_1
                                        ; - java.lang.String::toLowerCase@0 (line 2390)
  0x025fd9eb: mov    %ecx,0x28(%esp)
  0x025fd9ef: mov    %edx,0x2c(%esp)
  0x025fd9f3: cmp    $0x0,%edx
  0x025fd9f6: je     0x025fdf5d         ;*ifnonnull
                                        ; - java.lang.String::toLowerCase@1 (line 2390)
  0x025fd9fc: mov    $0x0,%esi          ;*istore_2
                                        ; - java.lang.String::toLowerCase@13 (line 2398)
  0x025fda01: xchg   %ax,%ax
  0x025fda04: mov    0x10(%ecx),%edi    ;*getfield count
                                        ; - java.lang.String::toLowerCase@16 (line 2398)
  0x025fda07: cmp    %edi,%esi
  0x025fda09: jge    0x025fdf50         ;*if_icmpge
                                        ; - java.lang.String::toLowerCase@19 (line 2398)
  0x025fda0f: mov    0x8(%ecx),%edi     ;*getfield value
                                        ; - java.lang.String::toLowerCase@23 (line 2399)
  0x025fda12: mov    0xc(%ecx),%ebx     ;*getfield offset
                                        ; - java.lang.String::toLowerCase@27 (line 2399)
  0x025fda15: add    %esi,%ebx
  0x025fda17: cmp    0x8(%edi),%ebx     ; implicit exception: dispatches to 0x025fdfa9
  0x025fda1a: jae    0x025fdfb3
  0x025fda20: movzwl 0xc(%edi,%ebx,2),%edi  ;*caload
                                        ; - java.lang.String::toLowerCase@32 (line 2399)
  0x025fda25: cmp    $0xd800,%edi
  0x025fda2b: jl     0x025fda3d         ;*if_icmplt
                                        ; - java.lang.String::toLowerCase@37 (line 2400)
  0x025fda31: cmp    $0xdbff,%edi
  0x025fda37: jle    0x025fda68         ;*if_icmpgt
                                        ; - java.lang.String::toLowerCase@43 (line 2400)
  0x025fda3d: mov    %esi,0x24(%esp)
  0x025fda41: mov    %edi,%ecx          ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@1 (line 4175)
                                        ; - java.lang.String::toLowerCase@79 (line 2408)
  0x025fda43: mov    %edi,0x20(%esp)
  0x025fda47: call   0x025bd340         ; OopMap{[40]=Oop [44]=Oop off=124}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@1 (line 4175)
                                        ; - java.lang.String::toLowerCase@79 (line 2408)
                                        ;   {static_call}
  0x025fda4c: and    $0xffff,%eax
  0x025fda52: mov    0x20(%esp),%edi
  0x025fda56: cmp    %eax,%edi
  0x025fda58: jne    0x025fdabf         ;*if_icmpeq
                                        ; - java.lang.String::toLowerCase@82 (line 2408)
  0x025fda5e: mov    0x24(%esp),%esi
  0x025fda62: inc    %esi
  0x025fda63: jmp    0x025fdab0         ;*iinc
                                        ; - java.lang.String::toLowerCase@88 (line 2411)
  0x025fda68: mov    %esi,0x24(%esp)
  0x025fda6c: mov    0x24(%esp),%edx
  0x025fda70: mov    0x28(%esp),%ecx    ;*invokevirtual codePointAt
                                        ; - java.lang.String::toLowerCase@48 (line 2402)
  0x025fda74: nop    
  0x025fda75: nop    
  0x025fda76: nop    
  0x025fda77: call   0x025bcf40         ; OopMap{[40]=Oop [44]=Oop off=172}
                                        ;*invokevirtual codePointAt
                                        ; - java.lang.String::toLowerCase@48 (line 2402)
                                        ;   {optimized virtual_call}
  0x025fda7c: mov    %eax,%ecx          ;*invokestatic toLowerCase
                                        ; - java.lang.String::toLowerCase@57 (line 2403)
  0x025fda7e: mov    %eax,0x30(%esp)
  0x025fda82: nop    
  0x025fda83: call   0x025bd340         ; OopMap{[40]=Oop [44]=Oop off=184}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.String::toLowerCase@57 (line 2403)
                                        ;   {static_call}
  0x025fda88: mov    0x30(%esp),%ebx
  0x025fda8c: cmp    %eax,%ebx
  0x025fda8e: jne    0x025fdabf         ;*if_icmpeq
                                        ; - java.lang.String::toLowerCase@60 (line 2403)
  0x025fda94: cmp    $0x10000,%ebx
  0x025fda9a: mov    $0x1,%ebx
  0x025fda9f: jl     0x025fdaaa
  0x025fdaa5: mov    $0x2,%ebx
  0x025fdaaa: add    0x24(%esp),%ebx
  0x025fdaae: mov    %ebx,%esi          ; OopMap{[40]=Oop [44]=Oop off=224}
                                        ;*goto
                                        ; - java.lang.String::toLowerCase@91 (line 2413)
  0x025fdab0: test   %eax,0x200100      ;   {poll}
  0x025fdab6: mov    0x28(%esp),%ecx
  0x025fdaba: jmp    0x025fda04         ;*goto
                                        ; - java.lang.String::toLowerCase@91 (line 2413)
  0x025fdabf: mov    0x28(%esp),%ecx
  0x025fdac3: mov    0x10(%ecx),%ebx    ;*getfield count
                                        ; - java.lang.String::toLowerCase@97 (line 2417)
  0x025fdac6: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x025fdacb: mov    %ebx,%edi
  0x025fdacd: cmp    $0xffffff,%ebx
  0x025fdad3: ja     0x025fdfbb
  0x025fdad9: mov    $0x13,%esi
  0x025fdade: lea    (%esi,%ebx,2),%esi
  0x025fdae1: and    $0xfffffff8,%esi
  0x025fdae4: mov    %fs:0x0,%ecx
  0x025fdaec: mov    0xfffffff4(%ecx),%ecx
  0x025fdaef: mov    0x34(%ecx),%eax
  0x025fdaf2: lea    (%eax,%esi,1),%esi
  0x025fdaf5: cmp    0x3c(%ecx),%esi
  0x025fdaf8: ja     0x025fdfbb
  0x025fdafe: mov    %esi,0x34(%ecx)
  0x025fdb01: sub    %eax,%esi
  0x025fdb03: movl   $0x1,(%eax)
  0x025fdb09: mov    %edx,0x4(%eax)
  0x025fdb0c: mov    %ebx,0x8(%eax)
  0x025fdb0f: sub    $0xc,%esi
  0x025fdb12: je     0x025fdb38
  0x025fdb18: xor    %ebx,%ebx
  0x025fdb1a: shr    $0x3,%esi
  0x025fdb1d: jae    0x025fdb2d
  0x025fdb23: mov    %ebx,0xc(%eax,%esi,8)
  0x025fdb27: je     0x025fdb38
  0x025fdb2d: mov    %ebx,0x8(%eax,%esi,8)
  0x025fdb31: mov    %ebx,0x4(%eax,%esi,8)
  0x025fdb35: dec    %esi
  0x025fdb36: jne    0x025fdb2d         ;*newarray
                                        ; - java.lang.String::toLowerCase@100 (line 2417)
  0x025fdb38: mov    0x28(%esp),%ecx
  0x025fdb3c: mov    0x8(%ecx),%edx     ;*getfield value
                                        ; - java.lang.String::toLowerCase@107 (line 2422)
  0x025fdb3f: mov    0xc(%ecx),%ebx     ;*getfield offset
                                        ; - java.lang.String::toLowerCase@111 (line 2422)
  0x025fdb42: mov    %edx,%ecx
  0x025fdb44: mov    %ebx,%edx
  0x025fdb46: mov    %eax,%edi
  0x025fdb48: mov    %edi,%eax
  0x025fdb4a: mov    $0x0,%ebx
  0x025fdb4f: mov    %edi,0x34(%esp)
  0x025fdb53: mov    0x24(%esp),%edi
  0x025fdb57: test   %ecx,%ecx
  0x025fdb59: je     0x025fdfc5
  0x025fdb5f: test   %edx,%edx
  0x025fdb61: jl     0x025fdfc5
  0x025fdb67: test   %edi,%edi
  0x025fdb69: jl     0x025fdfc5
  0x025fdb6f: lea    (%edx,%edi,1),%esi
  0x025fdb72: cmp    0x8(%ecx),%esi
  0x025fdb75: ja     0x025fdfc5
  0x025fdb7b: lea    (%ebx,%edi,1),%esi
  0x025fdb7e: cmp    0x8(%eax),%esi
  0x025fdb81: ja     0x025fdfc5
  0x025fdb87: shl    %edi
  0x025fdb89: lea    0xc(%ecx,%edx,2),%esi
  0x025fdb8d: mov    %esi,(%esp)
  0x025fdb90: lea    0xc(%eax,%ebx,2),%esi
  0x025fdb94: mov    %esi,0x4(%esp)
  0x025fdb98: mov    %edi,0x8(%esp)
  0x025fdb9c: call   0x6d8fadf0         ;*invokestatic arraycopy
                                        ; - java.lang.String::toLowerCase@117 (line 2422)
                                        ;   {runtime_call}
  0x025fdba1: mov    0x2c(%esp),%edx
  0x025fdba5: mov    0x10(%edx),%ecx    ;*getfield language
                                        ; - java.util.Locale::getLanguage@1 (line 509)
                                        ; - java.lang.String::toLowerCase@121 (line 2424)
                                        ; implicit exception: dispatches to 0x025fdfdd
  0x025fdba8: cmp    $0x146fbc70,%ecx   ;   {oop("tr")}
  0x025fdbae: je     0x025fdbc0         ;*if_acmpeq
                                        ; - java.lang.String::toLowerCase@130 (line 2425)
  0x025fdbb4: cmp    $0x146fbc98,%ecx   ;   {oop("az")}
  0x025fdbba: jne    0x025fdbca         ;*if_acmpeq
                                        ; - java.lang.String::toLowerCase@137 (line 2425)
  0x025fdbc0: mov    $0x1,%esi
  0x025fdbc5: jmp    0x025fdbe3         ;*goto
                                        ; - java.lang.String::toLowerCase@148 (line 2425)
  0x025fdbca: mov    $0x146fbcc0,%esi   ;   {oop("lt")}
  0x025fdbcf: cmp    %esi,%ecx
  0x025fdbd1: mov    $0x0,%ecx
  0x025fdbd6: jne    0x025fdbe1
  0x025fdbdc: mov    $0x1,%ecx
  0x025fdbe1: mov    %ecx,%esi          ;*istore
                                        ; - java.lang.String::toLowerCase@152 (line 2425)
  0x025fdbe3: mov    0x34(%esp),%eax
  0x025fdbe7: mov    0x24(%esp),%ecx
  0x025fdbeb: mov    %ecx,%edi
  0x025fdbed: mov    $0x0,%ebx          ;*istore
                                        ; - java.lang.String::toLowerCase@155 (line 2431)
  0x025fdbf2: mov    %ebx,0x3c(%esp)
  0x025fdbf6: mov    %eax,0x44(%esp)
  0x025fdbfa: mov    %esi,0x38(%esp)
  0x025fdbfe: xchg   %ax,%ax
  0x025fdc00: mov    0x28(%esp),%ecx
  0x025fdc04: mov    0x10(%ecx),%esi    ;*getfield count
                                        ; - java.lang.String::toLowerCase@160 (line 2431)
  0x025fdc07: cmp    %esi,%edi
  0x025fdc09: jge    0x025fdeeb         ;*if_icmpge
                                        ; - java.lang.String::toLowerCase@163 (line 2431)
  0x025fdc0f: mov    0x8(%ecx),%esi     ;*getfield value
                                        ; - java.lang.String::toLowerCase@167 (line 2432)
  0x025fdc12: mov    0xc(%ecx),%ebx     ;*getfield offset
                                        ; - java.lang.String::toLowerCase@171 (line 2432)
  0x025fdc15: add    %edi,%ebx
  0x025fdc17: cmp    0x8(%esi),%ebx     ; implicit exception: dispatches to 0x025fdfe2
  0x025fdc1a: jae    0x025fdfec
  0x025fdc20: movzwl 0xc(%esi,%ebx,2),%esi  ;*caload
                                        ; - java.lang.String::toLowerCase@177 (line 2432)
  0x025fdc25: cmp    $0xd800,%esi
  0x025fdc2b: jl     0x025fdc3d         ;*if_icmplt
                                        ; - java.lang.String::toLowerCase@185 (line 2433)
  0x025fdc31: cmp    $0xdbff,%esi
  0x025fdc37: jle    0x025fdc4b         ;*if_icmpgt
                                        ; - java.lang.String::toLowerCase@193 (line 2433)
  0x025fdc3d: mov    $0x1,%ebx
  0x025fdc42: mov    %edi,0x40(%esp)
  0x025fdc46: jmp    0x025fdc76         ;*istore
                                        ; - java.lang.String::toLowerCase@215 (line 2438)
  0x025fdc4b: mov    %edi,%edx
  0x025fdc4d: mov    0x28(%esp),%ecx    ;*invokevirtual codePointAt
                                        ; - java.lang.String::toLowerCase@199 (line 2435)
  0x025fdc51: mov    %edi,0x40(%esp)
  0x025fdc55: nop    
  0x025fdc56: nop    
  0x025fdc57: call   0x025bcf40         ; OopMap{[44]=Oop [40]=Oop [68]=Oop off=652}
                                        ;*invokevirtual codePointAt
                                        ; - java.lang.String::toLowerCase@199 (line 2435)
                                        ;   {optimized virtual_call}
  0x025fdc5c: cmp    $0x10000,%eax
  0x025fdc62: mov    $0x1,%ecx
  0x025fdc67: jl     0x025fdc72
  0x025fdc6d: mov    $0x2,%ecx
  0x025fdc72: mov    %ecx,%ebx
  0x025fdc74: mov    %eax,%esi          ;*goto
                                        ; - java.lang.String::toLowerCase@211 (line 2436)
  0x025fdc76: mov    0x38(%esp),%edi
  0x025fdc7a: cmp    $0x0,%edi
  0x025fdc7d: jne    0x025fdc8f         ;*ifne
                                        ; - java.lang.String::toLowerCase@219 (line 2440)
  0x025fdc83: cmp    $0x3a3,%esi
  0x025fdc89: jne    0x025fdcb5         ;*if_icmpne
                                        ; - java.lang.String::toLowerCase@227 (line 2440)
  0x025fdc8f: mov    %ebx,0x48(%esp)
  0x025fdc93: mov    %edi,0x38(%esp)
  0x025fdc97: mov    0x2c(%esp),%edx
  0x025fdc9b: mov    0x28(%esp),%ecx
  0x025fdc9f: mov    %edx,%edi
  0x025fdca1: mov    0x40(%esp),%edx
  0x025fdca5: mov    %edi,(%esp)        ;*invokestatic toLowerCaseEx
                                        ; - java.lang.String::toLowerCase@234 (line 2441)
  0x025fdca8: nop    
  0x025fdca9: nop    
  0x025fdcaa: nop    
  0x025fdcab: call   0x025bd340         ; OopMap{[40]=Oop [68]=Oop [44]=Oop off=736}
                                        ;*invokestatic toLowerCaseEx
                                        ; - java.lang.String::toLowerCase@234 (line 2441)
                                        ;   {static_call}
  0x025fdcb0: jmp    0x025fdcc4         ;*goto
                                        ; - java.lang.String::toLowerCase@239 (line 2441)
  0x025fdcb5: mov    %ebx,0x48(%esp)
  0x025fdcb9: mov    %edi,0x38(%esp)
  0x025fdcbd: mov    %esi,%ecx          ;*invokestatic toLowerCase
                                        ; - java.lang.String::toLowerCase@244 (line 2443)
  0x025fdcbf: call   0x025bd340         ; OopMap{[40]=Oop [68]=Oop [44]=Oop off=756}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.String::toLowerCase@244 (line 2443)
                                        ;   {static_call}
  0x025fdcc4: cmp    $0xffffffff,%eax
  0x025fdcc7: je     0x025fdcd9         ;*if_icmpeq
                                        ; - java.lang.String::toLowerCase@252 (line 2445)
  0x025fdccd: cmp    $0x10000,%eax
  0x025fdcd3: jl     0x025fdeaa         ;*if_icmplt
                                        ; - java.lang.String::toLowerCase@259 (line 2445)
  0x025fdcd9: cmp    $0xffffffff,%eax
  0x025fdcdc: jne    0x025fdcfd         ;*if_icmpne
                                        ; - java.lang.String::toLowerCase@265 (line 2447)
  0x025fdce2: mov    0x2c(%esp),%edx
  0x025fdce6: mov    0x28(%esp),%ecx
  0x025fdcea: mov    %edx,%esi
  0x025fdcec: mov    0x40(%esp),%edx
  0x025fdcf0: mov    %esi,(%esp)        ;*invokestatic toLowerCaseCharArray
                                        ; - java.lang.String::toLowerCase@272 (line 2448)
  0x025fdcf3: call   0x025bd340         ; OopMap{[40]=Oop [68]=Oop [44]=Oop off=808}
                                        ;*invokestatic toLowerCaseCharArray
                                        ; - java.lang.String::toLowerCase@272 (line 2448)
                                        ;   {static_call}
  0x025fdcf8: jmp    0x025fdd3c         ;*goto
                                        ; - java.lang.String::toLowerCase@277 (line 2448)
  0x025fdcfd: mov    0x48(%esp),%ebx
  0x025fdd01: cmp    $0x2,%ebx
  0x025fdd04: mov    %ebx,0x48(%esp)
  0x025fdd08: jne    0x025fdd35         ;*if_icmpne
                                        ; - java.lang.String::toLowerCase@283 (line 2450)
  0x025fdd0e: mov    0x3c(%esp),%esi
  0x025fdd12: add    0x40(%esp),%esi
  0x025fdd16: mov    %eax,%ecx
  0x025fdd18: mov    0x44(%esp),%edx
  0x025fdd1c: mov    %esi,(%esp)        ;*invokestatic toChars
                                        ; - java.lang.String::toLowerCase@296 (line 2451)
  0x025fdd1f: call   0x025bd340         ; OopMap{[40]=Oop [68]=Oop [44]=Oop off=852}
                                        ;*invokestatic toChars
                                        ; - java.lang.String::toLowerCase@296 (line 2451)
                                        ;   {static_call}
  0x025fdd24: sub    0x48(%esp),%eax
  0x025fdd28: add    0x3c(%esp),%eax
  0x025fdd2c: mov    0x44(%esp),%esi
  0x025fdd30: jmp    0x025fdeca         ;*goto
                                        ; - java.lang.String::toLowerCase@305 (line 2452)
  0x025fdd35: mov    %eax,%ecx          ;*invokestatic toChars
                                        ; - java.lang.String::toLowerCase@310 (line 2454)
  0x025fdd37: call   0x025bd340         ; OopMap{[40]=Oop [44]=Oop [68]=Oop off=876}
                                        ;*invokestatic toChars
                                        ; - java.lang.String::toLowerCase@310 (line 2454)
                                        ;   {static_call}
  0x025fdd3c: mov    0x8(%eax),%esi     ;*arraylength
                                        ; - java.lang.String::toLowerCase@317 (line 2458)
                                        ; implicit exception: dispatches to 0x025fdff4
  0x025fdd3f: cmp    0x48(%esp),%esi
  0x025fdd43: jg     0x025fdd5a
  0x025fdd49: mov    0x44(%esp),%edi
  0x025fdd4d: mov    %esi,0x4c(%esp)
  0x025fdd51: mov    %eax,0x50(%esp)
  0x025fdd55: jmp    0x025fde55         ;*if_icmple
                                        ; - java.lang.String::toLowerCase@324 (line 2459)
  0x025fdd5a: mov    %eax,0x50(%esp)
  0x025fdd5e: mov    0x44(%esp),%eax
  0x025fdd62: mov    0x8(%eax),%ebx     ;*arraylength
                                        ; - java.lang.String::toLowerCase@328 (line 2460)
                                        ; implicit exception: dispatches to 0x025fdff9
  0x025fdd65: add    %esi,%ebx
  0x025fdd67: sub    0x48(%esp),%ebx
  0x025fdd6b: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x025fdd70: mov    %esi,0x4c(%esp)
  0x025fdd74: mov    %eax,0x44(%esp)
  0x025fdd78: mov    %ebx,%edi
  0x025fdd7a: cmp    $0xffffff,%ebx
  0x025fdd80: ja     0x025fdffe
  0x025fdd86: mov    $0x13,%esi
  0x025fdd8b: lea    (%esi,%ebx,2),%esi
  0x025fdd8e: and    $0xfffffff8,%esi
  0x025fdd91: mov    %fs:0x0,%ecx
  0x025fdd99: mov    0xfffffff4(%ecx),%ecx
  0x025fdd9c: mov    0x34(%ecx),%eax
  0x025fdd9f: lea    (%eax,%esi,1),%esi
  0x025fdda2: cmp    0x3c(%ecx),%esi
  0x025fdda5: ja     0x025fdffe
  0x025fddab: mov    %esi,0x34(%ecx)
  0x025fddae: sub    %eax,%esi
  0x025fddb0: movl   $0x1,(%eax)
  0x025fddb6: mov    %edx,0x4(%eax)
  0x025fddb9: mov    %ebx,0x8(%eax)
  0x025fddbc: sub    $0xc,%esi
  0x025fddbf: je     0x025fdde5
  0x025fddc5: xor    %ebx,%ebx
  0x025fddc7: shr    $0x3,%esi
  0x025fddca: jae    0x025fddda
  0x025fddd0: mov    %ebx,0xc(%eax,%esi,8)
  0x025fddd4: je     0x025fdde5
  0x025fddda: mov    %ebx,0x8(%eax,%esi,8)
  0x025fddde: mov    %ebx,0x4(%eax,%esi,8)
  0x025fdde2: dec    %esi
  0x025fdde3: jne    0x025fddda         ;*newarray
                                        ; - java.lang.String::toLowerCase@335 (line 2460)
  0x025fdde5: mov    0x3c(%esp),%edi
  0x025fdde9: add    0x40(%esp),%edi
  0x025fdded: mov    0x44(%esp),%ecx
  0x025fddf1: mov    $0x0,%edx
  0x025fddf6: mov    %eax,%esi
  0x025fddf8: mov    %esi,%eax
  0x025fddfa: mov    $0x0,%ebx
  0x025fddff: mov    %esi,0x54(%esp)
  0x025fde03: test   %ecx,%ecx
  0x025fde05: je     0x025fe008
  0x025fde0b: test   %edi,%edi
  0x025fde0d: jl     0x025fe008
  0x025fde13: lea    (%edx,%edi,1),%esi
  0x025fde16: cmp    0x8(%ecx),%esi
  0x025fde19: ja     0x025fe008
  0x025fde1f: lea    (%ebx,%edi,1),%esi
  0x025fde22: cmp    0x8(%eax),%esi
  0x025fde25: ja     0x025fe008
  0x025fde2b: mov    0x4(%ecx),%esi
  0x025fde2e: cmp    0x4(%eax),%esi
  0x025fde31: jne    0x025fe008
  0x025fde37: shl    %edi
  0x025fde39: lea    0xc(%ecx,%edx,2),%esi
  0x025fde3d: mov    %esi,(%esp)
  0x025fde40: lea    0xc(%eax,%ebx,2),%esi
  0x025fde44: mov    %esi,0x4(%esp)
  0x025fde48: mov    %edi,0x8(%esp)
  0x025fde4c: call   0x6d8fadf0         ;*invokestatic arraycopy
                                        ; - java.lang.String::toLowerCase@349 (line 2461)
                                        ;   {runtime_call}
  0x025fde51: mov    0x54(%esp),%edi    ;*astore_3
                                        ; - java.lang.String::toLowerCase@354 (line 2463)
  0x025fde55: mov    $0x0,%edx
  0x025fde5a: mov    0x4c(%esp),%esi
  0x025fde5e: mov    0x50(%esp),%eax
  0x025fde62: jmp    0x025fde95         ;*istore
                                        ; - java.lang.String::toLowerCase@356 (line 2465)
  0x025fde67: nop    
  0x025fde68: cmp    0x8(%eax),%edx
  0x025fde6b: jae    0x025fe01d
  0x025fde71: movzwl 0xc(%eax,%edx,2),%ecx  ;*caload
                                        ; - java.lang.String::toLowerCase@378 (line 2466)
  0x025fde76: mov    0x3c(%esp),%ebx
  0x025fde7a: add    0x40(%esp),%ebx
  0x025fde7e: add    %edx,%ebx
  0x025fde80: cmp    0x8(%edi),%ebx     ; implicit exception: dispatches to 0x025fe025
  0x025fde83: jae    0x025fe02f
  0x025fde89: mov    %cx,0xc(%edi,%ebx,2)  ;*castore
                                        ; - java.lang.String::toLowerCase@379 (line 2466)
  0x025fde8e: inc    %edx               ; OopMap{[40]=Oop [44]=Oop edi=Oop eax=Oop off=1215}
                                        ;*goto
                                        ; - java.lang.String::toLowerCase@383 (line 2465)
  0x025fde8f: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::toLowerCase@383 (line 2465)
                                        ;   {poll}
  0x025fde95: cmp    %esi,%edx
  0x025fde97: jl     0x025fde68         ;*if_icmpge
                                        ; - java.lang.String::toLowerCase@362 (line 2465)
  0x025fde99: sub    0x48(%esp),%esi
  0x025fde9d: add    0x3c(%esp),%esi
  0x025fdea1: mov    %esi,%eax
  0x025fdea3: mov    %edi,%esi
  0x025fdea5: jmp    0x025fdeca         ;*goto
                                        ; - java.lang.String::toLowerCase@396 (line 2469)
  0x025fdeaa: mov    0x44(%esp),%ebx
  0x025fdeae: mov    0x3c(%esp),%edx
  0x025fdeb2: add    0x40(%esp),%edx
  0x025fdeb6: cmp    0x8(%ebx),%edx     ; implicit exception: dispatches to 0x025fe037
  0x025fdeb9: jae    0x025fe041
  0x025fdebf: mov    %ax,0xc(%ebx,%edx,2)
  0x025fdec4: mov    0x3c(%esp),%eax
  0x025fdec8: mov    %ebx,%esi          ;*castore
                                        ; - java.lang.String::toLowerCase@408 (line 2470)
  0x025fdeca: mov    0x48(%esp),%ebx
  0x025fdece: add    0x40(%esp),%ebx    ; OopMap{[40]=Oop [44]=Oop esi=Oop off=1282}
                                        ;*goto
                                        ; - java.lang.String::toLowerCase@416 (line 2431)
  0x025fded2: test   %eax,0x200100      ;   {poll}
  0x025fded8: mov    %ebx,%edi
  0x025fdeda: mov    %eax,%ebx
  0x025fdedc: mov    %ebx,0x3c(%esp)
  0x025fdee0: mov    %esi,%ebx
  0x025fdee2: mov    %ebx,0x44(%esp)
  0x025fdee6: jmp    0x025fdc00         ;*goto
                                        ; - java.lang.String::toLowerCase@416 (line 2431)
  0x025fdeeb: mov    %esi,0x58(%esp)
  0x025fdeef: mov    0x44(%esp),%ebx
  0x025fdef3: mov    $0x1459d4b0,%edx   ;   {oop('java/lang/String')}
  0x025fdef8: mov    %fs:0x0,%ecx
  0x025fdf00: mov    0xfffffff4(%ecx),%ecx
  0x025fdf03: mov    0x34(%ecx),%eax
  0x025fdf06: lea    0x18(%eax),%edi
  0x025fdf09: cmp    0x3c(%ecx),%edi
  0x025fdf0c: ja     0x025fe049
  0x025fdf12: mov    %edi,0x34(%ecx)
  0x025fdf15: mov    0x68(%edx),%ecx
  0x025fdf18: mov    %ecx,(%eax)
  0x025fdf1a: mov    %edx,0x4(%eax)
  0x025fdf1d: xor    %ecx,%ecx
  0x025fdf1f: mov    %ecx,0x8(%eax)
  0x025fdf22: mov    %ecx,0xc(%eax)
  0x025fdf25: mov    %ecx,0x10(%eax)
  0x025fdf28: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.String::toLowerCase@419 (line 2473)
  0x025fdf2b: mov    %ebx,0x8(%eax)
  0x025fdf2e: mov    %eax,%edx
  0x025fdf30: shr    $0x9,%edx
  0x025fdf33: movb   $0x0,0x1856d380(%edx)  ;*putfield value
                                        ; - java.lang.String::<init>@6 (line 637)
                                        ; - java.lang.String::toLowerCase@432 (line 2473)
  0x025fdf3a: mov    0x58(%esp),%esi
  0x025fdf3e: add    0x3c(%esp),%esi
  0x025fdf42: mov    %esi,0x10(%eax)    ;*putfield count
                                        ; - java.lang.String::<init>@16 (line 639)
                                        ; - java.lang.String::toLowerCase@432 (line 2473)
  0x025fdf45: add    $0x68,%esp
  0x025fdf48: pop    %ebp
  0x025fdf49: test   %eax,0x200100      ;   {poll_return}
  0x025fdf4f: ret                       ;*areturn
                                        ; - java.lang.String::toLowerCase@435 (line 2473)
  0x025fdf50: mov    %ecx,%eax
  0x025fdf52: add    $0x68,%esp
  0x025fdf55: pop    %ebp
  0x025fdf56: test   %eax,0x200100      ;   {poll_return}
  0x025fdf5c: ret                       ;*areturn
                                        ; - java.lang.String::toLowerCase@95 (line 2414)
  0x025fdf5d: mov    $0x14602bd8,%edx   ;   {oop('java/lang/NullPointerException')}
  0x025fdf62: mov    %fs:0x0,%ecx
  0x025fdf6a: mov    0xfffffff4(%ecx),%ecx
  0x025fdf6d: mov    0x34(%ecx),%eax
  0x025fdf70: lea    0x18(%eax),%edi
  0x025fdf73: cmp    0x3c(%ecx),%edi
  0x025fdf76: ja     0x025fe055
  0x025fdf7c: mov    %edi,0x34(%ecx)
  0x025fdf7f: mov    0x68(%edx),%ecx
  0x025fdf82: mov    %ecx,(%eax)
  0x025fdf84: mov    %edx,0x4(%eax)
  0x025fdf87: xor    %ecx,%ecx
  0x025fdf89: mov    %ecx,0x8(%eax)
  0x025fdf8c: mov    %ecx,0xc(%eax)
  0x025fdf8f: mov    %ecx,0x10(%eax)
  0x025fdf92: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.String::toLowerCase@4 (line 2391)
  0x025fdf95: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::toLowerCase@8 (line 2391)
  0x025fdf97: mov    %eax,0x5c(%esp)
  0x025fdf9b: call   0x025bcf40         ; OopMap{[92]=Oop off=1488}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::toLowerCase@8 (line 2391)
                                        ;   {optimized virtual_call}
  0x025fdfa0: mov    0x5c(%esp),%eax
  0x025fdfa4: jmp    0x025fe088
  0x025fdfa9: call   0x025fa0d0         ; OopMap{ecx=Oop [40]=Oop [44]=Oop edi=Oop off=1502}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@32 (line 2399)
                                        ;   {runtime_call}
  0x025fdfae: call   0x025fa0d0         ; OopMap{ecx=Oop [40]=Oop [44]=Oop edi=Oop off=1507}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@32 (line 2399)
                                        ;   {runtime_call}
  0x025fdfb3: mov    %ebx,(%esp)
  0x025fdfb6: call   0x025f9dd0         ; OopMap{ecx=Oop [40]=Oop [44]=Oop edi=Oop off=1515}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@32 (line 2399)
                                        ;   {runtime_call}
  0x025fdfbb: call   0x025faa40         ; OopMap{[44]=Oop [40]=Oop off=1520}
                                        ;*newarray
                                        ; - java.lang.String::toLowerCase@100 (line 2417)
                                        ;   {runtime_call}
  0x025fdfc0: jmp    0x025fdb38
  0x025fdfc5: mov    %eax,(%esp)
  0x025fdfc8: mov    %ebx,0x4(%esp)
  0x025fdfcc: mov    %edi,0x8(%esp)
  0x025fdfd0: nop    
  0x025fdfd1: nop    
  0x025fdfd2: nop    
  0x025fdfd3: call   0x025bd340         ; OopMap{[44]=Oop [52]=Oop [40]=Oop off=1544}
                                        ;*invokestatic arraycopy
                                        ; - java.lang.String::toLowerCase@117 (line 2422)
                                        ;   {static_call}
  0x025fdfd8: jmp    0x025fdba1
  0x025fdfdd: call   0x025fa0d0         ; OopMap{[52]=Oop [40]=Oop edx=Oop [44]=Oop off=1554}
                                        ;*invokevirtual getLanguage
                                        ; - java.lang.String::toLowerCase@121 (line 2424)
                                        ;   {runtime_call}
  0x025fdfe2: call   0x025fa0d0         ; OopMap{ecx=Oop [40]=Oop [68]=Oop [44]=Oop esi=Oop off=1559}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@177 (line 2432)
                                        ;   {runtime_call}
  0x025fdfe7: call   0x025fa0d0         ; OopMap{ecx=Oop [40]=Oop [68]=Oop [44]=Oop esi=Oop off=1564}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@177 (line 2432)
                                        ;   {runtime_call}
  0x025fdfec: mov    %ebx,(%esp)
  0x025fdfef: call   0x025f9dd0         ; OopMap{ecx=Oop [40]=Oop [68]=Oop [44]=Oop esi=Oop off=1572}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@177 (line 2432)
                                        ;   {runtime_call}
  0x025fdff4: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop [68]=Oop eax=Oop off=1577}
                                        ;*arraylength
                                        ; - java.lang.String::toLowerCase@317 (line 2458)
                                        ;   {runtime_call}
  0x025fdff9: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop eax=Oop [80]=Oop off=1582}
                                        ;*arraylength
                                        ; - java.lang.String::toLowerCase@328 (line 2460)
                                        ;   {runtime_call}
  0x025fdffe: call   0x025faa40         ; OopMap{[40]=Oop [44]=Oop [80]=Oop [68]=Oop off=1587}
                                        ;*newarray
                                        ; - java.lang.String::toLowerCase@335 (line 2460)
                                        ;   {runtime_call}
  0x025fe003: jmp    0x025fdde5
  0x025fe008: mov    %eax,(%esp)
  0x025fe00b: mov    %ebx,0x4(%esp)
  0x025fe00f: mov    %edi,0x8(%esp)
  0x025fe013: call   0x025bd340         ; OopMap{[40]=Oop [44]=Oop [80]=Oop [84]=Oop off=1608}
                                        ;*invokestatic arraycopy
                                        ; - java.lang.String::toLowerCase@349 (line 2461)
                                        ;   {static_call}
  0x025fe018: jmp    0x025fde51
  0x025fe01d: mov    %edx,(%esp)
  0x025fe020: call   0x025f9dd0         ; OopMap{[40]=Oop [44]=Oop edi=Oop eax=Oop off=1621}
                                        ;*caload
                                        ; - java.lang.String::toLowerCase@378 (line 2466)
                                        ;   {runtime_call}
  0x025fe025: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop edi=Oop eax=Oop off=1626}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@379 (line 2466)
                                        ;   {runtime_call}
  0x025fe02a: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop edi=Oop eax=Oop off=1631}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@379 (line 2466)
                                        ;   {runtime_call}
  0x025fe02f: mov    %ebx,(%esp)
  0x025fe032: call   0x025f9dd0         ; OopMap{[40]=Oop [44]=Oop edi=Oop eax=Oop off=1639}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@379 (line 2466)
                                        ;   {runtime_call}
  0x025fe037: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop ebx=Oop off=1644}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@408 (line 2470)
                                        ;   {runtime_call}
  0x025fe03c: call   0x025fa0d0         ; OopMap{[40]=Oop [44]=Oop ebx=Oop off=1649}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@408 (line 2470)
                                        ;   {runtime_call}
  0x025fe041: mov    %edx,(%esp)
  0x025fe044: call   0x025f9dd0         ; OopMap{[40]=Oop [44]=Oop ebx=Oop off=1657}
                                        ;*castore
                                        ; - java.lang.String::toLowerCase@408 (line 2470)
                                        ;   {runtime_call}
  0x025fe049: mov    %edx,%edx
  0x025fe04b: call   0x025fa480         ; OopMap{[40]=Oop ebx=Oop off=1664}
                                        ;*new  ; - java.lang.String::toLowerCase@419 (line 2473)
                                        ;   {runtime_call}
  0x025fe050: jmp    0x025fdf2b
  0x025fe055: mov    %edx,%edx
  0x025fe057: call   0x025fa480         ; OopMap{off=1676}
                                        ;*new  ; - java.lang.String::toLowerCase@4 (line 2391)
                                        ;   {runtime_call}
  0x025fe05c: jmp    0x025fdf95
  0x025fe061: nop    
  0x025fe062: nop    
  0x025fe063: mov    %fs:0x0,%esi
  0x025fe06b: mov    0xfffffff4(%esi),%esi
  0x025fe06e: mov    0x170(%esi),%eax
  0x025fe074: movl   $0x0,0x170(%esi)
  0x025fe07e: movl   $0x0,0x174(%esi)
  0x025fe088: add    $0x68,%esp
  0x025fe08b: pop    %ebp
  0x025fe08c: jmp    0x025f9c00         ;   {runtime_call}
  0x025fe091: hlt    
  0x025fe092: hlt    
  0x025fe093: hlt    
  0x025fe094: hlt    
  0x025fe095: hlt    
  0x025fe096: hlt    
  0x025fe097: hlt    
  0x025fe098: hlt    
  0x025fe099: hlt    
  0x025fe09a: hlt    
  0x025fe09b: hlt    
  0x025fe09c: hlt    
  0x025fe09d: hlt    
  0x025fe09e: hlt    
  0x025fe09f: hlt    
[Stub Code]
  0x025fe0a0: nop                       ;   {no_reloc}
  0x025fe0a1: nop    
  0x025fe0a2: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0a7: jmp    0x025fe0a7         ;   {runtime_call}
  0x025fe0ac: nop    
  0x025fe0ad: nop    
  0x025fe0ae: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0b3: jmp    0x025fe0b3         ;   {runtime_call}
  0x025fe0b8: nop    
  0x025fe0b9: nop    
  0x025fe0ba: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0bf: jmp    0x025fe0bf         ;   {runtime_call}
  0x025fe0c4: nop    
  0x025fe0c5: nop    
  0x025fe0c6: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0cb: jmp    0x025fe0cb         ;   {runtime_call}
  0x025fe0d0: nop    
  0x025fe0d1: nop    
  0x025fe0d2: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0d7: jmp    0x025fe0d7         ;   {runtime_call}
  0x025fe0dc: nop    
  0x025fe0dd: nop    
  0x025fe0de: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0e3: jmp    0x025fe0e3         ;   {runtime_call}
  0x025fe0e8: nop    
  0x025fe0e9: nop    
  0x025fe0ea: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0ef: jmp    0x025fe0ef         ;   {runtime_call}
  0x025fe0f4: nop    
  0x025fe0f5: nop    
  0x025fe0f6: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe0fb: jmp    0x025fe0fb         ;   {runtime_call}
  0x025fe100: nop    
  0x025fe101: nop    
  0x025fe102: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe107: jmp    0x025fe107         ;   {runtime_call}
  0x025fe10c: nop    
  0x025fe10d: nop    
  0x025fe10e: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe113: jmp    0x025fe113         ;   {runtime_call}
  0x025fe118: nop    
  0x025fe119: nop    
  0x025fe11a: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe11f: jmp    0x025fe11f         ;   {runtime_call}
  0x025fe124: nop    
  0x025fe125: nop    
  0x025fe126: mov    $0x0,%ebx          ;   {static_stub}
  0x025fe12b: jmp    0x025fe12b         ;   {runtime_call}
[Exception Handler]
  0x025fe130: call   0x025fb1c0         ;   {runtime_call}
  0x025fe135: push   $0x6dab698c        ;   {external_word}
  0x025fe13a: call   0x025fe13f
  0x025fe13f: pusha  
  0x025fe140: call   0x6d8b2a00         ;   {runtime_call}
  0x025fe145: hlt    
[Deopt Handler Code]
  0x025fe146: push   $0x25fe146         ;   {section_word}
  0x025fe14b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025fee08:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = int
  # parm1:    [sp+0x30]   = int  (sp of caller)
  0x025fef30: nop    
  0x025fef31: nop    
  0x025fef32: nop    
  0x025fef33: nop    
  0x025fef34: nop    
  0x025fef35: nop    
  0x025fef36: nop    
  0x025fef37: cmp    0x4(%ecx),%eax
  0x025fef3a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fef40: mov    %eax,0xffffd000(%esp)
  0x025fef47: push   %ebp
  0x025fef48: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.String::lastIndexOf@0 (line 1665)
  0x025fef4b: mov    0x30(%esp),%esi
  0x025fef4f: mov    0xc(%ecx),%edi     ;*getfield offset
                                        ; - java.lang.String::lastIndexOf@1 (line 1665)
  0x025fef52: mov    %edi,0x18(%esp)
  0x025fef56: mov    0x8(%ecx),%ebx     ;*getfield value
                                        ; - java.lang.String::lastIndexOf@6 (line 1666)
  0x025fef59: mov    0x10(%ecx),%eax    ;*getfield count
                                        ; - java.lang.String::lastIndexOf@17 (line 1668)
  0x025fef5c: cmp    %eax,%esi
  0x025fef5e: jl     0x025fef67         ;*if_icmplt
                                        ; - java.lang.String::lastIndexOf@20 (line 1668)
  0x025fef64: mov    %eax,%esi
  0x025fef66: dec    %esi
  0x025fef67: add    %edi,%esi
  0x025fef69: cmp    $0x10000,%edx
  0x025fef6f: jge    0x025fefa3
  0x025fef75: jmp    0x025fef99         ;*if_icmpge
                                        ; - java.lang.String::lastIndexOf@39 (line 1670)
  0x025fef7a: xchg   %ax,%ax
  0x025fef7c: cmp    0x8(%ebx),%esi     ; implicit exception: dispatches to 0x025ff087
  0x025fef7f: jae    0x025ff091
  0x025fef85: movzwl 0xc(%ebx,%esi,2),%eax  ;*caload
                                        ; - java.lang.String::lastIndexOf@52 (line 1674)
  0x025fef8a: cmp    %edx,%eax
  0x025fef8c: je     0x025ff068         ;*if_icmpne
                                        ; - java.lang.String::lastIndexOf@54 (line 1674)
  0x025fef92: dec    %esi               ; OopMap{ecx=Oop ebx=Oop off=99}
                                        ;*goto
                                        ; - java.lang.String::lastIndexOf@68 (line 1673)
  0x025fef93: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::lastIndexOf@68 (line 1673)
                                        ;   {poll}
  0x025fef99: cmp    %edi,%esi
  0x025fef9b: jl     0x025ff077
  0x025fefa1: jmp    0x025fef7c         ;*if_icmplt
                                        ; - java.lang.String::lastIndexOf@45 (line 1673)
  0x025fefa3: add    %edi,%eax
  0x025fefa5: cmp    $0x10ffff,%edx
  0x025fefab: jg     0x025ff058         ;*if_icmpgt
                                        ; - java.lang.String::lastIndexOf@87 (line 1682)
  0x025fefb1: mov    %eax,0x20(%esp)
  0x025fefb5: mov    %esi,0x14(%esp)
  0x025fefb9: mov    %ebx,0x1c(%esp)
  0x025fefbd: mov    %ecx,0x10(%esp)
  0x025fefc1: mov    %edx,%ecx          ;*invokestatic toChars
                                        ; - java.lang.String::lastIndexOf@91 (line 1684)
  0x025fefc3: call   0x025bd340         ; OopMap{[16]=Oop [28]=Oop off=152}
                                        ;*invokestatic toChars
                                        ; - java.lang.String::lastIndexOf@91 (line 1684)
                                        ;   {static_call}
  0x025fefc8: mov    0x14(%esp),%esi    ;*astore
                                        ; - java.lang.String::lastIndexOf@94 (line 1684)
  0x025fefcc: mov    0x20(%esp),%edx
  0x025fefd0: mov    0x1c(%esp),%ebx
  0x025fefd4: mov    0x18(%esp),%edi
  0x025fefd8: cmp    %edi,%esi
  0x025fefda: jl     0x025ff058         ;*if_icmplt
                                        ; - java.lang.String::lastIndexOf@99 (line 1685)
  0x025fefe0: cmp    0x8(%ebx),%esi     ; implicit exception: dispatches to 0x025ff099
  0x025fefe3: jae    0x025ff0a3
  0x025fefe9: movzwl 0xc(%ebx,%esi,2),%ecx  ;*caload
                                        ; - java.lang.String::lastIndexOf@106 (line 1686)
  0x025fefee: cmpl   $0x0,0x8(%eax)     ; implicit exception: dispatches to 0x025ff0ab
  0x025feff5: jbe    0x025ff0b5
  0x025feffb: movzwl 0xc(%eax),%edi     ;*caload
                                        ; - java.lang.String::lastIndexOf@110 (line 1686)
  0x025fefff: cmp    %edi,%ecx
  0x025ff001: jne    0x025ff039         ;*if_icmpne
                                        ; - java.lang.String::lastIndexOf@111 (line 1686)
  0x025ff007: mov    %esi,%edi
  0x025ff009: inc    %edi
  0x025ff00a: cmp    %edx,%edi
  0x025ff00c: je     0x025ff058         ;*if_icmpne
                                        ; - java.lang.String::lastIndexOf@120 (line 1687)
  0x025ff012: cmp    0x8(%ebx),%edi
  0x025ff015: jae    0x025ff0c1
  0x025ff01b: movzwl 0xc(%ebx,%edi,2),%edi  ;*caload
                                        ; - java.lang.String::lastIndexOf@132 (line 1690)
  0x025ff020: cmpl   $0x1,0x8(%eax)
  0x025ff027: jbe    0x025ff0c9
  0x025ff02d: movzwl 0xe(%eax),%ecx     ;*caload
                                        ; - java.lang.String::lastIndexOf@136 (line 1690)
  0x025ff031: cmp    %ecx,%edi
  0x025ff033: je     0x025ff042         ;*if_icmpne
                                        ; - java.lang.String::lastIndexOf@137 (line 1690)
  0x025ff039: dec    %esi               ; OopMap{[16]=Oop eax=Oop ebx=Oop off=266}
                                        ;*goto
                                        ; - java.lang.String::lastIndexOf@151 (line 1685)
  0x025ff03a: test   %eax,0x200100      ;   {poll}
  0x025ff040: jmp    0x025fefd4         ;*goto
                                        ; - java.lang.String::lastIndexOf@151 (line 1685)
  0x025ff042: mov    0x10(%esp),%ecx
  0x025ff046: mov    0xc(%ecx),%eax     ;*getfield offset
                                        ; - java.lang.String::lastIndexOf@143 (line 1691)
  0x025ff049: sub    %eax,%esi
  0x025ff04b: mov    %esi,%eax
  0x025ff04d: add    $0x28,%esp
  0x025ff050: pop    %ebp
  0x025ff051: test   %eax,0x200100      ;   {poll_return}
  0x025ff057: ret                       ;*ireturn
                                        ; - java.lang.String::lastIndexOf@147 (line 1691)
  0x025ff058: mov    $0xffffffff,%eax
  0x025ff05d: add    $0x28,%esp
  0x025ff060: pop    %ebp
  0x025ff061: test   %eax,0x200100      ;   {poll_return}
  0x025ff067: ret                       ;*ireturn
                                        ; - java.lang.String::lastIndexOf@155 (line 1696)
  0x025ff068: sub    %edi,%esi
  0x025ff06a: mov    %esi,%eax
  0x025ff06c: add    $0x28,%esp
  0x025ff06f: pop    %ebp
  0x025ff070: test   %eax,0x200100      ;   {poll_return}
  0x025ff076: ret                       ;*ireturn
                                        ; - java.lang.String::lastIndexOf@64 (line 1675)
  0x025ff077: mov    $0xffffffff,%eax
  0x025ff07c: add    $0x28,%esp
  0x025ff07f: pop    %ebp
  0x025ff080: test   %eax,0x200100      ;   {poll_return}
  0x025ff086: ret    
  0x025ff087: call   0x025fa0d0         ; OopMap{ecx=Oop ebx=Oop off=348}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@52 (line 1674)
                                        ;   {runtime_call}
  0x025ff08c: call   0x025fa0d0         ; OopMap{ecx=Oop ebx=Oop off=353}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@52 (line 1674)
                                        ;   {runtime_call}
  0x025ff091: mov    %esi,(%esp)
  0x025ff094: call   0x025f9dd0         ; OopMap{ecx=Oop ebx=Oop off=361}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@52 (line 1674)
                                        ;   {runtime_call}
  0x025ff099: call   0x025fa0d0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=366}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@106 (line 1686)
                                        ;   {runtime_call}
  0x025ff09e: call   0x025fa0d0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=371}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@106 (line 1686)
                                        ;   {runtime_call}
  0x025ff0a3: mov    %esi,(%esp)
  0x025ff0a6: call   0x025f9dd0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=379}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@106 (line 1686)
                                        ;   {runtime_call}
  0x025ff0ab: call   0x025fa0d0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=384}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@110 (line 1686)
                                        ;   {runtime_call}
  0x025ff0b0: call   0x025fa0d0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=389}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@110 (line 1686)
                                        ;   {runtime_call}
  0x025ff0b5: movl   $0x0,(%esp)
  0x025ff0bc: call   0x025f9dd0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=401}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@110 (line 1686)
                                        ;   {runtime_call}
  0x025ff0c1: mov    %edi,(%esp)
  0x025ff0c4: call   0x025f9dd0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=409}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@132 (line 1690)
                                        ;   {runtime_call}
  0x025ff0c9: movl   $0x1,(%esp)
  0x025ff0d0: call   0x025f9dd0         ; OopMap{[16]=Oop eax=Oop ebx=Oop off=421}
                                        ;*caload
                                        ; - java.lang.String::lastIndexOf@136 (line 1690)
                                        ;   {runtime_call}
  0x025ff0d5: nop    
  0x025ff0d6: nop    
  0x025ff0d7: mov    %fs:0x0,%esi
  0x025ff0df: mov    0xfffffff4(%esi),%esi
  0x025ff0e2: mov    0x170(%esi),%eax
  0x025ff0e8: movl   $0x0,0x170(%esi)
  0x025ff0f2: movl   $0x0,0x174(%esi)
  0x025ff0fc: add    $0x28,%esp
  0x025ff0ff: pop    %ebp
  0x025ff100: jmp    0x025f9c00         ;   {runtime_call}
  0x025ff105: hlt    
  0x025ff106: hlt    
  0x025ff107: hlt    
  0x025ff108: hlt    
  0x025ff109: hlt    
  0x025ff10a: hlt    
  0x025ff10b: hlt    
  0x025ff10c: hlt    
  0x025ff10d: hlt    
  0x025ff10e: hlt    
  0x025ff10f: hlt    
[Stub Code]
  0x025ff110: nop                       ;   {no_reloc}
  0x025ff111: nop    
  0x025ff112: mov    $0x0,%ebx          ;   {static_stub}
  0x025ff117: jmp    0x025ff117         ;   {runtime_call}
[Exception Handler]
  0x025ff11c: call   0x025fb1c0         ;   {runtime_call}
  0x025ff121: push   $0x6dab698c        ;   {external_word}
  0x025ff126: call   0x025ff12b
  0x025ff12b: pusha  
  0x025ff12c: call   0x6d8b2a00         ;   {runtime_call}
  0x025ff131: hlt    
[Deopt Handler Code]
  0x025ff132: push   $0x25ff132         ;   {section_word}
  0x025ff137: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025ff548:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # parm0:    ecx       = int
  #           [sp+0x20]  (sp of caller)
  0x025ff640: mov    %eax,0xffffd000(%esp)
  0x025ff647: push   %ebp
  0x025ff648: sub    $0x18,%esp         ;*iload_0
                                        ; - java.lang.CharacterDataLatin1::getProperties@0 (line 56)
  0x025ff64b: and    $0xffff,%ecx
  0x025ff651: mov    $0x146fb5d0,%eax   ;   {oop('java/lang/CharacterDataLatin1')}
  0x025ff656: mov    0x154(%eax),%eax   ;*getstatic A
                                        ; - java.lang.CharacterDataLatin1::getProperties@3 (line 57)
  0x025ff65c: mov    $0x100,%esi
  0x025ff661: cmp    %ecx,%esi
  0x025ff663: jbe    0x025ff678
  0x025ff669: mov    0xc(%eax,%ecx,4),%eax  ;*iaload
                                        ; - java.lang.CharacterDataLatin1::getProperties@7 (line 57)
  0x025ff66d: add    $0x18,%esp
  0x025ff670: pop    %ebp
  0x025ff671: test   %eax,0x200100      ;   {poll_return}
  0x025ff677: ret    
  0x025ff678: mov    %ecx,(%esp)
  0x025ff67b: call   0x025f9dd0         ; OopMap{eax=Oop off=64}
                                        ;*iaload
                                        ; - java.lang.CharacterDataLatin1::getProperties@7 (line 57)
                                        ;   {runtime_call}
  0x025ff680: nop    
  0x025ff681: nop    
  0x025ff682: mov    %fs:0x0,%esi
  0x025ff68a: mov    0xfffffff4(%esi),%esi
  0x025ff68d: mov    0x170(%esi),%eax
  0x025ff693: movl   $0x0,0x170(%esi)
  0x025ff69d: movl   $0x0,0x174(%esi)
  0x025ff6a7: add    $0x18,%esp
  0x025ff6aa: pop    %ebp
  0x025ff6ab: jmp    0x025f9c00         ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x025ff6b0: call   0x025fb1c0         ;   {no_reloc}
  0x025ff6b5: push   $0x6dab698c        ;   {external_word}
  0x025ff6ba: call   0x025ff6bf
  0x025ff6bf: pusha  
  0x025ff6c0: call   0x6d8b2a00         ;   {runtime_call}
  0x025ff6c5: hlt    
[Deopt Handler Code]
  0x025ff6c6: push   $0x25ff6c6         ;   {section_word}
  0x025ff6cb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025ff788:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'toLowerCase' '(I)I' in 'java/lang/Character'
  # parm0:    ecx       = int
  #           [sp+0x20]  (sp of caller)
  0x025ff8d0: mov    %eax,0xffffd000(%esp)
  0x025ff8d7: push   %ebp
  0x025ff8d8: sub    $0x18,%esp         ;*iload_0
                                        ; - java.lang.Character::toLowerCase@0 (line 4204)
  0x025ff8db: cmp    $0x0,%ecx
  0x025ff8de: jl     0x025ff8f0         ;*iflt
                                        ; - java.lang.Character::toLowerCase@5 (line 4207)
  0x025ff8e4: cmp    $0xff,%ecx
  0x025ff8ea: jle    0x025ff98b         ;*if_icmpgt
                                        ; - java.lang.Character::toLowerCase@12 (line 4207)
  0x025ff8f0: mov    %ecx,%esi
  0x025ff8f2: shr    $0x10,%esi
  0x025ff8f5: cmp    $0x0,%esi
  0x025ff8f8: je     0x025ff97f
  0x025ff8fe: cmp    $0x1,%esi
  0x025ff901: je     0x025ff973
  0x025ff907: cmp    $0x2,%esi
  0x025ff90a: je     0x025ff967
  0x025ff910: cmp    $0x3,%esi
  0x025ff913: jl     0x025ff922
  0x025ff919: cmp    $0xd,%esi
  0x025ff91c: jle    0x025ff942
  0x025ff922: cmp    $0xe,%esi
  0x025ff925: je     0x025ff95b
  0x025ff92b: cmp    $0xf,%esi
  0x025ff92e: je     0x025ff94f
  0x025ff934: cmp    $0x10,%esi
  0x025ff937: je     0x025ff94f
  0x025ff93d: jmp    0x025ff992         ;*tableswitch
                                        ; - java.lang.Character::toLowerCase@29 (line 4211)
  0x025ff942: nop    
  0x025ff943: call   0x025bd340         ; OopMap{off=120}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@137 (line 4232)
                                        ;   {static_call}
  0x025ff948: mov    %eax,%ecx
  0x025ff94a: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@141 (line 4233)
  0x025ff94f: call   0x025bd340         ; OopMap{off=132}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@153 (line 4239)
                                        ;   {static_call}
  0x025ff954: mov    %eax,%ecx
  0x025ff956: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@157 (line 4240)
  0x025ff95b: call   0x025bd340         ; OopMap{off=144}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@145 (line 4235)
                                        ;   {static_call}
  0x025ff960: mov    %eax,%ecx
  0x025ff962: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@149 (line 4236)
  0x025ff967: call   0x025bd340         ; OopMap{off=156}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@129 (line 4219)
                                        ;   {static_call}
  0x025ff96c: mov    %eax,%ecx
  0x025ff96e: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@133 (line 4220)
  0x025ff973: call   0x025bd340         ; OopMap{off=168}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@121 (line 4216)
                                        ;   {static_call}
  0x025ff978: mov    %eax,%ecx
  0x025ff97a: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@125 (line 4217)
  0x025ff97f: call   0x025bd340         ; OopMap{off=180}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@113 (line 4213)
                                        ;   {static_call}
  0x025ff984: mov    %eax,%ecx
  0x025ff986: jmp    0x025ff992         ;*goto
                                        ; - java.lang.Character::toLowerCase@117 (line 4214)
  0x025ff98b: call   0x025bd340         ; OopMap{off=192}
                                        ;*invokestatic toLowerCase
                                        ; - java.lang.Character::toLowerCase@16 (line 4208)
                                        ;   {static_call}
  0x025ff990: mov    %eax,%ecx          ;*goto
                                        ; - java.lang.Character::toLowerCase@20 (line 4208)
  0x025ff992: mov    %ecx,%eax
  0x025ff994: add    $0x18,%esp
  0x025ff997: pop    %ebp
  0x025ff998: test   %eax,0x200100      ;   {poll_return}
  0x025ff99e: ret    
  0x025ff99f: nop    
  0x025ff9a0: nop    
  0x025ff9a1: mov    %fs:0x0,%esi
  0x025ff9a9: mov    0xfffffff4(%esi),%esi
  0x025ff9ac: mov    0x170(%esi),%eax
  0x025ff9b2: movl   $0x0,0x170(%esi)
  0x025ff9bc: movl   $0x0,0x174(%esi)
  0x025ff9c6: add    $0x18,%esp
  0x025ff9c9: pop    %ebp
  0x025ff9ca: jmp    0x025f9c00         ;   {runtime_call}
  0x025ff9cf: hlt    
[Stub Code]
  0x025ff9d0: nop                       ;   {no_reloc}
  0x025ff9d1: nop    
  0x025ff9d2: mov    $0x0,%ebx          ;   {static_stub}
  0x025ff9d7: jmp    0x025ff9d7         ;   {runtime_call}
  0x025ff9dc: nop    
  0x025ff9dd: nop    
  0x025ff9de: mov    $0x0,%ebx          ;   {static_stub}
  0x025ff9e3: jmp    0x025ff9e3         ;   {runtime_call}
  0x025ff9e8: nop    
  0x025ff9e9: nop    
  0x025ff9ea: mov    $0x0,%ebx          ;   {static_stub}
  0x025ff9ef: jmp    0x025ff9ef         ;   {runtime_call}
  0x025ff9f4: nop    
  0x025ff9f5: nop    
  0x025ff9f6: mov    $0x0,%ebx          ;   {static_stub}
  0x025ff9fb: jmp    0x025ff9fb         ;   {runtime_call}
  0x025ffa00: nop    
  0x025ffa01: nop    
  0x025ffa02: mov    $0x0,%ebx          ;   {static_stub}
  0x025ffa07: jmp    0x025ffa07         ;   {runtime_call}
  0x025ffa0c: nop    
  0x025ffa0d: nop    
  0x025ffa0e: mov    $0x0,%ebx          ;   {static_stub}
  0x025ffa13: jmp    0x025ffa13         ;   {runtime_call}
  0x025ffa18: nop    
  0x025ffa19: nop    
  0x025ffa1a: mov    $0x0,%ebx          ;   {static_stub}
  0x025ffa1f: jmp    0x025ffa1f         ;   {runtime_call}
[Exception Handler]
  0x025ffa24: call   0x025fb1c0         ;   {runtime_call}
  0x025ffa29: push   $0x6dab698c        ;   {external_word}
  0x025ffa2e: call   0x025ffa33
  0x025ffa33: pusha  
  0x025ffa34: call   0x6d8b2a00         ;   {runtime_call}
  0x025ffa39: hlt    
[Deopt Handler Code]
  0x025ffa3a: push   $0x25ffa3a         ;   {section_word}
  0x025ffa3f: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025ffc08:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # parm0:    ecx       = int
  #           [sp+0x20]  (sp of caller)
  0x025ffd00: mov    %eax,0xffffd000(%esp)
  0x025ffd07: push   %ebp
  0x025ffd08: sub    $0x18,%esp         ;*iload_0
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 143)
  0x025ffd0b: mov    $0x146fb5d0,%eax   ;   {oop('java/lang/CharacterDataLatin1')}
  0x025ffd10: mov    0x154(%eax),%eax   ;*getstatic A
                                        ; - java.lang.CharacterDataLatin1::getProperties@3 (line 57)
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@3 (line 144)
  0x025ffd16: mov    %ecx,%esi
  0x025ffd18: and    $0xffff,%esi
  0x025ffd1e: mov    $0x100,%edi
  0x025ffd23: cmp    %esi,%edi
  0x025ffd25: jbe    0x025ffd6b
  0x025ffd2b: mov    0xc(%eax,%esi,4),%eax  ;*iaload
                                        ; - java.lang.CharacterDataLatin1::getProperties@7 (line 57)
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@3 (line 144)
  0x025ffd2f: mov    %eax,%esi
  0x025ffd31: and    $0x20000,%esi
  0x025ffd37: cmp    $0x0,%esi
  0x025ffd3a: je     0x025ffd5e         ;*ifeq
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@11 (line 146)
  0x025ffd40: mov    %eax,%esi
  0x025ffd42: and    $0x7fc0000,%esi
  0x025ffd48: cmp    $0x7fc0000,%esi
  0x025ffd4e: je     0x025ffd5e         ;*if_icmpeq
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@20 (line 146)
  0x025ffd54: shl    $0x5,%eax
  0x025ffd57: sar    $0x17,%eax
  0x025ffd5a: add    %ecx,%eax
  0x025ffd5c: mov    %eax,%ecx          ;*istore_1
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@33 (line 149)
  0x025ffd5e: mov    %ecx,%eax
  0x025ffd60: add    $0x18,%esp
  0x025ffd63: pop    %ebp
  0x025ffd64: test   %eax,0x200100      ;   {poll_return}
  0x025ffd6a: ret    
  0x025ffd6b: mov    %esi,(%esp)
  0x025ffd6e: call   0x025f9dd0         ; OopMap{eax=Oop off=115}
                                        ;*iaload
                                        ; - java.lang.CharacterDataLatin1::getProperties@7 (line 57)
                                        ; - java.lang.CharacterDataLatin1::toLowerCase@3 (line 144)
                                        ;   {runtime_call}
  0x025ffd73: nop    
  0x025ffd74: nop    
  0x025ffd75: mov    %fs:0x0,%esi
  0x025ffd7d: mov    0xfffffff4(%esi),%esi
  0x025ffd80: mov    0x170(%esi),%eax
  0x025ffd86: movl   $0x0,0x170(%esi)
  0x025ffd90: movl   $0x0,0x174(%esi)
  0x025ffd9a: add    $0x18,%esp
  0x025ffd9d: pop    %ebp
  0x025ffd9e: jmp    0x025f9c00         ;   {runtime_call}
  0x025ffda3: hlt    
  0x025ffda4: hlt    
  0x025ffda5: hlt    
  0x025ffda6: hlt    
  0x025ffda7: hlt    
  0x025ffda8: hlt    
  0x025ffda9: hlt    
  0x025ffdaa: hlt    
  0x025ffdab: hlt    
  0x025ffdac: hlt    
  0x025ffdad: hlt    
  0x025ffdae: hlt    
  0x025ffdaf: hlt    
[Exception Handler]
[Stub Code]
  0x025ffdb0: call   0x025fb1c0         ;   {no_reloc}
  0x025ffdb5: push   $0x6dab698c        ;   {external_word}
  0x025ffdba: call   0x025ffdbf
  0x025ffdbf: pusha  
  0x025ffdc0: call   0x6d8b2a00         ;   {runtime_call}
  0x025ffdc5: hlt    
[Deopt Handler Code]
  0x025ffdc6: push   $0x25ffdc6         ;   {section_word}
  0x025ffdcb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x025ffec8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     ecx       = 'java/lang/AbstractStringBuilder'
  # parm0:    edx       = char
  #           [sp+0x30]  (sp of caller)
  0x025fffd0: nop    
  0x025fffd1: nop    
  0x025fffd2: nop    
  0x025fffd3: nop    
  0x025fffd4: nop    
  0x025fffd5: nop    
  0x025fffd6: nop    
  0x025fffd7: cmp    0x4(%ecx),%eax
  0x025fffda: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x025fffe0: mov    %eax,0xffffd000(%esp)
  0x025fffe7: push   %ebp
  0x025fffe8: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.AbstractStringBuilder::append@0 (line 570)
  0x025fffeb: mov    0x8(%ecx),%esi     ;*getfield count
                                        ; - java.lang.AbstractStringBuilder::append@1 (line 570)
  0x025fffee: inc    %esi
  0x025fffef: mov    0xc(%ecx),%edi     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@9 (line 571)
  0x025ffff2: mov    0x8(%edi),%edi     ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@12 (line 571)
                                        ; implicit exception: dispatches to 0x0260003f
  0x025ffff5: cmp    %edi,%esi
  0x025ffff7: jle    0x02600018         ;*if_icmple
                                        ; - java.lang.AbstractStringBuilder::append@13 (line 571)
  0x025ffffd: mov    %edx,0x1c(%esp)
  0x02600001: mov    %esi,%edx
  0x02600003: mov    %ecx,%esi
  0x02600005: mov    %esi,%ecx          ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@18 (line 572)
  0x02600007: mov    %esi,0x18(%esp)
  0x0260000b: call   0x025bcf40         ; OopMap{[24]=Oop off=64}
                                        ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@18 (line 572)
                                        ;   {optimized virtual_call}
  0x02600010: mov    0x1c(%esp),%edx
  0x02600014: mov    0x18(%esp),%ecx
  0x02600018: mov    0xc(%ecx),%eax     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@22 (line 573)
  0x0260001b: mov    0x8(%ecx),%esi     ;*getfield count
                                        ; - java.lang.AbstractStringBuilder::append@27 (line 573)
  0x0260001e: mov    %esi,%edi
  0x02600020: inc    %edi
  0x02600021: mov    %edi,0x8(%ecx)     ;*putfield count
                                        ; - java.lang.AbstractStringBuilder::append@33 (line 573)
  0x02600024: cmp    0x8(%eax),%esi     ; implicit exception: dispatches to 0x02600044
  0x02600027: jae    0x0260004e
  0x0260002d: mov    %dx,0xc(%eax,%esi,2)  ;*castore
                                        ; - java.lang.AbstractStringBuilder::append@37 (line 573)
  0x02600032: mov    %ecx,%eax
  0x02600034: add    $0x28,%esp
  0x02600037: pop    %ebp
  0x02600038: test   %eax,0x200100      ;   {poll_return}
  0x0260003e: ret    
  0x0260003f: call   0x025fa0d0         ; OopMap{ecx=Oop off=116}
                                        ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@12 (line 571)
                                        ;   {runtime_call}
  0x02600044: call   0x025fa0d0         ; OopMap{ecx=Oop eax=Oop off=121}
                                        ;*castore
                                        ; - java.lang.AbstractStringBuilder::append@37 (line 573)
                                        ;   {runtime_call}
  0x02600049: call   0x025fa0d0         ; OopMap{ecx=Oop eax=Oop off=126}
                                        ;*castore
                                        ; - java.lang.AbstractStringBuilder::append@37 (line 573)
                                        ;   {runtime_call}
  0x0260004e: mov    %esi,(%esp)
  0x02600051: call   0x025f9dd0         ; OopMap{ecx=Oop eax=Oop off=134}
                                        ;*castore
                                        ; - java.lang.AbstractStringBuilder::append@37 (line 573)
                                        ;   {runtime_call}
  0x02600056: nop    
  0x02600057: nop    
  0x02600058: mov    %fs:0x0,%esi
  0x02600060: mov    0xfffffff4(%esi),%esi
  0x02600063: mov    0x170(%esi),%eax
  0x02600069: movl   $0x0,0x170(%esi)
  0x02600073: movl   $0x0,0x174(%esi)
  0x0260007d: add    $0x28,%esp
  0x02600080: pop    %ebp
  0x02600081: jmp    0x025f9c00         ;   {runtime_call}
  0x02600086: hlt    
  0x02600087: hlt    
  0x02600088: hlt    
  0x02600089: hlt    
  0x0260008a: hlt    
  0x0260008b: hlt    
  0x0260008c: hlt    
  0x0260008d: hlt    
  0x0260008e: hlt    
  0x0260008f: hlt    
[Stub Code]
  0x02600090: nop                       ;   {no_reloc}
  0x02600091: nop    
  0x02600092: mov    $0x0,%ebx          ;   {static_stub}
  0x02600097: jmp    0x02600097         ;   {runtime_call}
[Exception Handler]
  0x0260009c: call   0x025fb1c0         ;   {runtime_call}
  0x026000a1: push   $0x6dab698c        ;   {external_word}
  0x026000a6: call   0x026000ab
  0x026000ab: pusha  
  0x026000ac: call   0x6d8b2a00         ;   {runtime_call}
  0x026000b1: hlt    
[Deopt Handler Code]
  0x026000b2: push   $0x26000b2         ;   {section_word}
  0x026000b7: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02600288:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'indexOf' '([CII[CIII)I' in 'java/lang/String'
  # parm0:    ecx       = '[C'
  # parm1:    edx       = int
  # parm2:    [sp+0x40]   = int  (sp of caller)
  # parm3:    [sp+0x44]   = '[C'
  # parm4:    [sp+0x48]   = int
  # parm5:    [sp+0x4c]   = int
  # parm6:    [sp+0x50]   = int
  0x026003a0: mov    %eax,0xffffd000(%esp)
  0x026003a7: push   %ebp
  0x026003a8: sub    $0x38,%esp         ;*iload
                                        ; - java.lang.String::indexOf@0 (line 1753)
  0x026003ab: mov    %edx,0x18(%esp)
  0x026003af: mov    0x50(%esp),%eax
  0x026003b3: mov    0x40(%esp),%esi
  0x026003b7: cmp    %esi,%eax
  0x026003b9: jge    0x0260051c         ;*if_icmplt
                                        ; - java.lang.String::indexOf@3 (line 1753)
  0x026003bf: cmp    $0x0,%eax
  0x026003c2: jge    0x026003cd         ;*ifge
                                        ; - java.lang.String::indexOf@19 (line 1756)
  0x026003c8: mov    $0x0,%eax          ;*istore
                                        ; - java.lang.String::indexOf@23 (line 1757)
  0x026003cd: mov    0x4c(%esp),%edi
  0x026003d1: cmp    $0x0,%edi
  0x026003d4: je     0x02600511         ;*ifne
                                        ; - java.lang.String::indexOf@27 (line 1759)
  0x026003da: mov    %eax,0x14(%esp)
  0x026003de: mov    0x48(%esp),%ebx
  0x026003e2: mov    %ecx,0x10(%esp)
  0x026003e6: mov    0x44(%esp),%ecx
  0x026003ea: cmp    0x8(%ecx),%ebx     ; implicit exception: dispatches to 0x02600536
  0x026003ed: jae    0x02600540
  0x026003f3: movzwl 0xc(%ecx,%ebx,2),%eax  ;*caload
                                        ; - java.lang.String::indexOf@36 (line 1763)
  0x026003f8: mov    %eax,0x20(%esp)
  0x026003fc: sub    %edi,%esi
  0x026003fe: add    %edx,%esi
  0x02600400: mov    %esi,0x1c(%esp)
  0x02600404: mov    0x14(%esp),%ecx
  0x02600408: add    %edx,%ecx
  0x0260040a: mov    0x10(%esp),%edx
  0x0260040e: xchg   %ax,%ax
  0x02600410: cmp    %esi,%ecx
  0x02600412: jg     0x02600501         ;*if_icmpgt
                                        ; - java.lang.String::indexOf@57 (line 1766)
  0x02600418: cmp    0x8(%edx),%ecx     ; implicit exception: dispatches to 0x02600548
  0x0260041b: jae    0x02600552
  0x02600421: movzwl 0xc(%edx,%ecx,2),%ebx  ;*caload
                                        ; - java.lang.String::indexOf@63 (line 1768)
  0x02600426: cmp    %eax,%ebx
  0x02600428: je     0x02600455
  0x0260042e: jmp    0x02600450         ;*if_icmpeq
                                        ; - java.lang.String::indexOf@66 (line 1768)
  0x02600433: nop    
  0x02600434: cmp    0x8(%edx),%ecx
  0x02600437: jae    0x0260055a
  0x0260043d: movzwl 0xc(%edx,%ecx,2),%ebx  ;*caload
                                        ; - java.lang.String::indexOf@82 (line 1769)
  0x02600442: cmp    %eax,%ebx
  0x02600444: je     0x02600455         ; OopMap{edx=Oop [68]=Oop off=170}
                                        ;*goto
                                        ; - java.lang.String::indexOf@88 (line 1769)
  0x0260044a: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::indexOf@88 (line 1769)
                                        ;   {poll}
  0x02600450: inc    %ecx
  0x02600451: cmp    %esi,%ecx
  0x02600453: jle    0x02600434         ;*if_icmpgt
                                        ; - java.lang.String::indexOf@76 (line 1769)
  0x02600455: cmp    %esi,%ecx
  0x02600457: jle    0x0260046a
  0x0260045d: mov    %ecx,0x24(%esp)
  0x02600461: mov    0x44(%esp),%eax
  0x02600465: jmp    0x026004ce         ;*if_icmpgt
                                        ; - java.lang.String::indexOf@95 (line 1773)
  0x0260046a: mov    %ecx,%ebx
  0x0260046c: inc    %ebx
  0x0260046d: mov    %ebx,%esi
  0x0260046f: add    %edi,%esi
  0x02600471: dec    %esi
  0x02600472: mov    %esi,0x28(%esp)
  0x02600476: mov    0x48(%esp),%edi
  0x0260047a: inc    %edi
  0x0260047b: mov    %ecx,0x24(%esp)
  0x0260047f: mov    0x44(%esp),%eax
  0x02600483: jmp    0x026004b8         ;*istore
                                        ; - java.lang.String::indexOf@117 (line 1776)
  0x02600488: cmp    0x8(%edx),%ebx
  0x0260048b: jae    0x02600562
  0x02600491: movzwl 0xc(%edx,%ebx,2),%ecx  ;*caload
                                        ; - java.lang.String::indexOf@129 (line 1776)
  0x02600496: cmp    0x8(%eax),%edi
  0x02600499: jae    0x0260056a
  0x0260049f: movzwl 0xc(%eax,%edi,2),%esi  ;*caload
                                        ; - java.lang.String::indexOf@133 (line 1776)
  0x026004a4: cmp    %esi,%ecx
  0x026004a6: jne    0x026004c2         ;*if_icmpne
                                        ; - java.lang.String::indexOf@134 (line 1776)
  0x026004ac: inc    %ebx
  0x026004ad: inc    %edi               ; OopMap{edx=Oop eax=Oop [68]=Oop off=270}
                                        ;*goto
                                        ; - java.lang.String::indexOf@143 (line 1777)
  0x026004ae: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::indexOf@143 (line 1777)
                                        ;   {poll}
  0x026004b4: mov    0x28(%esp),%esi
  0x026004b8: cmp    %esi,%ebx
  0x026004ba: jge    0x026004c6
  0x026004c0: jmp    0x02600488         ;*if_icmpge
                                        ; - java.lang.String::indexOf@123 (line 1776)
  0x026004c2: mov    0x28(%esp),%esi
  0x026004c6: cmp    %esi,%ebx
  0x026004c8: je     0x026004ea         ;*if_icmpne
                                        ; - java.lang.String::indexOf@150 (line 1779)
  0x026004ce: mov    0x24(%esp),%ecx
  0x026004d2: inc    %ecx               ; OopMap{edx=Oop eax=Oop [68]=Oop off=307}
                                        ;*goto
                                        ; - java.lang.String::indexOf@161 (line 1766)
  0x026004d3: test   %eax,0x200100      ;   {poll}
  0x026004d9: mov    0x1c(%esp),%esi
  0x026004dd: mov    0x4c(%esp),%edi
  0x026004e1: mov    0x20(%esp),%eax
  0x026004e5: jmp    0x02600410         ;*goto
                                        ; - java.lang.String::indexOf@161 (line 1766)
  0x026004ea: mov    0x24(%esp),%ecx
  0x026004ee: mov    0x18(%esp),%edx
  0x026004f2: sub    %edx,%ecx
  0x026004f4: mov    %ecx,%eax
  0x026004f6: add    $0x38,%esp
  0x026004f9: pop    %ebp
  0x026004fa: test   %eax,0x200100      ;   {poll_return}
  0x02600500: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@157 (line 1781)
  0x02600501: mov    $0xffffffff,%eax
  0x02600506: add    $0x38,%esp
  0x02600509: pop    %ebp
  0x0260050a: test   %eax,0x200100      ;   {poll_return}
  0x02600510: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@165 (line 1785)
  0x02600511: add    $0x38,%esp
  0x02600514: pop    %ebp
  0x02600515: test   %eax,0x200100      ;   {poll_return}
  0x0260051b: ret                       ;*ireturn
                                        ; - java.lang.String::indexOf@32 (line 1760)
  0x0260051c: mov    0x4c(%esp),%edi
  0x02600520: cmp    $0x0,%edi
  0x02600523: mov    $0xffffffff,%eax
  0x02600528: cmove  %esi,%eax
  0x0260052b: add    $0x38,%esp
  0x0260052e: pop    %ebp
  0x0260052f: test   %eax,0x200100      ;   {poll_return}
  0x02600535: ret    
  0x02600536: call   0x025fa0d0         ; OopMap{ecx=Oop [68]=Oop [16]=Oop off=411}
                                        ;*caload
                                        ; - java.lang.String::indexOf@36 (line 1763)
                                        ;   {runtime_call}
  0x0260053b: call   0x025fa0d0         ; OopMap{ecx=Oop [68]=Oop [16]=Oop off=416}
                                        ;*caload
                                        ; - java.lang.String::indexOf@36 (line 1763)
                                        ;   {runtime_call}
  0x02600540: mov    %ebx,(%esp)
  0x02600543: call   0x025f9dd0         ; OopMap{ecx=Oop [68]=Oop [16]=Oop off=424}
                                        ;*caload
                                        ; - java.lang.String::indexOf@36 (line 1763)
                                        ;   {runtime_call}
  0x02600548: call   0x025fa0d0         ; OopMap{edx=Oop [68]=Oop off=429}
                                        ;*caload
                                        ; - java.lang.String::indexOf@63 (line 1768)
                                        ;   {runtime_call}
  0x0260054d: call   0x025fa0d0         ; OopMap{edx=Oop [68]=Oop off=434}
                                        ;*caload
                                        ; - java.lang.String::indexOf@63 (line 1768)
                                        ;   {runtime_call}
  0x02600552: mov    %ecx,(%esp)
  0x02600555: call   0x025f9dd0         ; OopMap{edx=Oop [68]=Oop off=442}
                                        ;*caload
                                        ; - java.lang.String::indexOf@63 (line 1768)
                                        ;   {runtime_call}
  0x0260055a: mov    %ecx,(%esp)
  0x0260055d: call   0x025f9dd0         ; OopMap{edx=Oop [68]=Oop off=450}
                                        ;*caload
                                        ; - java.lang.String::indexOf@82 (line 1769)
                                        ;   {runtime_call}
  0x02600562: mov    %ebx,(%esp)
  0x02600565: call   0x025f9dd0         ; OopMap{edx=Oop eax=Oop [68]=Oop off=458}
                                        ;*caload
                                        ; - java.lang.String::indexOf@129 (line 1776)
                                        ;   {runtime_call}
  0x0260056a: mov    %edi,(%esp)
  0x0260056d: call   0x025f9dd0         ; OopMap{edx=Oop eax=Oop [68]=Oop off=466}
                                        ;*caload
                                        ; - java.lang.String::indexOf@133 (line 1776)
                                        ;   {runtime_call}
  0x02600572: nop    
  0x02600573: nop    
  0x02600574: mov    %fs:0x0,%esi
  0x0260057c: mov    0xfffffff4(%esi),%esi
  0x0260057f: mov    0x170(%esi),%eax
  0x02600585: movl   $0x0,0x170(%esi)
  0x0260058f: movl   $0x0,0x174(%esi)
  0x02600599: add    $0x38,%esp
  0x0260059c: pop    %ebp
  0x0260059d: jmp    0x025f9c00         ;   {runtime_call}
  0x026005a2: hlt    
  0x026005a3: hlt    
  0x026005a4: hlt    
  0x026005a5: hlt    
  0x026005a6: hlt    
  0x026005a7: hlt    
  0x026005a8: hlt    
  0x026005a9: hlt    
  0x026005aa: hlt    
  0x026005ab: hlt    
  0x026005ac: hlt    
  0x026005ad: hlt    
  0x026005ae: hlt    
  0x026005af: hlt    
[Exception Handler]
[Stub Code]
  0x026005b0: call   0x025fb1c0         ;   {no_reloc}
  0x026005b5: push   $0x6dab698c        ;   {external_word}
  0x026005ba: call   0x026005bf
  0x026005bf: pusha  
  0x026005c0: call   0x6d8b2a00         ;   {runtime_call}
  0x026005c5: hlt    
[Deopt Handler Code]
  0x026005c6: push   $0x26005c6         ;   {section_word}
  0x026005cb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x026009c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x02600ac0: nop    
  0x02600ac1: nop    
  0x02600ac2: nop    
  0x02600ac3: nop    
  0x02600ac4: nop    
  0x02600ac5: nop    
  0x02600ac6: nop    
  0x02600ac7: cmp    0x4(%ecx),%eax
  0x02600aca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02600ad0: mov    %eax,0xffffd000(%esp)
  0x02600ad7: push   %ebp
  0x02600ad8: sub    $0x18,%esp
  0x02600adb: mov    %ecx,(%esp)        ;*return
                                        ; - java.lang.Object::<init>@0 (line 20)
  0x02600ade: mov    %ecx,0x10(%esp)
  0x02600ae2: call   0x025fa1c0         ; OopMap{[16]=Oop off=39}
                                        ;*return
                                        ; - java.lang.Object::<init>@0 (line 20)
                                        ;   {runtime_call}
  0x02600ae7: add    $0x18,%esp
  0x02600aea: pop    %ebp
  0x02600aeb: test   %eax,0x200100      ;   {poll_return}
  0x02600af1: ret    
  0x02600af2: nop    
  0x02600af3: nop    
  0x02600af4: mov    %fs:0x0,%esi
  0x02600afc: mov    0xfffffff4(%esi),%esi
  0x02600aff: mov    0x170(%esi),%eax
  0x02600b05: movl   $0x0,0x170(%esi)
  0x02600b0f: movl   $0x0,0x174(%esi)
  0x02600b19: add    $0x18,%esp
  0x02600b1c: pop    %ebp
  0x02600b1d: jmp    0x025f9c00         ;   {runtime_call}
  0x02600b22: hlt    
  0x02600b23: hlt    
  0x02600b24: hlt    
  0x02600b25: hlt    
  0x02600b26: hlt    
  0x02600b27: hlt    
  0x02600b28: hlt    
  0x02600b29: hlt    
  0x02600b2a: hlt    
  0x02600b2b: hlt    
  0x02600b2c: hlt    
  0x02600b2d: hlt    
  0x02600b2e: hlt    
  0x02600b2f: hlt    
[Exception Handler]
[Stub Code]
  0x02600b30: call   0x025fb1c0         ;   {no_reloc}
  0x02600b35: push   $0x6dab698c        ;   {external_word}
  0x02600b3a: call   0x02600b3f
  0x02600b3f: pusha  
  0x02600b40: call   0x6d8b2a00         ;   {runtime_call}
  0x02600b45: hlt    
[Deopt Handler Code]
  0x02600b46: push   $0x2600b46         ;   {section_word}
  0x02600b4b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02600bc8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '()V' in 'DoubleCheckTest$ObjectHolder'
  #           [sp+0x20]  (sp of caller)
  0x02600cc0: nop    
  0x02600cc1: nop    
  0x02600cc2: nop    
  0x02600cc3: nop    
  0x02600cc4: nop    
  0x02600cc5: nop    
  0x02600cc6: nop    
  0x02600cc7: cmp    0x4(%ecx),%eax
  0x02600cca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02600cd0: mov    %eax,0xffffd000(%esp)
  0x02600cd7: push   %ebp
  0x02600cd8: sub    $0x18,%esp         ;*aload_0
                                        ; - DoubleCheckTest$ObjectHolder::<init>@0 (line 84)
  0x02600cdb: add    $0x18,%esp
  0x02600cde: pop    %ebp
  0x02600cdf: test   %eax,0x200100      ;   {poll_return}
  0x02600ce5: ret    
  0x02600ce6: nop    
  0x02600ce7: nop    
  0x02600ce8: mov    %fs:0x0,%esi
  0x02600cf0: mov    0xfffffff4(%esi),%esi
  0x02600cf3: mov    0x170(%esi),%eax
  0x02600cf9: movl   $0x0,0x170(%esi)
  0x02600d03: movl   $0x0,0x174(%esi)
  0x02600d0d: add    $0x18,%esp
  0x02600d10: pop    %ebp
  0x02600d11: jmp    0x025f9c00         ;   {runtime_call}
  0x02600d16: hlt    
  0x02600d17: hlt    
  0x02600d18: hlt    
  0x02600d19: hlt    
  0x02600d1a: hlt    
  0x02600d1b: hlt    
  0x02600d1c: hlt    
  0x02600d1d: hlt    
  0x02600d1e: hlt    
  0x02600d1f: hlt    
[Exception Handler]
[Stub Code]
  0x02600d20: call   0x025fb1c0         ;   {no_reloc}
  0x02600d25: push   $0x6dab698c        ;   {external_word}
  0x02600d2a: call   0x02600d2f
  0x02600d2f: pusha  
  0x02600d30: call   0x6d8b2a00         ;   {runtime_call}
  0x02600d35: hlt    
[Deopt Handler Code]
  0x02600d36: push   $0x2600d36         ;   {section_word}
  0x02600d3b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02600dc8:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'main' '([Ljava/lang/String;)V' in 'DoubleCheckTest'
  0x02601030: mov    %eax,0xffffd000(%esp)
  0x02601037: push   %ebp
  0x02601038: sub    $0x68,%esp         ;*aload_0
                                        ; - DoubleCheckTest::main@0 (line 119)
  0x0260103b: mov    %ecx,0x28(%esp)
  0x0260103f: mov    0x8(%ecx),%edx     ;*arraylength
                                        ; - DoubleCheckTest::main@1 (line 119)
                                        ; implicit exception: dispatches to 0x02601588
  0x02601042: cmp    $0x2,%edx
  0x02601045: je     0x02601078         ;*if_icmpeq
                                        ; - DoubleCheckTest::main@3 (line 119)
  0x0260104b: nopl   0x0(%eax,%eax,1)
  0x02601050: jmp    0x026015b5         ;   {no_reloc}
  0x02601055: xchg   %ax,%ax
  0x02601058: jmp    0x026015cf         ; implicit exception: dispatches to 0x026015bf
  0x0260105d: nop                       ;*getstatic err
                                        ; - DoubleCheckTest::main@6 (line 121)
  0x0260105e: cmp    (%esi),%eax        ; implicit exception: dispatches to 0x026015d9
  0x02601060: mov    $0x1473f7c0,%edx   ;   {oop("usage: java DoubleCheckFail <numThreads> <numSingletons>")}
  0x02601065: mov    %esi,%ecx          ;*invokevirtual println
                                        ; - DoubleCheckTest::main@11 (line 121)
  0x02601067: nop    
  0x02601068: nop    
  0x02601069: nop    
  0x0260106a: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260106f: call   0x025bd140         ; OopMap{[40]=Oop off=68}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@11 (line 121)
                                        ;   {virtual_call}
  0x02601074: mov    0x28(%esp),%ecx
  0x02601078: cmpl   $0x0,0x8(%ecx)
  0x0260107f: jbe    0x026015de
  0x02601085: mov    0xc(%ecx),%edx     ;*aaload
                                        ; - DoubleCheckTest::main@16 (line 125)
  0x02601088: mov    %edx,%ecx
  0x0260108a: mov    $0xa,%edx          ;*invokestatic parseInt
                                        ; - java.lang.Integer::parseInt@3 (line 499)
                                        ; - DoubleCheckTest::main@17 (line 125)
  0x0260108f: call   0x025bd340         ; OopMap{[40]=Oop off=100}
                                        ;*invokestatic parseInt
                                        ; - java.lang.Integer::parseInt@3 (line 499)
                                        ; - DoubleCheckTest::main@17 (line 125)
                                        ;   {static_call}
  0x02601094: mov    $0x1473d128,%esi   ;   {oop('DoubleCheckTest')}
  0x02601099: mov    %esi,0x2c(%esp)
  0x0260109d: mov    %eax,0x168(%esi)   ;*putstatic threadCount
                                        ; - DoubleCheckTest::main@20 (line 125)
  0x026010a3: mov    0x28(%esp),%ecx
  0x026010a7: cmpl   $0x1,0x8(%ecx)
  0x026010ae: jbe    0x026015ea
  0x026010b4: mov    0x10(%ecx),%ecx    ;*aaload
                                        ; - DoubleCheckTest::main@25 (line 126)
  0x026010b7: mov    $0xa,%edx          ;*invokestatic parseInt
                                        ; - java.lang.Integer::parseInt@3 (line 499)
                                        ; - DoubleCheckTest::main@26 (line 126)
  0x026010bc: nop    
  0x026010bd: nop    
  0x026010be: nop    
  0x026010bf: call   0x025bd340         ; OopMap{[44]=Oop off=148}
                                        ;*invokestatic parseInt
                                        ; - java.lang.Integer::parseInt@3 (line 499)
                                        ; - DoubleCheckTest::main@26 (line 126)
                                        ;   {static_call}
  0x026010c4: mov    0x2c(%esp),%esi
  0x026010c8: mov    %eax,0x16c(%esi)   ;*putstatic singletonCount
                                        ; - DoubleCheckTest::main@29 (line 126)
  0x026010ce: mov    0x168(%esi),%ebx   ;*getstatic threadCount
                                        ; - DoubleCheckTest::main@32 (line 129)
  0x026010d4: mov    $0x14622e08,%edx   ;   {oop('java/lang/Thread'[])}
  0x026010d9: mov    %ebx,%edi
  0x026010db: cmp    $0xffffff,%ebx
  0x026010e1: ja     0x026015f6
  0x026010e7: mov    $0x13,%esi
  0x026010ec: lea    (%esi,%ebx,4),%esi
  0x026010ef: and    $0xfffffff8,%esi
  0x026010f2: mov    %fs:0x0,%ecx
  0x026010fa: mov    0xfffffff4(%ecx),%ecx
  0x026010fd: mov    0x34(%ecx),%eax
  0x02601100: lea    (%eax,%esi,1),%esi
  0x02601103: cmp    0x3c(%ecx),%esi
  0x02601106: ja     0x026015f6
  0x0260110c: mov    %esi,0x34(%ecx)
  0x0260110f: sub    %eax,%esi
  0x02601111: movl   $0x1,(%eax)
  0x02601117: mov    %edx,0x4(%eax)
  0x0260111a: mov    %ebx,0x8(%eax)
  0x0260111d: sub    $0xc,%esi
  0x02601120: je     0x02601146
  0x02601126: xor    %ebx,%ebx
  0x02601128: shr    $0x3,%esi
  0x0260112b: jae    0x0260113b
  0x02601131: mov    %ebx,0xc(%eax,%esi,8)
  0x02601135: je     0x02601146
  0x0260113b: mov    %ebx,0x8(%eax,%esi,8)
  0x0260113f: mov    %ebx,0x4(%eax,%esi,8)
  0x02601143: dec    %esi
  0x02601144: jne    0x0260113b         ;*anewarray
                                        ; - DoubleCheckTest::main@35 (line 129)
  0x02601146: mov    0x2c(%esp),%esi
  0x0260114a: mov    %eax,0x158(%esi)
  0x02601150: mov    %esi,%ebx
  0x02601152: shr    $0x9,%ebx
  0x02601155: movb   $0x0,0x1856d380(%ebx)  ;*putstatic threads
                                        ; - DoubleCheckTest::main@38 (line 129)
  0x0260115c: mov    0x16c(%esi),%ebx   ;*getstatic singletonCount
                                        ; - DoubleCheckTest::main@41 (line 130)
  0x02601162: mov    $0x1473dc98,%edx   ;   {oop('DoubleCheckTest$ObjectHolder'[])}
  0x02601167: mov    %ebx,%edi
  0x02601169: cmp    $0xffffff,%ebx
  0x0260116f: ja     0x02601600
  0x02601175: mov    $0x13,%esi
  0x0260117a: lea    (%esi,%ebx,4),%esi
  0x0260117d: and    $0xfffffff8,%esi
  0x02601180: mov    %fs:0x0,%ecx
  0x02601188: mov    0xfffffff4(%ecx),%ecx
  0x0260118b: mov    0x34(%ecx),%eax
  0x0260118e: lea    (%eax,%esi,1),%esi
  0x02601191: cmp    0x3c(%ecx),%esi
  0x02601194: ja     0x02601600
  0x0260119a: mov    %esi,0x34(%ecx)
  0x0260119d: sub    %eax,%esi
  0x0260119f: movl   $0x1,(%eax)
  0x026011a5: mov    %edx,0x4(%eax)
  0x026011a8: mov    %ebx,0x8(%eax)
  0x026011ab: sub    $0xc,%esi
  0x026011ae: je     0x026011d4
  0x026011b4: xor    %ebx,%ebx
  0x026011b6: shr    $0x3,%esi
  0x026011b9: jae    0x026011c9
  0x026011bf: mov    %ebx,0xc(%eax,%esi,8)
  0x026011c3: je     0x026011d4
  0x026011c9: mov    %ebx,0x8(%eax,%esi,8)
  0x026011cd: mov    %ebx,0x4(%eax,%esi,8)
  0x026011d1: dec    %esi
  0x026011d2: jne    0x026011c9         ;*anewarray
                                        ; - DoubleCheckTest::main@44 (line 130)
  0x026011d4: mov    0x2c(%esp),%esi
  0x026011d8: mov    %eax,0x154(%esi)
  0x026011de: shr    $0x9,%esi
  0x026011e1: movb   $0x0,0x1856d380(%esi)  ;*putstatic singletons
                                        ; - DoubleCheckTest::main@47 (line 130)
  0x026011e8: mov    $0x0,%ebx
  0x026011ed: jmp    0x0260129d         ;*istore_1
                                        ; - DoubleCheckTest::main@51 (line 133)
  0x026011f2: xchg   %ax,%ax
  0x026011f4: mov    $0x1473d128,%edx   ;   {oop('DoubleCheckTest')}
  0x026011f9: mov    0x154(%edx),%esi   ;*getstatic singletons
                                        ; - DoubleCheckTest::main@59 (line 134)
  0x026011ff: mov    $0x1473dac0,%edx   ;   {oop('DoubleCheckTest$ObjectHolder')}
  0x02601204: mov    %esi,0x34(%esp)
  0x02601208: mov    %fs:0x0,%ecx
  0x02601210: mov    0xfffffff4(%ecx),%ecx
  0x02601213: mov    0x34(%ecx),%eax
  0x02601216: lea    0x10(%eax),%edi
  0x02601219: cmp    0x3c(%ecx),%edi
  0x0260121c: ja     0x0260160a
  0x02601222: mov    %edi,0x34(%ecx)
  0x02601225: mov    0x68(%edx),%ecx
  0x02601228: mov    %ecx,(%eax)
  0x0260122a: mov    %edx,0x4(%eax)
  0x0260122d: xor    %ecx,%ecx
  0x0260122f: mov    %ecx,0x8(%eax)
  0x02601232: mov    %ecx,0xc(%eax)     ;*new  ; - DoubleCheckTest::main@63 (line 134)
  0x02601235: mov    0x34(%esp),%esi
  0x02601239: lea    0xc(%esi,%ebx,4),%edx
  0x0260123d: cmp    0x8(%esi),%ebx     ; implicit exception: dispatches to 0x02601616
  0x02601240: jae    0x02601620
  0x02601246: cmp    $0x0,%eax
  0x02601249: je     0x0260128a
  0x0260124f: mov    0x4(%esi),%esi     ; implicit exception: dispatches to 0x02601628
  0x02601252: mov    0x4(%eax),%edi
  0x02601255: mov    0x88(%esi),%esi
  0x0260125b: cmp    %esi,%edi
  0x0260125d: je     0x0260128a
  0x02601263: mov    0x10(%esi),%ecx
  0x02601266: cmp    (%edi,%ecx,1),%esi
  0x02601269: je     0x0260128a
  0x0260126f: cmp    $0x14,%ecx
  0x02601272: jne    0x0260162d
  0x02601278: push   %edi
  0x02601279: push   %esi
  0x0260127a: call   0x025fb700         ;   {runtime_call}
  0x0260127f: pop    %edi
  0x02601280: pop    %esi
  0x02601281: cmp    $0x0,%esi
  0x02601284: je     0x0260162d
  0x0260128a: mov    %eax,(%edx)
  0x0260128c: shr    $0x9,%edx
  0x0260128f: movb   $0x0,0x1856d380(%edx)  ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
  0x02601296: inc    %ebx               ; OopMap{off=615}
                                        ;*goto
                                        ; - DoubleCheckTest::main@74 (line 133)
  0x02601297: test   %eax,0x200100      ;*goto
                                        ; - DoubleCheckTest::main@74 (line 133)
                                        ;   {poll}
  0x0260129d: mov    $0x1473d128,%edx   ;   {oop('DoubleCheckTest')}
  0x026012a2: mov    0x16c(%edx),%edx   ;*getstatic singletonCount
                                        ; - DoubleCheckTest::main@53 (line 133)
  0x026012a8: cmp    %edx,%ebx
  0x026012aa: jl     0x026011f4         ;*if_icmpge
                                        ; - DoubleCheckTest::main@56 (line 133)
  0x026012b0: mov    $0x0,%ebx
  0x026012b5: jmp    0x026013ac         ;*istore_1
                                        ; - DoubleCheckTest::main@78 (line 137)
  0x026012ba: xchg   %ax,%ax
  0x026012bc: mov    %ebx,0x44(%esp)
  0x026012c0: mov    $0x1473d128,%edx   ;   {oop('DoubleCheckTest')}
  0x026012c5: mov    0x158(%edx),%esi   ;*getstatic threads
                                        ; - DoubleCheckTest::main@86 (line 138)
  0x026012cb: mov    $0x145c3688,%edx   ;   {oop('java/lang/Thread')}
  0x026012d0: mov    %esi,0x38(%esp)
  0x026012d4: mov    %fs:0x0,%ecx
  0x026012dc: mov    0xfffffff4(%ecx),%ecx
  0x026012df: mov    0x34(%ecx),%eax
  0x026012e2: lea    0x70(%eax),%edi
  0x026012e5: cmp    0x3c(%ecx),%edi
  0x026012e8: ja     0x02601632
  0x026012ee: mov    %edi,0x34(%ecx)
  0x026012f1: mov    0x68(%edx),%ecx
  0x026012f4: mov    %ecx,(%eax)
  0x026012f6: mov    %edx,0x4(%eax)
  0x026012f9: xor    %ecx,%ecx
  0x026012fb: mov    $0xd,%edi
  0x02601300: mov    %ecx,0x4(%eax,%edi,8)
  0x02601304: mov    %ecx,(%eax,%edi,8)
  0x02601307: dec    %edi
  0x02601308: jne    0x02601300         ;*new  ; - DoubleCheckTest::main@90 (line 138)
  0x0260130a: nopw   0x0(%eax,%eax,1)
  0x02601310: jmp    0x02601666         ;   {no_reloc}
  0x02601315: mov    %eax,0x40(%esp)
  0x02601319: jmp    0x02601670         ;*new  ; - DoubleCheckTest::main@94 (line 138)
  0x0260131e: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@98 (line 138)
  0x02601320: mov    %eax,0x3c(%esp)
  0x02601324: nop    
  0x02601325: nop    
  0x02601326: nop    
  0x02601327: call   0x025bcf40         ; OopMap{[56]=Oop [64]=Oop [60]=Oop off=764}
                                        ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@98 (line 138)
                                        ;   {optimized virtual_call}
  0x0260132c: mov    0x3c(%esp),%edx
  0x02601330: mov    0x40(%esp),%ecx    ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@101 (line 138)
  0x02601334: nop    
  0x02601335: nop    
  0x02601336: nop    
  0x02601337: call   0x025bcf40         ; OopMap{[56]=Oop [64]=Oop off=780}
                                        ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@101 (line 138)
                                        ;   {optimized virtual_call}
  0x0260133c: mov    0x38(%esp),%esi
  0x02601340: mov    0x44(%esp),%ebx
  0x02601344: lea    0xc(%esi,%ebx,4),%ecx
  0x02601348: cmp    0x8(%esi),%ebx     ; implicit exception: dispatches to 0x0260167c
  0x0260134b: jae    0x02601686
  0x02601351: mov    0x40(%esp),%eax
  0x02601355: cmp    $0x0,%eax
  0x02601358: je     0x02601399
  0x0260135e: mov    0x4(%esi),%esi     ; implicit exception: dispatches to 0x0260168e
  0x02601361: mov    0x4(%eax),%edi
  0x02601364: mov    0x88(%esi),%esi
  0x0260136a: cmp    %esi,%edi
  0x0260136c: je     0x02601399
  0x02601372: mov    0x10(%esi),%edx
  0x02601375: cmp    (%edi,%edx,1),%esi
  0x02601378: je     0x02601399
  0x0260137e: cmp    $0x14,%edx
  0x02601381: jne    0x02601693
  0x02601387: push   %edi
  0x02601388: push   %esi
  0x02601389: call   0x025fb700         ;   {runtime_call}
  0x0260138e: pop    %edi
  0x0260138f: pop    %esi
  0x02601390: cmp    $0x0,%esi
  0x02601393: je     0x02601693
  0x02601399: mov    %eax,(%ecx)
  0x0260139b: shr    $0x9,%ecx
  0x0260139e: movb   $0x0,0x1856d380(%ecx)  ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
  0x026013a5: inc    %ebx               ; OopMap{off=886}
                                        ;*goto
                                        ; - DoubleCheckTest::main@108 (line 137)
  0x026013a6: test   %eax,0x200100      ;*goto
                                        ; - DoubleCheckTest::main@108 (line 137)
                                        ;   {poll}
  0x026013ac: mov    $0x1473d128,%edx   ;   {oop('DoubleCheckTest')}
  0x026013b1: mov    0x168(%edx),%edx   ;*getstatic threadCount
                                        ; - DoubleCheckTest::main@80 (line 137)
  0x026013b7: cmp    %edx,%ebx
  0x026013b9: jl     0x026012bc         ;*if_icmpge
                                        ; - DoubleCheckTest::main@83 (line 137)
  0x026013bf: mov    $0x0,%esi
  0x026013c4: jmp    0x026013fb         ;*istore_1
                                        ; - DoubleCheckTest::main@112 (line 141)
  0x026013c9: xchg   %ax,%ax
  0x026013cc: mov    $0x1473d128,%ecx   ;   {oop('DoubleCheckTest')}
  0x026013d1: mov    0x158(%ecx),%ecx   ;*getstatic threads
                                        ; - DoubleCheckTest::main@120 (line 142)
  0x026013d7: cmp    0x8(%ecx),%esi     ; implicit exception: dispatches to 0x02601698
  0x026013da: jae    0x026016a2
  0x026013e0: mov    0xc(%ecx,%esi,4),%ecx  ;*aaload
                                        ; - DoubleCheckTest::main@124 (line 142)
  0x026013e4: cmp    (%ecx),%eax        ;*invokevirtual start
                                        ; - DoubleCheckTest::main@125 (line 142)
                                        ; implicit exception: dispatches to 0x026016aa
  0x026013e6: mov    %esi,0x48(%esp)
  0x026013ea: nop    
  0x026013eb: call   0x025bcf40         ; OopMap{off=960}
                                        ;*invokevirtual start
                                        ; - DoubleCheckTest::main@125 (line 142)
                                        ;   {optimized virtual_call}
  0x026013f0: mov    0x48(%esp),%esi
  0x026013f4: inc    %esi               ; OopMap{off=965}
                                        ;*goto
                                        ; - DoubleCheckTest::main@131 (line 141)
  0x026013f5: test   %eax,0x200100      ;*goto
                                        ; - DoubleCheckTest::main@131 (line 141)
                                        ;   {poll}
  0x026013fb: mov    $0x1473d128,%ecx   ;   {oop('DoubleCheckTest')}
  0x02601400: mov    0x168(%ecx),%ecx   ;*getstatic threadCount
                                        ; - DoubleCheckTest::main@114 (line 141)
  0x02601406: cmp    %ecx,%esi
  0x02601408: jl     0x026013cc         ;*if_icmpge
                                        ; - DoubleCheckTest::main@117 (line 141)
  0x0260140a: mov    $0x0,%esi
  0x0260140f: jmp    0x02601523         ;*istore_1
                                        ; - DoubleCheckTest::main@135 (line 145)
  0x02601414: mov    %esi,0x50(%esp)
  0x02601418: jmp    0x026016d7         ;   {no_reloc}
  0x0260141d: xchg   %ax,%ax
  0x02601420: jmp    0x026016f1         ; implicit exception: dispatches to 0x026016e1
  0x02601425: nop                       ;*getstatic out
                                        ; - DoubleCheckTest::main@143 (line 149)
  0x02601426: xchg   %ax,%ax
  0x02601428: jmp    0x02601723         ;   {no_reloc}
  0x0260142d: jmp    0x0260172d         ;*new  ; - DoubleCheckTest::main@146 (line 149)
  0x02601432: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@150 (line 149)
  0x02601434: mov    %edi,0x54(%esp)
  0x02601438: mov    %eax,0x4c(%esp)
  0x0260143c: nop    
  0x0260143d: nop    
  0x0260143e: nop    
  0x0260143f: call   0x025bcf40         ; OopMap{[76]=Oop [84]=Oop off=1044}
                                        ;*invokespecial <init>
                                        ; - DoubleCheckTest::main@150 (line 149)
                                        ;   {optimized virtual_call}
  0x02601444: mov    $0x1473f880,%edx   ;   {oop("waiting to join ")}
  0x02601449: mov    0x4c(%esp),%ecx    ;*invokevirtual append
                                        ; - DoubleCheckTest::main@155 (line 149)
  0x0260144d: nop    
  0x0260144e: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02601453: call   0x025bd140         ; OopMap{[84]=Oop off=1064}
                                        ;*invokevirtual append
                                        ; - DoubleCheckTest::main@155 (line 149)
                                        ;   {virtual_call}
  0x02601458: cmp    (%eax),%eax        ; implicit exception: dispatches to 0x02601739
  0x0260145a: mov    0x50(%esp),%edx
  0x0260145e: mov    %eax,%ecx          ;*invokevirtual append
                                        ; - DoubleCheckTest::main@159 (line 149)
  0x02601460: nop    
  0x02601461: nop    
  0x02601462: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02601467: call   0x025bd140         ; OopMap{[84]=Oop off=1084}
                                        ;*invokevirtual append
                                        ; - DoubleCheckTest::main@159 (line 149)
                                        ;   {virtual_call}
  0x0260146c: cmp    (%eax),%eax        ; implicit exception: dispatches to 0x0260173e
  0x0260146e: mov    %eax,%ecx          ;*invokevirtual toString
                                        ; - DoubleCheckTest::main@162 (line 149)
  0x02601470: nop    
  0x02601471: nop    
  0x02601472: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02601477: call   0x025bd140         ; OopMap{[84]=Oop off=1100}
                                        ;*invokevirtual toString
                                        ; - DoubleCheckTest::main@162 (line 149)
                                        ;   {virtual_call}
  0x0260147c: mov    0x54(%esp),%edi
  0x02601480: cmp    (%edi),%eax        ; implicit exception: dispatches to 0x02601743
  0x02601482: mov    %eax,%edx
  0x02601484: mov    %edi,%ecx          ;*invokevirtual println
                                        ; - DoubleCheckTest::main@165 (line 149)
  0x02601486: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260148b: call   0x025bd140         ; OopMap{off=1120}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@165 (line 149)
                                        ;   {virtual_call}
  0x02601490: mov    $0x1473d128,%ecx   ;   {oop('DoubleCheckTest')}
  0x02601495: mov    0x158(%ecx),%ecx   ;*getstatic threads
                                        ; - DoubleCheckTest::main@168 (line 150)
  0x0260149b: mov    0x50(%esp),%esi
  0x0260149f: cmp    0x8(%ecx),%esi     ; implicit exception: dispatches to 0x02601748
  0x026014a2: jae    0x02601752
  0x026014a8: mov    0xc(%ecx,%esi,4),%ecx  ;*aaload
                                        ; - DoubleCheckTest::main@172 (line 150)
  0x026014ac: cmp    (%ecx),%eax        ;*invokevirtual join
                                        ; - DoubleCheckTest::main@173 (line 150)
                                        ; implicit exception: dispatches to 0x0260175a
  0x026014ae: movl   $0x0,0x4(%esp)
  0x026014b6: movl   $0x0,(%esp)        ;*invokevirtual join
                                        ; - java.lang.Thread::join@2 (line 1239)
                                        ; - DoubleCheckTest::main@173 (line 150)
  0x026014bd: mov    %esi,0x50(%esp)
  0x026014c1: nop    
  0x026014c2: nop    
  0x026014c3: call   0x025bcf40         ; OopMap{off=1176}
                                        ;*invokevirtual join
                                        ; - java.lang.Thread::join@2 (line 1239)
                                        ; - DoubleCheckTest::main@173 (line 150)
                                        ;   {optimized virtual_call}
  0x026014c8: jmp    0x02601518         ;*goto
                                        ; - DoubleCheckTest::main@176 (line 155)
  0x026014cd: mov    %fs:0x0,%edx
  0x026014d5: mov    0xfffffff4(%edx),%edx
  0x026014d8: mov    0x170(%edx),%eax
  0x026014de: movl   $0x0,0x170(%edx)
  0x026014e8: movl   $0x0,0x174(%edx)
  0x026014f2: nopw   0x0(%eax,%eax,1)
  0x026014f8: jmp    0x02601787         ;   {no_reloc}
  0x026014fd: xchg   %ax,%ax
  0x02601500: jmp    0x026017a1         ; implicit exception: dispatches to 0x02601791
  0x02601505: nop                       ;*getstatic out
                                        ; - DoubleCheckTest::main@180 (line 154)
  0x02601506: cmp    (%ecx),%eax        ; implicit exception: dispatches to 0x026017ab
  0x02601508: mov    $0x1473f8c8,%edx   ;*invokevirtual println
                                        ; - DoubleCheckTest::main@185 (line 154)
                                        ;   {oop("interrupted")}
  0x0260150d: nop    
  0x0260150e: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02601513: call   0x025bd140         ; OopMap{off=1256}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@185 (line 154)
                                        ;   {virtual_call}
  0x02601518: mov    0x50(%esp),%esi
  0x0260151c: inc    %esi               ; OopMap{off=1261}
                                        ;*goto
                                        ; - DoubleCheckTest::main@191 (line 145)
  0x0260151d: test   %eax,0x200100      ;*goto
                                        ; - DoubleCheckTest::main@191 (line 145)
                                        ;   {poll}
  0x02601523: mov    $0x1473d128,%edx   ;   {oop('DoubleCheckTest')}
  0x02601528: mov    0x168(%edx),%edx   ;*getstatic threadCount
                                        ; - DoubleCheckTest::main@137 (line 145)
  0x0260152e: cmp    %edx,%esi
  0x02601530: jl     0x02601414         ;*if_icmpge
                                        ; - DoubleCheckTest::main@140 (line 145)
  0x02601536: xchg   %ax,%ax
  0x02601538: jmp    0x026017d8         ;   {no_reloc}
  0x0260153d: xchg   %ax,%ax
  0x02601540: jmp    0x026017f2         ; implicit exception: dispatches to 0x026017e2
  0x02601545: nop                       ;*getstatic out
                                        ; - DoubleCheckTest::main@194 (line 157)
  0x02601546: cmp    (%ecx),%eax        ; implicit exception: dispatches to 0x026017fc
  0x02601548: mov    $0x1473f908,%edx   ;*invokevirtual println
                                        ; - DoubleCheckTest::main@199 (line 157)
                                        ;   {oop("done")}
  0x0260154d: nop    
  0x0260154e: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02601553: call   0x025bd140         ; OopMap{off=1320}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@199 (line 157)
                                        ;   {virtual_call}
  0x02601558: add    $0x68,%esp
  0x0260155b: pop    %ebp
  0x0260155c: test   %eax,0x200100      ;   {poll_return}
  0x02601562: ret                       ;*return
                                        ; - DoubleCheckTest::main@202 (line 158)
  0x02601563: mov    %eax,0xffffd000(%esp)
  0x0260156a: push   %ebp
  0x0260156b: sub    $0x68,%esp
  0x0260156e: mov    0x4(%ecx),%esi
  0x02601571: mov    %ecx,(%esp)
  0x02601574: mov    %esi,0x30(%esp)
  0x02601578: call   0x6d8a2930         ;   {runtime_call}
  0x0260157d: mov    0x30(%esp),%esi
  0x02601581: mov    %esi,%ebx
  0x02601583: jmp    0x0260129d
  0x02601588: call   0x025fa0d0         ; OopMap{ecx=Oop [40]=Oop off=1373}
                                        ;*arraylength
                                        ; - DoubleCheckTest::main@1 (line 119)
                                        ;   {runtime_call}
  0x0260158d: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02601592: push   %eax
  0x02601593: mov    %fs:0x0,%eax
  0x0260159b: mov    0xfffffff4(%eax),%eax
  0x0260159e: cmp    0xe8(%edx),%eax
  0x026015a4: pop    %eax
  0x026015a5: jne    0x026015b5
  0x026015ab: jmp    0x02601055
  0x026015b0: mov    $0x5232800,%eax
  0x026015b5: call   0x025fbd40         ; OopMap{[40]=Oop off=1418}
                                        ;*getstatic err
                                        ; - DoubleCheckTest::main@6 (line 121)
                                        ;   {runtime_call}
  0x026015ba: jmp    0x02601050
  0x026015bf: call   0x025fa0d0         ; OopMap{[40]=Oop edx=Oop off=1428}
                                        ;*getstatic err
                                        ; - DoubleCheckTest::main@6 (line 121)
                                        ;   {runtime_call}
  0x026015c4: mov    0x0(%edx),%esi
  0x026015ca: mov    $0x6050b00,%eax
  0x026015cf: call   0x025fbb80         ; OopMap{[40]=Oop edx=Oop off=1444}
                                        ;*getstatic err
                                        ; - DoubleCheckTest::main@6 (line 121)
                                        ;   {runtime_call}
  0x026015d4: jmp    0x02601058
  0x026015d9: call   0x025fa0d0         ; OopMap{[40]=Oop esi=Oop off=1454}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@11 (line 121)
                                        ;   {runtime_call}
  0x026015de: movl   $0x0,(%esp)
  0x026015e5: call   0x025f9dd0         ; OopMap{ecx=Oop [40]=Oop off=1466}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@16 (line 125)
                                        ;   {runtime_call}
  0x026015ea: movl   $0x1,(%esp)
  0x026015f1: call   0x025f9dd0         ; OopMap{esi=Oop [44]=Oop ecx=Oop [40]=Oop off=1478}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@25 (line 126)
                                        ;   {runtime_call}
  0x026015f6: call   0x025fad80         ; OopMap{[44]=Oop off=1483}
                                        ;*anewarray
                                        ; - DoubleCheckTest::main@35 (line 129)
                                        ;   {runtime_call}
  0x026015fb: jmp    0x02601146
  0x02601600: call   0x025fad80         ; OopMap{[44]=Oop off=1493}
                                        ;*anewarray
                                        ; - DoubleCheckTest::main@44 (line 130)
                                        ;   {runtime_call}
  0x02601605: jmp    0x026011d4
  0x0260160a: mov    %edx,%edx
  0x0260160c: call   0x025fa480         ; OopMap{[52]=Oop off=1505}
                                        ;*new  ; - DoubleCheckTest::main@63 (line 134)
                                        ;   {runtime_call}
  0x02601611: jmp    0x02601235
  0x02601616: call   0x025fa0d0         ; OopMap{eax=Oop esi=Oop off=1515}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
                                        ;   {runtime_call}
  0x0260161b: call   0x025fa0d0         ; OopMap{eax=Oop esi=Oop off=1520}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
                                        ;   {runtime_call}
  0x02601620: mov    %ebx,(%esp)
  0x02601623: call   0x025f9dd0         ; OopMap{eax=Oop esi=Oop off=1528}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
                                        ;   {runtime_call}
  0x02601628: call   0x025fa0d0         ; OopMap{eax=Oop off=1533}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
                                        ;   {runtime_call}
  0x0260162d: call   0x025fb410         ; OopMap{eax=Oop off=1538}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@70 (line 134)
                                        ;   {runtime_call}
  0x02601632: mov    %edx,%edx
  0x02601634: call   0x025fa480         ; OopMap{[56]=Oop off=1545}
                                        ;*new  ; - DoubleCheckTest::main@90 (line 138)
                                        ;   {runtime_call}
  0x02601639: jmp    0x0260130a
  0x0260163e: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02601643: push   %eax
  0x02601644: mov    %fs:0x0,%eax
  0x0260164c: mov    0xfffffff4(%eax),%eax
  0x0260164f: cmp    0xe8(%edx),%eax
  0x02601655: pop    %eax
  0x02601656: jne    0x02601666
  0x0260165c: jmp    0x02601315
  0x02601661: mov    $0x5232800,%eax
  0x02601666: call   0x025fbd40         ; OopMap{[56]=Oop eax=Oop off=1595}
                                        ;*new  ; - DoubleCheckTest::main@94 (line 138)
                                        ;   {runtime_call}
  0x0260166b: jmp    0x02601310
  0x02601670: mov    %edx,%edx
  0x02601672: call   0x025fa300         ; OopMap{[56]=Oop [64]=Oop off=1607}
                                        ;*new  ; - DoubleCheckTest::main@94 (line 138)
                                        ;   {runtime_call}
  0x02601677: jmp    0x0260131e
  0x0260167c: call   0x025fa0d0         ; OopMap{[64]=Oop esi=Oop off=1617}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
                                        ;   {runtime_call}
  0x02601681: call   0x025fa0d0         ; OopMap{[64]=Oop esi=Oop off=1622}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
                                        ;   {runtime_call}
  0x02601686: mov    %ebx,(%esp)
  0x02601689: call   0x025f9dd0         ; OopMap{[64]=Oop esi=Oop off=1630}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
                                        ;   {runtime_call}
  0x0260168e: call   0x025fa0d0         ; OopMap{eax=Oop off=1635}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
                                        ;   {runtime_call}
  0x02601693: call   0x025fb410         ; OopMap{eax=Oop off=1640}
                                        ;*aastore
                                        ; - DoubleCheckTest::main@104 (line 138)
                                        ;   {runtime_call}
  0x02601698: call   0x025fa0d0         ; OopMap{ecx=Oop off=1645}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@124 (line 142)
                                        ;   {runtime_call}
  0x0260169d: call   0x025fa0d0         ; OopMap{ecx=Oop off=1650}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@124 (line 142)
                                        ;   {runtime_call}
  0x026016a2: mov    %esi,(%esp)
  0x026016a5: call   0x025f9dd0         ; OopMap{ecx=Oop off=1658}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@124 (line 142)
                                        ;   {runtime_call}
  0x026016aa: call   0x025fa0d0         ; OopMap{ecx=Oop off=1663}
                                        ;*invokevirtual start
                                        ; - DoubleCheckTest::main@125 (line 142)
                                        ;   {runtime_call}
  0x026016af: mov    $0x0,%edx          ;   {oop(NULL)}
  0x026016b4: push   %eax
  0x026016b5: mov    %fs:0x0,%eax
  0x026016bd: mov    0xfffffff4(%eax),%eax
  0x026016c0: cmp    0xe8(%edx),%eax
  0x026016c6: pop    %eax
  0x026016c7: jne    0x026016d7
  0x026016cd: jmp    0x0260141d
  0x026016d2: mov    $0x5232800,%eax
  0x026016d7: call   0x025fbd40         ; OopMap{off=1708}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@143 (line 149)
                                        ;   {runtime_call}
  0x026016dc: jmp    0x02601418
  0x026016e1: call   0x025fa0d0         ; OopMap{edx=Oop off=1718}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@143 (line 149)
                                        ;   {runtime_call}
  0x026016e6: mov    0x0(%edx),%edi
  0x026016ec: mov    $0x6050b00,%eax
  0x026016f1: call   0x025fbb80         ; OopMap{edx=Oop off=1734}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@143 (line 149)
                                        ;   {runtime_call}
  0x026016f6: jmp    0x02601420
  0x026016fb: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02601700: push   %eax
  0x02601701: mov    %fs:0x0,%eax
  0x02601709: mov    0xfffffff4(%eax),%eax
  0x0260170c: cmp    0xe8(%edx),%eax
  0x02601712: pop    %eax
  0x02601713: jne    0x02601723
  0x02601719: jmp    0x0260142d
  0x0260171e: mov    $0x5232800,%eax
  0x02601723: call   0x025fbd40         ; OopMap{edi=Oop off=1784}
                                        ;*new  ; - DoubleCheckTest::main@146 (line 149)
                                        ;   {runtime_call}
  0x02601728: jmp    0x02601428
  0x0260172d: mov    %edx,%edx
  0x0260172f: call   0x025fa300         ; OopMap{edi=Oop off=1796}
                                        ;*new  ; - DoubleCheckTest::main@146 (line 149)
                                        ;   {runtime_call}
  0x02601734: jmp    0x02601432
  0x02601739: call   0x025fa0d0         ; OopMap{[84]=Oop eax=Oop off=1806}
                                        ;*invokevirtual append
                                        ; - DoubleCheckTest::main@159 (line 149)
                                        ;   {runtime_call}
  0x0260173e: call   0x025fa0d0         ; OopMap{[84]=Oop eax=Oop off=1811}
                                        ;*invokevirtual toString
                                        ; - DoubleCheckTest::main@162 (line 149)
                                        ;   {runtime_call}
  0x02601743: call   0x025fa0d0         ; OopMap{eax=Oop edi=Oop off=1816}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@165 (line 149)
                                        ;   {runtime_call}
  0x02601748: call   0x025fa0d0         ; OopMap{ecx=Oop off=1821}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@172 (line 150)
                                        ;   {runtime_call}
  0x0260174d: call   0x025fa0d0         ; OopMap{ecx=Oop off=1826}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@172 (line 150)
                                        ;   {runtime_call}
  0x02601752: mov    %esi,(%esp)
  0x02601755: call   0x025f9dd0         ; OopMap{ecx=Oop off=1834}
                                        ;*aaload
                                        ; - DoubleCheckTest::main@172 (line 150)
                                        ;   {runtime_call}
  0x0260175a: call   0x025fa0d0         ; OopMap{ecx=Oop off=1839}
                                        ;*invokevirtual join
                                        ; - DoubleCheckTest::main@173 (line 150)
                                        ;   {runtime_call}
  0x0260175f: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02601764: push   %eax
  0x02601765: mov    %fs:0x0,%eax
  0x0260176d: mov    0xfffffff4(%eax),%eax
  0x02601770: cmp    0xe8(%edx),%eax
  0x02601776: pop    %eax
  0x02601777: jne    0x02601787
  0x0260177d: jmp    0x026014fd
  0x02601782: mov    $0x5232800,%eax
  0x02601787: call   0x025fbd40         ; OopMap{off=1884}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@180 (line 154)
                                        ;   {runtime_call}
  0x0260178c: jmp    0x026014f8
  0x02601791: call   0x025fa0d0         ; OopMap{edx=Oop off=1894}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@180 (line 154)
                                        ;   {runtime_call}
  0x02601796: mov    0x0(%edx),%ecx
  0x0260179c: mov    $0x6050b00,%eax
  0x026017a1: call   0x025fbb80         ; OopMap{edx=Oop off=1910}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@180 (line 154)
                                        ;   {runtime_call}
  0x026017a6: jmp    0x02601500
  0x026017ab: call   0x025fa0d0         ; OopMap{ecx=Oop off=1920}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@185 (line 154)
                                        ;   {runtime_call}
  0x026017b0: mov    $0x0,%edx          ;   {oop(NULL)}
  0x026017b5: push   %eax
  0x026017b6: mov    %fs:0x0,%eax
  0x026017be: mov    0xfffffff4(%eax),%eax
  0x026017c1: cmp    0xe8(%edx),%eax
  0x026017c7: pop    %eax
  0x026017c8: jne    0x026017d8
  0x026017ce: jmp    0x0260153d
  0x026017d3: mov    $0x5232800,%eax
  0x026017d8: call   0x025fbd40         ; OopMap{off=1965}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@194 (line 157)
                                        ;   {runtime_call}
  0x026017dd: jmp    0x02601538
  0x026017e2: call   0x025fa0d0         ; OopMap{edx=Oop off=1975}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@194 (line 157)
                                        ;   {runtime_call}
  0x026017e7: mov    0x0(%edx),%ecx
  0x026017ed: mov    $0x6050b00,%eax
  0x026017f2: call   0x025fbb80         ; OopMap{edx=Oop off=1991}
                                        ;*getstatic out
                                        ; - DoubleCheckTest::main@194 (line 157)
                                        ;   {runtime_call}
  0x026017f7: jmp    0x02601540
  0x026017fc: call   0x025fa0d0         ; OopMap{ecx=Oop off=2001}
                                        ;*invokevirtual println
                                        ; - DoubleCheckTest::main@199 (line 157)
                                        ;   {runtime_call}
  0x02601801: mov    %esi,0x50(%esp)
  0x02601805: jmp    0x026014cd
  0x0260180a: mov    %esi,0x50(%esp)
  0x0260180e: jmp    0x026014cd
  0x02601813: mov    %esi,0x50(%esp)
  0x02601817: jmp    0x026014cd
  0x0260181c: nop    
  0x0260181d: nop    
  0x0260181e: mov    %fs:0x0,%esi
  0x02601826: mov    0xfffffff4(%esi),%esi
  0x02601829: mov    0x170(%esi),%eax
  0x0260182f: movl   $0x0,0x170(%esi)
  0x02601839: movl   $0x0,0x174(%esi)
  0x02601843: add    $0x68,%esp
  0x02601846: pop    %ebp
  0x02601847: jmp    0x025f9c00         ;   {runtime_call}
  0x0260184c: hlt    
  0x0260184d: hlt    
  0x0260184e: hlt    
  0x0260184f: hlt    
[Stub Code]
  0x02601850: nop                       ;   {no_reloc}
  0x02601851: nop    
  0x02601852: mov    $0x0,%ebx          ;   {static_stub}
  0x02601857: jmp    0x02601857         ;   {runtime_call}
  0x0260185c: nop    
  0x0260185d: nop    
  0x0260185e: mov    $0x0,%ebx          ;   {static_stub}
  0x02601863: jmp    0x02601863         ;   {runtime_call}
  0x02601868: nop    
  0x02601869: nop    
  0x0260186a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260186f: jmp    0x0260186f         ;   {runtime_call}
  0x02601874: nop    
  0x02601875: nop    
  0x02601876: mov    $0x0,%ebx          ;   {static_stub}
  0x0260187b: jmp    0x0260187b         ;   {runtime_call}
  0x02601880: nop    
  0x02601881: nop    
  0x02601882: mov    $0x0,%ebx          ;   {static_stub}
  0x02601887: jmp    0x02601887         ;   {runtime_call}
  0x0260188c: nop    
  0x0260188d: nop    
  0x0260188e: mov    $0x0,%ebx          ;   {static_stub}
  0x02601893: jmp    0x02601893         ;   {runtime_call}
  0x02601898: nop    
  0x02601899: nop    
  0x0260189a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260189f: jmp    0x0260189f         ;   {runtime_call}
  0x026018a4: nop    
  0x026018a5: nop    
  0x026018a6: mov    $0x0,%ebx          ;   {static_stub}
  0x026018ab: jmp    0x026018ab         ;   {runtime_call}
  0x026018b0: nop    
  0x026018b1: nop    
  0x026018b2: mov    $0x0,%ebx          ;   {static_stub}
  0x026018b7: jmp    0x026018b7         ;   {runtime_call}
  0x026018bc: nop    
  0x026018bd: nop    
  0x026018be: mov    $0x0,%ebx          ;   {static_stub}
  0x026018c3: jmp    0x026018c3         ;   {runtime_call}
  0x026018c8: nop    
  0x026018c9: nop    
  0x026018ca: mov    $0x0,%ebx          ;   {static_stub}
  0x026018cf: jmp    0x026018cf         ;   {runtime_call}
  0x026018d4: nop    
  0x026018d5: nop    
  0x026018d6: mov    $0x0,%ebx          ;   {static_stub}
  0x026018db: jmp    0x026018db         ;   {runtime_call}
  0x026018e0: nop    
  0x026018e1: nop    
  0x026018e2: mov    $0x0,%ebx          ;   {static_stub}
  0x026018e7: jmp    0x026018e7         ;   {runtime_call}
  0x026018ec: nop    
  0x026018ed: nop    
  0x026018ee: mov    $0x0,%ebx          ;   {static_stub}
  0x026018f3: jmp    0x026018f3         ;   {runtime_call}
[Exception Handler]
  0x026018f8: call   0x025fb1c0         ;   {runtime_call}
  0x026018fd: push   $0x6dab698c        ;   {external_word}
  0x02601902: call   0x02601907
  0x02601907: pusha  
  0x02601908: call   0x6d8b2a00         ;   {runtime_call}
  0x0260190d: hlt    
[Deopt Handler Code]
  0x0260190e: push   $0x260190e         ;   {section_word}
  0x02601913: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02602708:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = char
  # parm1:    [sp+0x50]   = char  (sp of caller)
  0x02602820: nop    
  0x02602821: nop    
  0x02602822: nop    
  0x02602823: nop    
  0x02602824: nop    
  0x02602825: nop    
  0x02602826: nop    
  0x02602827: cmp    0x4(%ecx),%eax
  0x0260282a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02602830: mov    %eax,0xffffd000(%esp)
  0x02602837: push   %ebp
  0x02602838: sub    $0x48,%esp         ;*iload_1
                                        ; - java.lang.String::replace@0 (line 2036)
  0x0260283b: mov    0x50(%esp),%esi
  0x0260283f: cmp    %esi,%edx
  0x02602841: je     0x02602a11         ;*if_icmpeq
                                        ; - java.lang.String::replace@2 (line 2036)
  0x02602847: mov    0x10(%ecx),%edi    ;*getfield count
                                        ; - java.lang.String::replace@6 (line 2037)
  0x0260284a: mov    %edi,0x34(%esp)
  0x0260284e: mov    0x8(%ecx),%eax     ;*getfield value
                                        ; - java.lang.String::replace@14 (line 2039)
  0x02602851: mov    0xc(%ecx),%ebx     ;*getfield offset
                                        ; - java.lang.String::replace@20 (line 2040)
  0x02602854: mov    %ebx,0x24(%esp)
  0x02602858: mov    %ecx,0x20(%esp)
  0x0260285c: mov    $0xffffffff,%ecx
  0x02602861: jmp    0x02602888         ;*istore
                                        ; - java.lang.String::replace@23 (line 2040)
  0x02602866: xchg   %ax,%ax
  0x02602868: mov    %ecx,%esi
  0x0260286a: add    %ebx,%esi
  0x0260286c: cmp    0x8(%eax),%esi     ; implicit exception: dispatches to 0x02602a1e
  0x0260286f: jae    0x02602a28
  0x02602875: movzwl 0xc(%eax,%esi,2),%esi  ; OopMap{eax=Oop [32]=Oop off=90}
                                        ;*if_icmpne
                                        ; - java.lang.String::replace@43 (line 2043)
  0x0260287a: test   %eax,0x200100      ;   {poll}
  0x02602880: cmp    %edx,%esi
  0x02602882: je     0x0260288d         ;*if_icmpne
                                        ; - java.lang.String::replace@43 (line 2043)
  0x02602888: inc    %ecx
  0x02602889: cmp    %edi,%ecx
  0x0260288b: jl     0x02602868         ;*if_icmpge
                                        ; - java.lang.String::replace@31 (line 2042)
  0x0260288d: cmp    %edi,%ecx
  0x0260288f: jl     0x0260289e
  0x02602895: mov    0x20(%esp),%ecx
  0x02602899: jmp    0x02602a11         ;*if_icmpge
                                        ; - java.lang.String::replace@52 (line 2047)
  0x0260289e: mov    %ecx,0x2c(%esp)
  0x026028a2: mov    %eax,0x30(%esp)
  0x026028a6: mov    %edx,0x28(%esp)
  0x026028aa: mov    %edi,%ebx
  0x026028ac: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x026028b1: mov    %ebx,%edi
  0x026028b3: cmp    $0xffffff,%ebx
  0x026028b9: ja     0x02602a30
  0x026028bf: mov    $0x13,%esi
  0x026028c4: lea    (%esi,%ebx,2),%esi
  0x026028c7: and    $0xfffffff8,%esi
  0x026028ca: mov    %fs:0x0,%ecx
  0x026028d2: mov    0xfffffff4(%ecx),%ecx
  0x026028d5: mov    0x34(%ecx),%eax
  0x026028d8: lea    (%eax,%esi,1),%esi
  0x026028db: cmp    0x3c(%ecx),%esi
  0x026028de: ja     0x02602a30
  0x026028e4: mov    %esi,0x34(%ecx)
  0x026028e7: sub    %eax,%esi
  0x026028e9: movl   $0x1,(%eax)
  0x026028ef: mov    %edx,0x4(%eax)
  0x026028f2: mov    %ebx,0x8(%eax)
  0x026028f5: sub    $0xc,%esi
  0x026028f8: je     0x0260291e
  0x026028fe: xor    %ebx,%ebx
  0x02602900: shr    $0x3,%esi
  0x02602903: jae    0x02602913
  0x02602909: mov    %ebx,0xc(%eax,%esi,8)
  0x0260290d: je     0x0260291e
  0x02602913: mov    %ebx,0x8(%eax,%esi,8)
  0x02602917: mov    %ebx,0x4(%eax,%esi,8)
  0x0260291b: dec    %esi
  0x0260291c: jne    0x02602913
  0x0260291e: mov    %eax,%ebx          ;*newarray
                                        ; - java.lang.String::replace@56 (line 2048)
  0x02602920: mov    %ebx,0x38(%esp)
  0x02602924: mov    $0x0,%edx
  0x02602929: mov    0x2c(%esp),%ecx
  0x0260292d: mov    0x24(%esp),%esi
  0x02602931: mov    0x30(%esp),%eax
  0x02602935: jmp    0x02602963         ;*istore
                                        ; - java.lang.String::replace@61 (line 2049)
  0x0260293a: xchg   %ax,%ax
  0x0260293c: mov    %edx,%edi
  0x0260293e: add    %esi,%edi
  0x02602940: cmp    0x8(%eax),%edi     ; implicit exception: dispatches to 0x02602a3a
  0x02602943: jae    0x02602a44
  0x02602949: movzwl 0xc(%eax,%edi,2),%edi  ;*caload
                                        ; - java.lang.String::replace@81 (line 2050)
  0x0260294e: cmp    0x8(%ebx),%edx
  0x02602951: jae    0x02602a4c
  0x02602957: mov    %di,0xc(%ebx,%edx,2)  ;*castore
                                        ; - java.lang.String::replace@82 (line 2050)
  0x0260295c: inc    %edx               ; OopMap{ebx=Oop [56]=Oop eax=Oop off=317}
                                        ;*goto
                                        ; - java.lang.String::replace@86 (line 2049)
  0x0260295d: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::replace@86 (line 2049)
                                        ;   {poll}
  0x02602963: cmp    %ecx,%edx
  0x02602965: jl     0x0260293c
  0x02602967: mov    0x34(%esp),%edi
  0x0260296b: mov    0x50(%esp),%ebx
  0x0260296f: mov    0x28(%esp),%edx
  0x02602973: jmp    0x026029b0         ;*if_icmpge
                                        ; - java.lang.String::replace@67 (line 2049)
  0x02602978: mov    %ecx,%edi
  0x0260297a: add    %esi,%edi
  0x0260297c: cmp    0x8(%eax),%edi     ; implicit exception: dispatches to 0x02602a54
  0x0260297f: jae    0x02602a5e
  0x02602985: movzwl 0xc(%eax,%edi,2),%edi  ;*caload
                                        ; - java.lang.String::replace@102 (line 2053)
  0x0260298a: cmp    %edx,%edi
  0x0260298c: cmove  %ebx,%edi
  0x0260298f: mov    0x38(%esp),%esi
  0x02602993: cmp    0x8(%esi),%ecx
  0x02602996: jae    0x02602a66
  0x0260299c: mov    %di,0xc(%esi,%ecx,2)  ;*castore
                                        ; - java.lang.String::replace@121 (line 2054)
  0x026029a1: inc    %ecx               ; OopMap{eax=Oop esi=Oop [56]=Oop off=386}
                                        ;*goto
                                        ; - java.lang.String::replace@125 (line 2056)
  0x026029a2: test   %eax,0x200100      ;*goto
                                        ; - java.lang.String::replace@125 (line 2056)
                                        ;   {poll}
  0x026029a8: mov    0x24(%esp),%esi
  0x026029ac: mov    0x34(%esp),%edi
  0x026029b0: cmp    %edi,%ecx
  0x026029b2: jl     0x02602978         ;*if_icmpge
                                        ; - java.lang.String::replace@92 (line 2052)
  0x026029b4: mov    0x38(%esp),%ebx
  0x026029b8: mov    $0x1459d4b0,%edx   ;   {oop('java/lang/String')}
  0x026029bd: mov    %fs:0x0,%ecx
  0x026029c5: mov    0xfffffff4(%ecx),%ecx
  0x026029c8: mov    0x34(%ecx),%eax
  0x026029cb: lea    0x18(%eax),%edi
  0x026029ce: cmp    0x3c(%ecx),%edi
  0x026029d1: ja     0x02602a6e
  0x026029d7: mov    %edi,0x34(%ecx)
  0x026029da: mov    0x68(%edx),%ecx
  0x026029dd: mov    %ecx,(%eax)
  0x026029df: mov    %edx,0x4(%eax)
  0x026029e2: xor    %ecx,%ecx
  0x026029e4: mov    %ecx,0x8(%eax)
  0x026029e7: mov    %ecx,0xc(%eax)
  0x026029ea: mov    %ecx,0x10(%eax)
  0x026029ed: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.String::replace@128 (line 2057)
  0x026029f0: mov    %ebx,0x8(%eax)
  0x026029f3: mov    %eax,%esi
  0x026029f5: shr    $0x9,%esi
  0x026029f8: movb   $0x0,0x1856d380(%esi)  ;*putfield value
                                        ; - java.lang.String::<init>@6 (line 637)
                                        ; - java.lang.String::replace@136 (line 2057)
  0x026029ff: mov    0x34(%esp),%edi
  0x02602a03: mov    %edi,0x10(%eax)    ;*putfield count
                                        ; - java.lang.String::<init>@16 (line 639)
                                        ; - java.lang.String::replace@136 (line 2057)
  0x02602a06: add    $0x48,%esp
  0x02602a09: pop    %ebp
  0x02602a0a: test   %eax,0x200100      ;   {poll_return}
  0x02602a10: ret                       ;*areturn
                                        ; - java.lang.String::replace@139 (line 2057)
  0x02602a11: mov    %ecx,%eax
  0x02602a13: add    $0x48,%esp
  0x02602a16: pop    %ebp
  0x02602a17: test   %eax,0x200100      ;   {poll_return}
  0x02602a1d: ret    
  0x02602a1e: call   0x025fa0d0         ; OopMap{eax=Oop [32]=Oop off=515}
                                        ;*caload
                                        ; - java.lang.String::replace@41 (line 2043)
                                        ;   {runtime_call}
  0x02602a23: call   0x025fa0d0         ; OopMap{eax=Oop [32]=Oop off=520}
                                        ;*caload
                                        ; - java.lang.String::replace@41 (line 2043)
                                        ;   {runtime_call}
  0x02602a28: mov    %esi,(%esp)
  0x02602a2b: call   0x025f9dd0         ; OopMap{eax=Oop [32]=Oop off=528}
                                        ;*caload
                                        ; - java.lang.String::replace@41 (line 2043)
                                        ;   {runtime_call}
  0x02602a30: call   0x025faa40         ; OopMap{[48]=Oop off=533}
                                        ;*newarray
                                        ; - java.lang.String::replace@56 (line 2048)
                                        ;   {runtime_call}
  0x02602a35: jmp    0x0260291e
  0x02602a3a: call   0x025fa0d0         ; OopMap{ebx=Oop [56]=Oop eax=Oop off=543}
                                        ;*caload
                                        ; - java.lang.String::replace@81 (line 2050)
                                        ;   {runtime_call}
  0x02602a3f: call   0x025fa0d0         ; OopMap{ebx=Oop [56]=Oop eax=Oop off=548}
                                        ;*caload
                                        ; - java.lang.String::replace@81 (line 2050)
                                        ;   {runtime_call}
  0x02602a44: mov    %edi,(%esp)
  0x02602a47: call   0x025f9dd0         ; OopMap{ebx=Oop [56]=Oop eax=Oop off=556}
                                        ;*caload
                                        ; - java.lang.String::replace@81 (line 2050)
                                        ;   {runtime_call}
  0x02602a4c: mov    %edx,(%esp)
  0x02602a4f: call   0x025f9dd0         ; OopMap{ebx=Oop [56]=Oop eax=Oop off=564}
                                        ;*castore
                                        ; - java.lang.String::replace@82 (line 2050)
                                        ;   {runtime_call}
  0x02602a54: call   0x025fa0d0         ; OopMap{eax=Oop [56]=Oop off=569}
                                        ;*caload
                                        ; - java.lang.String::replace@102 (line 2053)
                                        ;   {runtime_call}
  0x02602a59: call   0x025fa0d0         ; OopMap{eax=Oop [56]=Oop off=574}
                                        ;*caload
                                        ; - java.lang.String::replace@102 (line 2053)
                                        ;   {runtime_call}
  0x02602a5e: mov    %edi,(%esp)
  0x02602a61: call   0x025f9dd0         ; OopMap{eax=Oop [56]=Oop off=582}
                                        ;*caload
                                        ; - java.lang.String::replace@102 (line 2053)
                                        ;   {runtime_call}
  0x02602a66: mov    %ecx,(%esp)
  0x02602a69: call   0x025f9dd0         ; OopMap{eax=Oop esi=Oop [56]=Oop off=590}
                                        ;*castore
                                        ; - java.lang.String::replace@121 (line 2054)
                                        ;   {runtime_call}
  0x02602a6e: mov    %edx,%edx
  0x02602a70: call   0x025fa480         ; OopMap{ebx=Oop [56]=Oop off=597}
                                        ;*new  ; - java.lang.String::replace@128 (line 2057)
                                        ;   {runtime_call}
  0x02602a75: jmp    0x026029f0
  0x02602a7a: nop    
  0x02602a7b: nop    
  0x02602a7c: mov    %fs:0x0,%esi
  0x02602a84: mov    0xfffffff4(%esi),%esi
  0x02602a87: mov    0x170(%esi),%eax
  0x02602a8d: movl   $0x0,0x170(%esi)
  0x02602a97: movl   $0x0,0x174(%esi)
  0x02602aa1: add    $0x48,%esp
  0x02602aa4: pop    %ebp
  0x02602aa5: jmp    0x025f9c00         ;   {runtime_call}
  0x02602aaa: hlt    
  0x02602aab: hlt    
  0x02602aac: hlt    
  0x02602aad: hlt    
  0x02602aae: hlt    
  0x02602aaf: hlt    
[Exception Handler]
[Stub Code]
  0x02602ab0: call   0x025fb1c0         ;   {no_reloc}
  0x02602ab5: push   $0x6dab698c        ;   {external_word}
  0x02602aba: call   0x02602abf
  0x02602abf: pusha  
  0x02602ac0: call   0x6d8b2a00         ;   {runtime_call}
  0x02602ac5: hlt    
[Deopt Handler Code]
  0x02602ac6: push   $0x2602ac6         ;   {section_word}
  0x02602acb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02602f08:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    ecx       = 'java/lang/Object'
  # parm1:    edx       = int
  # parm2:    [sp+0x40]   = 'java/lang/Object'  (sp of caller)
  # parm3:    [sp+0x44]   = int
  # parm4:    [sp+0x48]   = int
  0x02603020: cmp    0x4(%ecx),%eax
  0x02603023: je     0x02603030
  0x02603029: jmp    0x025bcd40         ;   {runtime_call}
  0x0260302e: xchg   %ax,%ax
[Verified Entry Point]
  0x02603030: mov    %eax,0xffffd000(%esp)
  0x02603037: push   %ebp
  0x02603038: mov    %esp,%ebp
  0x0260303a: sub    $0x38,%esp
  0x0260303d: mov    %fs:0x0,%edi
  0x02603045: mov    0xfffffff4(%edi),%edi
  0x02603048: mov    %ecx,0x1c(%esp)
  0x0260304c: xor    %eax,%eax
  0x0260304e: cmp    $0x0,%ecx
  0x02603051: je     0x0260305b
  0x02603057: lea    0x1c(%esp),%eax
  0x0260305b: mov    %eax,0x8(%esp)
  0x0260305f: mov    %edx,0xc(%esp)
  0x02603063: xor    %eax,%eax
  0x02603065: cmpl   $0x0,0x8(%ebp)
  0x0260306c: je     0x02603075
  0x02603072: lea    0x8(%ebp),%eax
  0x02603075: mov    %eax,0x10(%esp)
  0x02603079: mov    0xc(%ebp),%eax
  0x0260307c: mov    %eax,0x14(%esp)
  0x02603080: mov    0x10(%ebp),%eax
  0x02603083: mov    %eax,0x18(%esp)
  0x02603087: mov    $0x145b29c0,%esi   ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x0260308c: mov    %esi,0x24(%esp)
  0x02603090: lea    0x24(%esp),%esi
  0x02603094: mov    %esi,0x4(%esp)     ; OopMap{[28]=Oop [64]=Oop [36]=Oop off=120}
  0x02603098: movl   $0x2603098,0x10c(%edi)  ;   {section_word}
  0x026030a2: mov    %esp,0x108(%edi)
  0x026030a8: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x026030af: je     0x026030c4
  0x026030b5: mov    $0x145b17e0,%eax   ;   {oop({method} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x026030ba: push   %eax
  0x026030bb: push   %edi
  0x026030bc: call   0x6da4d960         ;   {runtime_call}
  0x026030c1: add    $0x8,%esp
  0x026030c4: lea    0x118(%edi),%edx
  0x026030ca: mov    %edx,(%esp)
  0x026030cd: movl   $0x4,0x150(%edi)
  0x026030d7: call   0x6d3db28c         ;   {runtime_call}
  0x026030dc: movl   $0x5,0x150(%edi)
  0x026030e6: mov    %edi,%ecx
  0x026030e8: shr    $0x3,%ecx
  0x026030eb: and    $0xffc,%ecx
  0x026030f1: mov    %ecx,0x210000(,%ecx,1)  ;   {external_word}
  0x026030f8: cmpl   $0x0,0x6db15300    ;   {external_word}
  0x02603102: jne    0x02603115
  0x02603108: cmpl   $0x0,0x18(%edi)
  0x0260310f: je     0x0260311e
  0x02603115: push   %edi
  0x02603116: call   0x6da889b0         ;   {runtime_call}
  0x0260311b: add    $0x4,%esp
  0x0260311e: movl   $0x8,0x150(%edi)
  0x02603128: cmpl   $0x1,0x16c(%edi)
  0x02603132: je     0x02603186
  0x02603138: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x0260313f: je     0x02603154
  0x02603145: mov    $0x145b17e0,%eax   ;   {oop({method} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x0260314a: push   %eax
  0x0260314b: push   %edi
  0x0260314c: call   0x6da4d960         ;   {runtime_call}
  0x02603151: add    $0x8,%esp
  0x02603154: movl   $0x0,0x108(%edi)
  0x0260315e: movl   $0x0,0x10c(%edi)
  0x02603168: mov    0x20(%edi),%ecx
  0x0260316b: movl   $0x0,0x80(%ecx)
  0x02603175: cmpl   $0x0,0x4(%edi)
  0x0260317c: jne    0x0260318d
  0x02603182: mov    %ebp,%esp
  0x02603184: pop    %ebp
  0x02603185: ret    
  0x02603186: call   0x6da4d970         ;   {runtime_call}
  0x0260318b: jmp    0x02603138
  0x0260318d: emms   
  0x0260318f: mov    %ebp,%esp
  0x02603191: pop    %ebp
  0x02603192: jmp    Stub::forward exception  ;   {runtime_call}
  0x02603197: .byte 0x0
Decoding compiled method 0x026031c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x20]  (sp of caller)
  0x026032c0: mov    %eax,0xffffd000(%esp)
  0x026032c7: push   %ebp
  0x026032c8: sub    $0x18,%esp
  0x026032cb: mov    $0x145b2858,%eax   ;   {oop('java/lang/System')}
  0x026032d0: mov    0x15c(%eax),%eax   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
  0x026032d6: add    $0x18,%esp
  0x026032d9: pop    %ebp
  0x026032da: test   %eax,0x200100      ;   {poll_return}
  0x026032e0: ret    
  0x026032e1: nop    
  0x026032e2: nop    
  0x026032e3: mov    %fs:0x0,%esi
  0x026032eb: mov    0xfffffff4(%esi),%esi
  0x026032ee: mov    0x170(%esi),%eax
  0x026032f4: movl   $0x0,0x170(%esi)
  0x026032fe: movl   $0x0,0x174(%esi)
  0x02603308: add    $0x18,%esp
  0x0260330b: pop    %ebp
  0x0260330c: jmp    0x025f9c00         ;   {runtime_call}
  0x02603311: hlt    
  0x02603312: hlt    
  0x02603313: hlt    
  0x02603314: hlt    
  0x02603315: hlt    
  0x02603316: hlt    
  0x02603317: hlt    
  0x02603318: hlt    
  0x02603319: hlt    
  0x0260331a: hlt    
  0x0260331b: hlt    
  0x0260331c: hlt    
  0x0260331d: hlt    
  0x0260331e: hlt    
  0x0260331f: hlt    
[Exception Handler]
[Stub Code]
  0x02603320: call   0x025fb1c0         ;   {no_reloc}
  0x02603325: push   $0x6dab698c        ;   {external_word}
  0x0260332a: call   0x0260332f
  0x0260332f: pusha  
  0x02603330: call   0x6d8b2a00         ;   {runtime_call}
  0x02603335: hlt    
[Deopt Handler Code]
  0x02603336: push   $0x2603336         ;   {section_word}
  0x0260333b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02603388:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = int
  # parm1:    [sp+0x30]   = int  (sp of caller)
  # parm2:    [sp+0x34]   = '[C'
  # parm3:    [sp+0x38]   = int
  0x026034c0: nop    
  0x026034c1: nop    
  0x026034c2: nop    
  0x026034c3: nop    
  0x026034c4: nop    
  0x026034c5: nop    
  0x026034c6: nop    
  0x026034c7: cmp    0x4(%ecx),%eax
  0x026034ca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x026034d0: mov    %eax,0xffffd000(%esp)
  0x026034d7: push   %ebp
  0x026034d8: sub    $0x28,%esp
  0x026034db: mov    %edx,%esi          ;*iload_1
                                        ; - java.lang.String::getChars@0 (line 845)
  0x026034dd: cmp    $0x0,%esi
  0x026034e0: jl     0x026035d1         ;*ifge
                                        ; - java.lang.String::getChars@1 (line 845)
  0x026034e6: mov    0x30(%esp),%edi
  0x026034ea: mov    0x10(%ecx),%edx    ;*getfield count
                                        ; - java.lang.String::getChars@15 (line 848)
  0x026034ed: cmp    %edx,%edi
  0x026034ef: jg     0x026035ad         ;*if_icmple
                                        ; - java.lang.String::getChars@18 (line 848)
  0x026034f5: cmp    %edi,%esi
  0x026034f7: jg     0x02603586         ;*if_icmple
                                        ; - java.lang.String::getChars@32 (line 851)
  0x026034fd: mov    0x38(%esp),%ebx
  0x02603501: mov    0x34(%esp),%eax
  0x02603505: mov    0x8(%ecx),%edx     ;*getfield value
                                        ; - java.lang.String::getChars@47 (line 854)
  0x02603508: mov    0xc(%ecx),%ecx     ;*getfield offset
                                        ; - java.lang.String::getChars@51 (line 854)
  0x0260350b: add    %esi,%ecx
  0x0260350d: sub    %esi,%edi
  0x0260350f: mov    %ecx,%esi
  0x02603511: mov    %edx,%ecx
  0x02603513: mov    %esi,%edx
  0x02603515: test   %ecx,%ecx
  0x02603517: je     0x026035f9
  0x0260351d: test   %eax,%eax
  0x0260351f: je     0x026035f9
  0x02603525: test   %edx,%edx
  0x02603527: jl     0x026035f9
  0x0260352d: test   %ebx,%ebx
  0x0260352f: jl     0x026035f9
  0x02603535: test   %edi,%edi
  0x02603537: jl     0x026035f9
  0x0260353d: lea    (%edx,%edi,1),%esi
  0x02603540: cmp    0x8(%ecx),%esi
  0x02603543: ja     0x026035f9
  0x02603549: lea    (%ebx,%edi,1),%esi
  0x0260354c: cmp    0x8(%eax),%esi
  0x0260354f: ja     0x026035f9
  0x02603555: mov    0x4(%ecx),%esi
  0x02603558: cmp    0x4(%eax),%esi
  0x0260355b: jne    0x026035f9
  0x02603561: shl    %edi
  0x02603563: lea    0xc(%ecx,%edx,2),%esi
  0x02603567: mov    %esi,(%esp)
  0x0260356a: lea    0xc(%eax,%ebx,2),%esi
  0x0260356e: mov    %esi,0x4(%esp)
  0x02603572: mov    %edi,0x8(%esp)
  0x02603576: call   0x6d8fadf0         ;*invokestatic arraycopy
                                        ; - java.lang.String::getChars@62 (line 854)
                                        ;   {runtime_call}
  0x0260357b: add    $0x28,%esp
  0x0260357e: pop    %ebp
  0x0260357f: test   %eax,0x200100      ;   {poll_return}
  0x02603585: ret                       ;*return
                                        ; - java.lang.String::getChars@65 (line 856)
  0x02603586: xchg   %ax,%ax
  0x02603588: jmp    0x02603639         ;   {no_reloc}
  0x0260358d: jmp    0x02603643         ;*new  ; - java.lang.String::getChars@35 (line 852)
  0x02603592: sub    %esi,%edi
  0x02603594: mov    %edi,%edx
  0x02603596: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::getChars@42 (line 852)
  0x02603598: mov    %eax,0x18(%esp)
  0x0260359c: nop    
  0x0260359d: nop    
  0x0260359e: nop    
  0x0260359f: call   0x025bcf40         ; OopMap{[24]=Oop off=228}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::getChars@42 (line 852)
                                        ;   {optimized virtual_call}
  0x026035a4: mov    0x18(%esp),%eax
  0x026035a8: jmp    0x026036f2         ;*athrow
                                        ; - java.lang.String::getChars@45 (line 852)
  0x026035ad: xchg   %ax,%ax
  0x026035b0: jmp    0x02603677         ;   {no_reloc}
  0x026035b5: jmp    0x02603681         ;*new  ; - java.lang.String::getChars@21 (line 849)
  0x026035ba: mov    %edi,%edx
  0x026035bc: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::getChars@26 (line 849)
  0x026035be: mov    %eax,0x1c(%esp)
  0x026035c2: nop    
  0x026035c3: call   0x025bcf40         ; OopMap{[28]=Oop off=264}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::getChars@26 (line 849)
                                        ;   {optimized virtual_call}
  0x026035c8: mov    0x1c(%esp),%eax
  0x026035cc: jmp    0x026036f2         ;*athrow
                                        ; - java.lang.String::getChars@29 (line 849)
  0x026035d1: nopl   0x0(%eax)
  0x026035d8: jmp    0x026036b5         ;   {no_reloc}
  0x026035dd: jmp    0x026036bf         ;*new  ; - java.lang.String::getChars@4 (line 846)
  0x026035e2: mov    %esi,%edx
  0x026035e4: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::getChars@9 (line 846)
  0x026035e6: mov    %eax,0x20(%esp)
  0x026035ea: nop    
  0x026035eb: call   0x025bcf40         ; OopMap{[32]=Oop off=304}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::getChars@9 (line 846)
                                        ;   {optimized virtual_call}
  0x026035f0: mov    0x20(%esp),%eax
  0x026035f4: jmp    0x026036f2
  0x026035f9: mov    %eax,(%esp)
  0x026035fc: mov    %ebx,0x4(%esp)
  0x02603600: mov    %edi,0x8(%esp)
  0x02603604: nop    
  0x02603605: nop    
  0x02603606: nop    
  0x02603607: call   0x025bd340         ; OopMap{off=332}
                                        ;*invokestatic arraycopy
                                        ; - java.lang.String::getChars@62 (line 854)
                                        ;   {static_call}
  0x0260360c: jmp    0x0260357b
  0x02603611: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02603616: push   %eax
  0x02603617: mov    %fs:0x0,%eax
  0x0260361f: mov    0xfffffff4(%eax),%eax
  0x02603622: cmp    0xe8(%edx),%eax
  0x02603628: pop    %eax
  0x02603629: jne    0x02603639
  0x0260362f: jmp    0x0260358d
  0x02603634: mov    $0x5232800,%eax
  0x02603639: call   0x025fbd40         ; OopMap{off=382}
                                        ;*new  ; - java.lang.String::getChars@35 (line 852)
                                        ;   {runtime_call}
  0x0260363e: jmp    0x02603588
  0x02603643: mov    %edx,%edx
  0x02603645: call   0x025fa300         ; OopMap{off=394}
                                        ;*new  ; - java.lang.String::getChars@35 (line 852)
                                        ;   {runtime_call}
  0x0260364a: jmp    0x02603592
  0x0260364f: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02603654: push   %eax
  0x02603655: mov    %fs:0x0,%eax
  0x0260365d: mov    0xfffffff4(%eax),%eax
  0x02603660: cmp    0xe8(%edx),%eax
  0x02603666: pop    %eax
  0x02603667: jne    0x02603677
  0x0260366d: jmp    0x026035b5
  0x02603672: mov    $0x5232800,%eax
  0x02603677: call   0x025fbd40         ; OopMap{off=444}
                                        ;*new  ; - java.lang.String::getChars@21 (line 849)
                                        ;   {runtime_call}
  0x0260367c: jmp    0x026035b0
  0x02603681: mov    %edx,%edx
  0x02603683: call   0x025fa300         ; OopMap{off=456}
                                        ;*new  ; - java.lang.String::getChars@21 (line 849)
                                        ;   {runtime_call}
  0x02603688: jmp    0x026035ba
  0x0260368d: mov    $0x0,%edx          ;   {oop(NULL)}
  0x02603692: push   %eax
  0x02603693: mov    %fs:0x0,%eax
  0x0260369b: mov    0xfffffff4(%eax),%eax
  0x0260369e: cmp    0xe8(%edx),%eax
  0x026036a4: pop    %eax
  0x026036a5: jne    0x026036b5
  0x026036ab: jmp    0x026035dd
  0x026036b0: mov    $0x5232800,%eax
  0x026036b5: call   0x025fbd40         ; OopMap{off=506}
                                        ;*new  ; - java.lang.String::getChars@4 (line 846)
                                        ;   {runtime_call}
  0x026036ba: jmp    0x026035d8
  0x026036bf: mov    %edx,%edx
  0x026036c1: call   0x025fa300         ; OopMap{off=518}
                                        ;*new  ; - java.lang.String::getChars@4 (line 846)
                                        ;   {runtime_call}
  0x026036c6: jmp    0x026035e2
  0x026036cb: nop    
  0x026036cc: nop    
  0x026036cd: mov    %fs:0x0,%esi
  0x026036d5: mov    0xfffffff4(%esi),%esi
  0x026036d8: mov    0x170(%esi),%eax
  0x026036de: movl   $0x0,0x170(%esi)
  0x026036e8: movl   $0x0,0x174(%esi)
  0x026036f2: add    $0x28,%esp
  0x026036f5: pop    %ebp
  0x026036f6: jmp    0x025f9c00         ;   {runtime_call}
  0x026036fb: hlt    
  0x026036fc: hlt    
  0x026036fd: hlt    
  0x026036fe: hlt    
  0x026036ff: hlt    
[Stub Code]
  0x02603700: nop                       ;   {no_reloc}
  0x02603701: nop    
  0x02603702: mov    $0x0,%ebx          ;   {static_stub}
  0x02603707: jmp    0x02603707         ;   {runtime_call}
  0x0260370c: nop    
  0x0260370d: nop    
  0x0260370e: mov    $0x0,%ebx          ;   {static_stub}
  0x02603713: jmp    0x02603713         ;   {runtime_call}
  0x02603718: nop    
  0x02603719: nop    
  0x0260371a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260371f: jmp    0x0260371f         ;   {runtime_call}
  0x02603724: nop    
  0x02603725: nop    
  0x02603726: mov    $0x0,%ebx          ;   {static_stub}
  0x0260372b: jmp    0x0260372b         ;   {runtime_call}
[Exception Handler]
  0x02603730: call   0x025fb1c0         ;   {runtime_call}
  0x02603735: push   $0x6dab698c        ;   {external_word}
  0x0260373a: call   0x0260373f
  0x0260373f: pusha  
  0x02603740: call   0x6d8b2a00         ;   {runtime_call}
  0x02603745: hlt    
[Deopt Handler Code]
  0x02603746: push   $0x2603746         ;   {section_word}
  0x0260374b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02603a08:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'stringSizeOfInt' '(I)I' in 'java/lang/AbstractStringBuilder'
  # parm0:    ecx       = int
  #           [sp+0x20]  (sp of caller)
  0x02603b00: mov    %eax,0xffffd000(%esp)
  0x02603b07: push   %ebp
  0x02603b08: sub    $0x18,%esp         ;*iconst_0
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@0 (line 608)
  0x02603b0b: mov    $0x0,%eax
  0x02603b10: jmp    0x02603b1f         ;*istore_1
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@1 (line 608)
  0x02603b15: xchg   %ax,%ax
  0x02603b18: inc    %eax               ; OopMap{off=25}
                                        ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
  0x02603b19: test   %eax,0x200100      ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
                                        ;   {poll}
  0x02603b1f: mov    $0x145e67d0,%esi   ;   {oop('java/lang/AbstractStringBuilder')}
  0x02603b24: mov    0x250(%esi),%esi   ;*getstatic sizeTable
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@3 (line 609)
  0x02603b2a: mov    $0xa,%edi
  0x02603b2f: cmp    %eax,%edi
  0x02603b31: jbe    0x02603b4b
  0x02603b37: mov    0xc(%esi,%eax,4),%esi  ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
  0x02603b3b: cmp    %esi,%ecx
  0x02603b3d: jg     0x02603b18         ;*if_icmpgt
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@8 (line 609)
  0x02603b3f: inc    %eax
  0x02603b40: add    $0x18,%esp
  0x02603b43: pop    %ebp
  0x02603b44: test   %eax,0x200100      ;   {poll_return}
  0x02603b4a: ret    
  0x02603b4b: mov    %eax,(%esp)
  0x02603b4e: call   0x025f9dd0         ; OopMap{esi=Oop off=83}
                                        ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
                                        ;   {runtime_call}
  0x02603b53: nop    
  0x02603b54: nop    
  0x02603b55: mov    %fs:0x0,%esi
  0x02603b5d: mov    0xfffffff4(%esi),%esi
  0x02603b60: mov    0x170(%esi),%eax
  0x02603b66: movl   $0x0,0x170(%esi)
  0x02603b70: movl   $0x0,0x174(%esi)
  0x02603b7a: add    $0x18,%esp
  0x02603b7d: pop    %ebp
  0x02603b7e: jmp    0x025f9c00         ;   {runtime_call}
  0x02603b83: hlt    
  0x02603b84: hlt    
  0x02603b85: hlt    
  0x02603b86: hlt    
  0x02603b87: hlt    
  0x02603b88: hlt    
  0x02603b89: hlt    
  0x02603b8a: hlt    
  0x02603b8b: hlt    
  0x02603b8c: hlt    
  0x02603b8d: hlt    
  0x02603b8e: hlt    
  0x02603b8f: hlt    
[Exception Handler]
[Stub Code]
  0x02603b90: call   0x025fb1c0         ;   {no_reloc}
  0x02603b95: push   $0x6dab698c        ;   {external_word}
  0x02603b9a: call   0x02603b9f
  0x02603b9f: pusha  
  0x02603ba0: call   0x6d8b2a00         ;   {runtime_call}
  0x02603ba5: hlt    
[Deopt Handler Code]
  0x02603ba6: push   $0x2603ba6         ;   {section_word}
  0x02603bab: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02603cc8:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'getChars' '(II[C)V' in 'java/lang/Integer'
  # parm0:    ecx       = int
  # parm1:    edx       = int
  # parm2:    [sp+0x30]   = '[C'  (sp of caller)
  0x02603de0: mov    %eax,0xffffd000(%esp)
  0x02603de7: push   %ebp
  0x02603de8: sub    $0x28,%esp         ;*iload_1
                                        ; - java.lang.Integer::getChars@0 (line 324)
  0x02603deb: cmp    $0x0,%ecx
  0x02603dee: jl     0x02603e08
  0x02603df4: mov    %edx,%esi
  0x02603df6: mov    $0x0,%edi
  0x02603dfb: mov    %edi,0x10(%esp)
  0x02603dff: mov    0x30(%esp),%ebx
  0x02603e03: jmp    0x02603ebd         ;*ifge
                                        ; - java.lang.Integer::getChars@7 (line 327)
  0x02603e08: neg    %ecx
  0x02603e0a: mov    %ecx,%eax
  0x02603e0c: mov    %edx,%esi
  0x02603e0e: mov    %eax,%ecx
  0x02603e10: mov    $0x2d,%edi
  0x02603e15: mov    %edi,0x10(%esp)
  0x02603e19: mov    0x30(%esp),%ebx
  0x02603e1d: jmp    0x02603ebd         ;*istore_0
                                        ; - java.lang.Integer::getChars@16 (line 329)
  0x02603e22: xchg   %ax,%ax
  0x02603e24: mov    %ecx,%eax
  0x02603e26: mov    $0x64,%edx
  0x02603e2b: mov    %edx,%edi
  0x02603e2d: cmp    $0x80000000,%eax
  0x02603e33: jne    0x02603e44
  0x02603e39: xor    %edx,%edx
  0x02603e3b: cmp    $0xffffffff,%edi
  0x02603e3e: je     0x02603e47
  0x02603e44: cltd   
  0x02603e45: idiv   %edi               ;*idiv
                                        ; - java.lang.Integer::getChars@26 (line 334)
                                        ; implicit exception: dispatches to 0x02603f4a
  0x02603e47: mov    %eax,%edi
  0x02603e49: shl    $0x6,%edi
  0x02603e4c: mov    %eax,%edx
  0x02603e4e: shl    $0x5,%edx
  0x02603e51: add    %edx,%edi
  0x02603e53: mov    %eax,%edx
  0x02603e55: shl    $0x2,%edx
  0x02603e58: add    %edx,%edi
  0x02603e5a: sub    %edi,%ecx
  0x02603e5c: mov    $0x145ff2b8,%edi   ;   {oop('java/lang/Integer')}
  0x02603e61: mov    0x184(%edi),%edx   ;*getstatic DigitOnes
                                        ; - java.lang.Integer::getChars@52 (line 338)
  0x02603e67: mov    %eax,0x14(%esp)
  0x02603e6b: mov    $0x64,%eax
  0x02603e70: dec    %esi
  0x02603e71: cmp    %ecx,%eax
  0x02603e73: jbe    0x02603f4f
  0x02603e79: movzwl 0xc(%edx,%ecx,2),%eax  ;*caload
                                        ; - java.lang.Integer::getChars@57 (line 338)
  0x02603e7e: cmp    0x8(%ebx),%esi     ; implicit exception: dispatches to 0x02603f57
  0x02603e81: jae    0x02603f61
  0x02603e87: mov    %ax,0xc(%ebx,%esi,2)  ;*castore
                                        ; - java.lang.Integer::getChars@58 (line 338)
  0x02603e8c: dec    %esi
  0x02603e8d: mov    0x180(%edi),%edi   ;*getstatic DigitTens
                                        ; - java.lang.Integer::getChars@65 (line 339)
  0x02603e93: mov    $0x64,%eax
  0x02603e98: cmp    %ecx,%eax
  0x02603e9a: jbe    0x02603f69
  0x02603ea0: movzwl 0xc(%edi,%ecx,2),%edi  ;*caload
                                        ; - java.lang.Integer::getChars@70 (line 339)
  0x02603ea5: cmp    0x8(%ebx),%esi
  0x02603ea8: jae    0x02603f71
  0x02603eae: mov    %di,0xc(%ebx,%esi,2)  ; OopMap{ebx=Oop [48]=Oop off=211}
                                        ;*goto
                                        ; - java.lang.Integer::getChars@72 (line 339)
  0x02603eb3: test   %eax,0x200100      ;   {poll}
  0x02603eb9: mov    0x14(%esp),%ecx    ;*goto
                                        ; - java.lang.Integer::getChars@72 (line 339)
  0x02603ebd: cmp    $0x10000,%ecx
  0x02603ec3: jl     0x02603ed2
  0x02603ec9: jmp    0x02603e24         ;*if_icmplt
                                        ; - java.lang.Integer::getChars@20 (line 333)
  0x02603ece: xchg   %ax,%ax
  0x02603ed0: mov    %eax,%ecx          ;*ifne
                                        ; - java.lang.Integer::getChars@110 (line 349)
  0x02603ed2: mov    $0xcccd,%edi
  0x02603ed7: mov    %ecx,%eax
  0x02603ed9: imul   %edi,%eax
  0x02603edc: shr    $0x13,%eax
  0x02603edf: mov    %eax,%edi
  0x02603ee1: shl    $0x3,%edi
  0x02603ee4: mov    %eax,%edx
  0x02603ee6: shl    %edx
  0x02603ee8: add    %edx,%edi
  0x02603eea: sub    %edi,%ecx
  0x02603eec: dec    %esi
  0x02603eed: mov    $0x145ff2b8,%edi   ;   {oop('java/lang/Integer')}
  0x02603ef2: mov    0x17c(%edi),%edi   ;*getstatic digits
                                        ; - java.lang.Integer::getChars@100 (line 347)
  0x02603ef8: mov    $0x24,%edx
  0x02603efd: cmp    %ecx,%edx
  0x02603eff: jbe    0x02603f79
  0x02603f05: movzwl 0xc(%edi,%ecx,2),%edi  ;*caload
                                        ; - java.lang.Integer::getChars@105 (line 347)
  0x02603f0a: cmp    0x8(%ebx),%esi     ; implicit exception: dispatches to 0x02603f81
  0x02603f0d: jae    0x02603f8b
  0x02603f13: mov    %di,0xc(%ebx,%esi,2)  ; OopMap{ebx=Oop [48]=Oop off=312}
                                        ;*ifne
                                        ; - java.lang.Integer::getChars@110 (line 349)
  0x02603f18: test   %eax,0x200100      ;   {poll}
  0x02603f1e: cmp    $0x0,%eax
  0x02603f21: jne    0x02603ed0         ;*ifne
                                        ; - java.lang.Integer::getChars@110 (line 349)
  0x02603f23: mov    0x10(%esp),%edi
  0x02603f27: cmp    $0x0,%edi
  0x02603f2a: je     0x02603f3f         ;*ifeq
                                        ; - java.lang.Integer::getChars@118 (line 351)
  0x02603f30: dec    %esi
  0x02603f31: cmp    0x8(%ebx),%esi
  0x02603f34: jae    0x02603f93
  0x02603f3a: mov    %di,0xc(%ebx,%esi,2)  ;*castore
                                        ; - java.lang.Integer::getChars@129 (line 352)
  0x02603f3f: add    $0x28,%esp
  0x02603f42: pop    %ebp
  0x02603f43: test   %eax,0x200100      ;   {poll_return}
  0x02603f49: ret    
  0x02603f4a: call   0x025f9fd0         ; OopMap{ebx=Oop [48]=Oop off=367}
                                        ;*idiv
                                        ; - java.lang.Integer::getChars@26 (line 334)
                                        ;   {runtime_call}
  0x02603f4f: mov    %ecx,(%esp)
  0x02603f52: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop edi=Oop edx=Oop off=375}
                                        ;*caload
                                        ; - java.lang.Integer::getChars@57 (line 338)
                                        ;   {runtime_call}
  0x02603f57: call   0x025fa0d0         ; OopMap{ebx=Oop [48]=Oop edi=Oop off=380}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@58 (line 338)
                                        ;   {runtime_call}
  0x02603f5c: call   0x025fa0d0         ; OopMap{ebx=Oop [48]=Oop edi=Oop off=385}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@58 (line 338)
                                        ;   {runtime_call}
  0x02603f61: mov    %esi,(%esp)
  0x02603f64: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop edi=Oop off=393}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@58 (line 338)
                                        ;   {runtime_call}
  0x02603f69: mov    %ecx,(%esp)
  0x02603f6c: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop edi=Oop off=401}
                                        ;*caload
                                        ; - java.lang.Integer::getChars@70 (line 339)
                                        ;   {runtime_call}
  0x02603f71: mov    %esi,(%esp)
  0x02603f74: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop off=409}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@71 (line 339)
                                        ;   {runtime_call}
  0x02603f79: mov    %ecx,(%esp)
  0x02603f7c: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop edi=Oop off=417}
                                        ;*caload
                                        ; - java.lang.Integer::getChars@105 (line 347)
                                        ;   {runtime_call}
  0x02603f81: call   0x025fa0d0         ; OopMap{ebx=Oop [48]=Oop off=422}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@106 (line 347)
                                        ;   {runtime_call}
  0x02603f86: call   0x025fa0d0         ; OopMap{ebx=Oop [48]=Oop off=427}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@106 (line 347)
                                        ;   {runtime_call}
  0x02603f8b: mov    %esi,(%esp)
  0x02603f8e: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop off=435}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@106 (line 347)
                                        ;   {runtime_call}
  0x02603f93: mov    %esi,(%esp)
  0x02603f96: call   0x025f9dd0         ; OopMap{ebx=Oop [48]=Oop off=443}
                                        ;*castore
                                        ; - java.lang.Integer::getChars@129 (line 352)
                                        ;   {runtime_call}
  0x02603f9b: nop    
  0x02603f9c: nop    
  0x02603f9d: mov    %fs:0x0,%esi
  0x02603fa5: mov    0xfffffff4(%esi),%esi
  0x02603fa8: mov    0x170(%esi),%eax
  0x02603fae: movl   $0x0,0x170(%esi)
  0x02603fb8: movl   $0x0,0x174(%esi)
  0x02603fc2: add    $0x28,%esp
  0x02603fc5: pop    %ebp
  0x02603fc6: jmp    0x025f9c00         ;   {runtime_call}
  0x02603fcb: hlt    
  0x02603fcc: hlt    
  0x02603fcd: hlt    
  0x02603fce: hlt    
  0x02603fcf: hlt    
[Exception Handler]
[Stub Code]
  0x02603fd0: call   0x025fb1c0         ;   {no_reloc}
  0x02603fd5: push   $0x6dab698c        ;   {external_word}
  0x02603fda: call   0x02603fdf
  0x02603fdf: pusha  
  0x02603fe0: call   0x6d8b2a00         ;   {runtime_call}
  0x02603fe5: hlt    
[Deopt Handler Code]
  0x02603fe6: push   $0x2603fe6         ;   {section_word}
  0x02603feb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02604348:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    ecx       = int
  # parm1:    edx       = int
  #           [sp+0x20]  (sp of caller)
  0x02604440: mov    %eax,0xffffd000(%esp)
  0x02604447: push   %ebp
  0x02604448: sub    $0x18,%esp         ;*iload_0
                                        ; - java.lang.Math::min@0 (line 863)
  0x0260444b: cmp    %edx,%ecx
  0x0260444d: cmovle %ecx,%edx
  0x02604450: mov    %edx,%eax
  0x02604452: add    $0x18,%esp
  0x02604455: pop    %ebp
  0x02604456: test   %eax,0x200100      ;   {poll_return}
  0x0260445c: ret    
  0x0260445d: nop    
  0x0260445e: nop    
  0x0260445f: mov    %fs:0x0,%esi
  0x02604467: mov    0xfffffff4(%esi),%esi
  0x0260446a: mov    0x170(%esi),%eax
  0x02604470: movl   $0x0,0x170(%esi)
  0x0260447a: movl   $0x0,0x174(%esi)
  0x02604484: add    $0x18,%esp
  0x02604487: pop    %ebp
  0x02604488: jmp    0x025f9c00         ;   {runtime_call}
  0x0260448d: hlt    
  0x0260448e: hlt    
  0x0260448f: hlt    
[Exception Handler]
[Stub Code]
  0x02604490: call   0x025fb1c0         ;   {no_reloc}
  0x02604495: push   $0x6dab698c        ;   {external_word}
  0x0260449a: call   0x0260449f
  0x0260449f: pusha  
  0x026044a0: call   0x6d8b2a00         ;   {runtime_call}
  0x026044a5: hlt    
[Deopt Handler Code]
  0x026044a6: push   $0x26044a6         ;   {section_word}
  0x026044ab: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02604508:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     ecx       = 'java/lang/AbstractStringBuilder'
  # parm0:    edx       = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x02604620: nop    
  0x02604621: nop    
  0x02604622: nop    
  0x02604623: nop    
  0x02604624: nop    
  0x02604625: nop    
  0x02604626: nop    
  0x02604627: cmp    0x4(%ecx),%eax
  0x0260462a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02604630: mov    %eax,0xffffd000(%esp)
  0x02604637: push   %ebp
  0x02604638: sub    $0x38,%esp         ;*aload_1
                                        ; - java.lang.AbstractStringBuilder::append@0 (line 385)
  0x0260463b: mov    %ecx,0x18(%esp)
  0x0260463f: cmp    $0x0,%edx
  0x02604642: jne    0x0260464d         ;*ifnonnull
                                        ; - java.lang.AbstractStringBuilder::append@1 (line 385)
  0x02604648: mov    $0x14601e20,%edx   ;*astore_1
                                        ; - java.lang.AbstractStringBuilder::append@6 (line 385)
                                        ;   {oop("null")}
  0x0260464d: mov    0x10(%edx),%esi    ;*getfield count
                                        ; - java.lang.String::length@1 (line 651)
                                        ; - java.lang.AbstractStringBuilder::append@8 (line 386)
                                        ; implicit exception: dispatches to 0x026046dd
  0x02604650: cmp    $0x0,%esi
  0x02604653: je     0x026046d0         ;*ifne
                                        ; - java.lang.AbstractStringBuilder::append@13 (line 387)
  0x02604659: mov    0x8(%ecx),%edi     ;*getfield count
                                        ; - java.lang.AbstractStringBuilder::append@19 (line 388)
  0x0260465c: add    %esi,%edi
  0x0260465e: mov    %edi,0x24(%esp)
  0x02604662: mov    0xc(%ecx),%ebx     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@27 (line 389)
  0x02604665: mov    0x8(%ebx),%ebx     ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 389)
                                        ; implicit exception: dispatches to 0x026046e2
  0x02604668: cmp    %ebx,%edi
  0x0260466a: jg     0x02604677
  0x02604670: mov    %edx,%edi
  0x02604672: jmp    0x02604698         ;*if_icmple
                                        ; - java.lang.AbstractStringBuilder::append@31 (line 389)
  0x02604677: mov    %esi,0x1c(%esp)
  0x0260467b: mov    %edx,0x20(%esp)
  0x0260467f: mov    %edi,%edx
  0x02604681: mov    %ecx,%eax
  0x02604683: mov    %eax,%ecx          ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@36 (line 390)
  0x02604685: nop    
  0x02604686: nop    
  0x02604687: call   0x025bcf40         ; OopMap{[24]=Oop [32]=Oop off=108}
                                        ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@36 (line 390)
                                        ;   {optimized virtual_call}
  0x0260468c: mov    0x1c(%esp),%esi
  0x02604690: mov    0x20(%esp),%edi
  0x02604694: mov    0x18(%esp),%ecx
  0x02604698: mov    0xc(%ecx),%eax     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@43 (line 391)
  0x0260469b: mov    0x8(%ecx),%edx     ;*getfield count
                                        ; - java.lang.AbstractStringBuilder::append@47 (line 391)
  0x0260469e: mov    %edx,%ebx
  0x026046a0: mov    $0x0,%edx
  0x026046a5: mov    %esi,(%esp)
  0x026046a8: mov    %eax,0x4(%esp)
  0x026046ac: mov    %ebx,0x8(%esp)
  0x026046b0: mov    %edi,%ecx          ;*invokevirtual getChars
                                        ; - java.lang.AbstractStringBuilder::append@50 (line 391)
  0x026046b2: nop    
  0x026046b3: call   0x025bcf40         ; OopMap{[24]=Oop off=152}
                                        ;*invokevirtual getChars
                                        ; - java.lang.AbstractStringBuilder::append@50 (line 391)
                                        ;   {optimized virtual_call}
  0x026046b8: mov    0x18(%esp),%ecx
  0x026046bc: mov    0x24(%esp),%edi
  0x026046c0: mov    %edi,0x8(%ecx)     ;*putfield count
                                        ; - java.lang.AbstractStringBuilder::append@55 (line 392)
  0x026046c3: mov    %ecx,%eax
  0x026046c5: add    $0x38,%esp
  0x026046c8: pop    %ebp
  0x026046c9: test   %eax,0x200100      ;   {poll_return}
  0x026046cf: ret                       ;*areturn
                                        ; - java.lang.AbstractStringBuilder::append@59 (line 393)
  0x026046d0: mov    %ecx,%eax
  0x026046d2: add    $0x38,%esp
  0x026046d5: pop    %ebp
  0x026046d6: test   %eax,0x200100      ;   {poll_return}
  0x026046dc: ret    
  0x026046dd: call   0x025fa0d0         ; OopMap{ecx=Oop [24]=Oop edx=Oop off=194}
                                        ;*invokevirtual length
                                        ; - java.lang.AbstractStringBuilder::append@8 (line 386)
                                        ;   {runtime_call}
  0x026046e2: call   0x025fa0d0         ; OopMap{ecx=Oop [24]=Oop edx=Oop off=199}
                                        ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 389)
                                        ;   {runtime_call}
  0x026046e7: nop    
  0x026046e8: nop    
  0x026046e9: mov    %fs:0x0,%esi
  0x026046f1: mov    0xfffffff4(%esi),%esi
  0x026046f4: mov    0x170(%esi),%eax
  0x026046fa: movl   $0x0,0x170(%esi)
  0x02604704: movl   $0x0,0x174(%esi)
  0x0260470e: add    $0x38,%esp
  0x02604711: pop    %ebp
  0x02604712: jmp    0x025f9c00         ;   {runtime_call}
  0x02604717: hlt    
  0x02604718: hlt    
  0x02604719: hlt    
  0x0260471a: hlt    
  0x0260471b: hlt    
  0x0260471c: hlt    
  0x0260471d: hlt    
  0x0260471e: hlt    
  0x0260471f: hlt    
[Stub Code]
  0x02604720: nop                       ;   {no_reloc}
  0x02604721: nop    
  0x02604722: mov    $0x0,%ebx          ;   {static_stub}
  0x02604727: jmp    0x02604727         ;   {runtime_call}
  0x0260472c: nop    
  0x0260472d: nop    
  0x0260472e: mov    $0x0,%ebx          ;   {static_stub}
  0x02604733: jmp    0x02604733         ;   {runtime_call}
[Exception Handler]
  0x02604738: call   0x025fb1c0         ;   {runtime_call}
  0x0260473d: push   $0x6dab698c        ;   {external_word}
  0x02604742: call   0x02604747
  0x02604747: pusha  
  0x02604748: call   0x6d8b2a00         ;   {runtime_call}
  0x0260474d: hlt    
[Deopt Handler Code]
  0x0260474e: push   $0x260474e         ;   {section_word}
  0x02604753: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02604988:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'currentThread' '()Ljava/lang/Thread;' in 'java/lang/Thread'
  #           [sp+0x30]  (sp of caller)
  0x02604aa0: cmp    0x4(%ecx),%eax
  0x02604aa3: je     0x02604ab0
  0x02604aa9: jmp    0x025bcd40         ;   {runtime_call}
  0x02604aae: xchg   %ax,%ax
[Verified Entry Point]
  0x02604ab0: mov    %eax,0xffffd000(%esp)
  0x02604ab7: push   %ebp
  0x02604ab8: mov    %esp,%ebp
  0x02604aba: sub    $0x28,%esp
  0x02604abd: mov    %fs:0x0,%edi
  0x02604ac5: mov    0xfffffff4(%edi),%edi
  0x02604ac8: mov    $0x145c3878,%esi   ;   {oop(a 'java/lang/Class' = 'java/lang/Thread')}
  0x02604acd: mov    %esi,0x10(%esp)
  0x02604ad1: lea    0x10(%esp),%esi
  0x02604ad5: mov    %esi,0x4(%esp)     ; OopMap{[16]=Oop off=57}
  0x02604ad9: movl   $0x2604ad9,0x10c(%edi)  ;   {section_word}
  0x02604ae3: mov    %esp,0x108(%edi)
  0x02604ae9: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x02604af0: je     0x02604b05
  0x02604af6: mov    $0x145c0730,%eax   ;   {oop({method} 'currentThread' '()Ljava/lang/Thread;' in 'java/lang/Thread')}
  0x02604afb: push   %eax
  0x02604afc: push   %edi
  0x02604afd: call   0x6da4d960         ;   {runtime_call}
  0x02604b02: add    $0x8,%esp
  0x02604b05: lea    0x118(%edi),%edx
  0x02604b0b: mov    %edx,(%esp)
  0x02604b0e: movl   $0x4,0x150(%edi)
  0x02604b18: call   0x6d3db2c8         ;   {runtime_call}
  0x02604b1d: movl   $0x5,0x150(%edi)
  0x02604b27: mov    %edi,%ecx
  0x02604b29: shr    $0x3,%ecx
  0x02604b2c: and    $0xffc,%ecx
  0x02604b32: mov    %ecx,0x210000(,%ecx,1)  ;   {external_word}
  0x02604b39: cmpl   $0x0,0x6db15300    ;   {external_word}
  0x02604b43: jne    0x02604b56
  0x02604b49: cmpl   $0x0,0x18(%edi)
  0x02604b50: je     0x02604b65
  0x02604b56: mov    %eax,0xfffffffc(%ebp)
  0x02604b59: push   %edi
  0x02604b5a: call   0x6da889b0         ;   {runtime_call}
  0x02604b5f: add    $0x4,%esp
  0x02604b62: mov    0xfffffffc(%ebp),%eax
  0x02604b65: movl   $0x8,0x150(%edi)
  0x02604b6f: cmpl   $0x1,0x16c(%edi)
  0x02604b79: je     0x02604bde
  0x02604b7f: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x02604b86: je     0x02604ba1
  0x02604b8c: mov    %eax,0xfffffffc(%ebp)
  0x02604b8f: mov    $0x145c0730,%eax   ;   {oop({method} 'currentThread' '()Ljava/lang/Thread;' in 'java/lang/Thread')}
  0x02604b94: push   %eax
  0x02604b95: push   %edi
  0x02604b96: call   0x6da4d960         ;   {runtime_call}
  0x02604b9b: add    $0x8,%esp
  0x02604b9e: mov    0xfffffffc(%ebp),%eax
  0x02604ba1: movl   $0x0,0x108(%edi)
  0x02604bab: movl   $0x0,0x10c(%edi)
  0x02604bb5: cmp    $0x0,%eax
  0x02604bb8: je     0x02604bc0
  0x02604bbe: mov    (%eax),%eax
  0x02604bc0: mov    0x20(%edi),%ecx
  0x02604bc3: movl   $0x0,0x80(%ecx)
  0x02604bcd: cmpl   $0x0,0x4(%edi)
  0x02604bd4: jne    0x02604beb
  0x02604bda: mov    %ebp,%esp
  0x02604bdc: pop    %ebp
  0x02604bdd: ret    
  0x02604bde: mov    %eax,0xfffffffc(%ebp)
  0x02604be1: call   0x6da4d970         ;   {runtime_call}
  0x02604be6: mov    0xfffffffc(%ebp),%eax
  0x02604be9: jmp    0x02604b7f
  0x02604beb: emms   
  0x02604bed: mov    %ebp,%esp
  0x02604bef: pop    %ebp
  0x02604bf0: jmp    Stub::forward exception  ;   {runtime_call}
  0x02604bf5: .byte 0x81
  0x02604bf6: jg     0x02604bfc
Decoding compiled method 0x02604c08:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     ecx       = 'java/lang/StringBuilder'
  # parm0:    edx       = 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x02604d00: nop    
  0x02604d01: nop    
  0x02604d02: nop    
  0x02604d03: nop    
  0x02604d04: nop    
  0x02604d05: nop    
  0x02604d06: nop    
  0x02604d07: cmp    0x4(%ecx),%eax
  0x02604d0a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02604d10: mov    %eax,0xffffd000(%esp)
  0x02604d17: push   %ebp
  0x02604d18: sub    $0x18,%esp         ;*aload_0
                                        ; - java.lang.StringBuilder::append@0 (line 119)
  0x02604d1b: mov    %ecx,%esi
  0x02604d1d: mov    %esi,%ecx          ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
  0x02604d1f: mov    %esi,0x10(%esp)
  0x02604d23: call   0x025bcf40         ; OopMap{[16]=Oop off=40}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
                                        ;   {optimized virtual_call}
  0x02604d28: mov    0x10(%esp),%eax
  0x02604d2c: add    $0x18,%esp
  0x02604d2f: pop    %ebp
  0x02604d30: test   %eax,0x200100      ;   {poll_return}
  0x02604d36: ret    
  0x02604d37: nop    
  0x02604d38: nop    
  0x02604d39: mov    %fs:0x0,%esi
  0x02604d41: mov    0xfffffff4(%esi),%esi
  0x02604d44: mov    0x170(%esi),%eax
  0x02604d4a: movl   $0x0,0x170(%esi)
  0x02604d54: movl   $0x0,0x174(%esi)
  0x02604d5e: add    $0x18,%esp
  0x02604d61: pop    %ebp
  0x02604d62: jmp    0x025f9c00         ;   {runtime_call}
  0x02604d67: hlt    
  0x02604d68: hlt    
  0x02604d69: hlt    
  0x02604d6a: hlt    
  0x02604d6b: hlt    
  0x02604d6c: hlt    
  0x02604d6d: hlt    
  0x02604d6e: hlt    
  0x02604d6f: hlt    
[Stub Code]
  0x02604d70: nop                       ;   {no_reloc}
  0x02604d71: nop    
  0x02604d72: mov    $0x0,%ebx          ;   {static_stub}
  0x02604d77: jmp    0x02604d77         ;   {runtime_call}
[Exception Handler]
  0x02604d7c: call   0x025fb1c0         ;   {runtime_call}
  0x02604d81: push   $0x6dab698c        ;   {external_word}
  0x02604d86: call   0x02604d8b
  0x02604d8b: pusha  
  0x02604d8c: call   0x6d8b2a00         ;   {runtime_call}
  0x02604d91: hlt    
[Deopt Handler Code]
  0x02604d92: push   $0x2604d92         ;   {section_word}
  0x02604d97: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02604e48:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '([CII)V' in 'java/lang/String'
  # this:     ecx       = 'java/lang/String'
  # parm0:    edx       = '[C'
  # parm1:    [sp+0x40]   = int  (sp of caller)
  # parm2:    [sp+0x44]   = int
  0x02604f80: nop    
  0x02604f81: nop    
  0x02604f82: nop    
  0x02604f83: nop    
  0x02604f84: nop    
  0x02604f85: nop    
  0x02604f86: nop    
  0x02604f87: cmp    0x4(%ecx),%eax
  0x02604f8a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02604f90: mov    %eax,0xffffd000(%esp)
  0x02604f97: push   %ebp
  0x02604f98: sub    $0x38,%esp         ;*aload_0
                                        ; - java.lang.String::<init>@0 (line 202)
  0x02604f9b: mov    0x40(%esp),%esi
  0x02604f9f: cmp    $0x0,%esi
  0x02604fa2: jl     0x02605049         ;*ifge
                                        ; - java.lang.String::<init>@5 (line 203)
  0x02604fa8: mov    0x44(%esp),%edi
  0x02604fac: cmp    $0x0,%edi
  0x02604faf: jl     0x02605025         ;*ifge
                                        ; - java.lang.String::<init>@18 (line 206)
  0x02604fb5: mov    0x8(%edx),%ebx     ;*arraylength
                                        ; - java.lang.String::<init>@32 (line 210)
                                        ; implicit exception: dispatches to 0x02605071
  0x02604fb8: sub    %edi,%ebx
  0x02604fba: cmp    %ebx,%esi
  0x02604fbc: jg     0x02604ffc         ;*if_icmple
                                        ; - java.lang.String::<init>@35 (line 210)
  0x02604fc2: movl   $0x0,0xc(%ecx)     ;*putfield offset
                                        ; - java.lang.String::<init>@51 (line 213)
  0x02604fc9: mov    %edi,0x10(%ecx)    ;*putfield count
                                        ; - java.lang.String::<init>@56 (line 214)
  0x02604fcc: mov    %esi,%ebx
  0x02604fce: add    %edi,%ebx
  0x02604fd0: mov    %ecx,0x18(%esp)
  0x02604fd4: mov    %edx,%ecx
  0x02604fd6: mov    %esi,%edx
  0x02604fd8: mov    %ebx,(%esp)        ;*invokestatic copyOfRange
                                        ; - java.lang.String::<init>@65 (line 215)
  0x02604fdb: call   0x025bd340         ; OopMap{[24]=Oop off=96}
                                        ;*invokestatic copyOfRange
                                        ; - java.lang.String::<init>@65 (line 215)
                                        ;   {static_call}
  0x02604fe0: mov    0x18(%esp),%ecx
  0x02604fe4: mov    %eax,0x8(%ecx)
  0x02604fe7: shr    $0x9,%ecx
  0x02604fea: movb   $0x0,0x1856d380(%ecx)  ;*putfield value
                                        ; - java.lang.String::<init>@68 (line 215)
  0x02604ff1: add    $0x38,%esp
  0x02604ff4: pop    %ebp
  0x02604ff5: test   %eax,0x200100      ;   {poll_return}
  0x02604ffb: ret                       ;*return
                                        ; - java.lang.String::<init>@71 (line 216)
  0x02604ffc: nopl   0x0(%eax)
  0x02605000: jmp    0x0260509e         ;   {no_reloc}
  0x02605005: jmp    0x026050a8         ;*new  ; - java.lang.String::<init>@38 (line 211)
  0x0260500a: add    %edi,%esi
  0x0260500c: mov    %esi,%edx
  0x0260500e: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::<init>@45 (line 211)
  0x02605010: mov    %eax,0x1c(%esp)
  0x02605014: nop    
  0x02605015: nop    
  0x02605016: nop    
  0x02605017: call   0x025bcf40         ; OopMap{[28]=Oop off=156}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::<init>@45 (line 211)
                                        ;   {optimized virtual_call}
  0x0260501c: mov    0x1c(%esp),%eax
  0x02605020: jmp    0x02605157         ;*athrow
                                        ; - java.lang.String::<init>@48 (line 211)
  0x02605025: xchg   %ax,%ax
  0x02605028: jmp    0x026050dc         ;   {no_reloc}
  0x0260502d: jmp    0x026050e6         ;*new  ; - java.lang.String::<init>@21 (line 207)
  0x02605032: mov    %edi,%edx
  0x02605034: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::<init>@26 (line 207)
  0x02605036: mov    %eax,0x20(%esp)
  0x0260503a: nop    
  0x0260503b: call   0x025bcf40         ; OopMap{[32]=Oop off=192}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::<init>@26 (line 207)
                                        ;   {optimized virtual_call}
  0x02605040: mov    0x20(%esp),%eax
  0x02605044: jmp    0x02605157         ;*athrow
                                        ; - java.lang.String::<init>@29 (line 207)
  0x02605049: nopl   0x0(%eax)
  0x02605050: jmp    0x0260511a         ;   {no_reloc}
  0x02605055: jmp    0x02605124         ;*new  ; - java.lang.String::<init>@8 (line 204)
  0x0260505a: mov    %esi,%edx
  0x0260505c: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.String::<init>@13 (line 204)
  0x0260505e: mov    %eax,0x24(%esp)
  0x02605062: nop    
  0x02605063: call   0x025bcf40         ; OopMap{[36]=Oop off=232}
                                        ;*invokespecial <init>
                                        ; - java.lang.String::<init>@13 (line 204)
                                        ;   {optimized virtual_call}
  0x02605068: mov    0x24(%esp),%eax
  0x0260506c: jmp    0x02605157
  0x02605071: call   0x025fa0d0         ; OopMap{ecx=Oop edx=Oop off=246}
                                        ;*arraylength
                                        ; - java.lang.String::<init>@32 (line 210)
                                        ;   {runtime_call}
  0x02605076: mov    $0x0,%edx          ;   {oop(NULL)}
  0x0260507b: push   %eax
  0x0260507c: mov    %fs:0x0,%eax
  0x02605084: mov    0xfffffff4(%eax),%eax
  0x02605087: cmp    0xe8(%edx),%eax
  0x0260508d: pop    %eax
  0x0260508e: jne    0x0260509e
  0x02605094: jmp    0x02605005
  0x02605099: mov    $0x5232800,%eax
  0x0260509e: call   0x025fbd40         ; OopMap{off=291}
                                        ;*new  ; - java.lang.String::<init>@38 (line 211)
                                        ;   {runtime_call}
  0x026050a3: jmp    0x02605000
  0x026050a8: mov    %edx,%edx
  0x026050aa: call   0x025fa300         ; OopMap{off=303}
                                        ;*new  ; - java.lang.String::<init>@38 (line 211)
                                        ;   {runtime_call}
  0x026050af: jmp    0x0260500a
  0x026050b4: mov    $0x0,%edx          ;   {oop(NULL)}
  0x026050b9: push   %eax
  0x026050ba: mov    %fs:0x0,%eax
  0x026050c2: mov    0xfffffff4(%eax),%eax
  0x026050c5: cmp    0xe8(%edx),%eax
  0x026050cb: pop    %eax
  0x026050cc: jne    0x026050dc
  0x026050d2: jmp    0x0260502d
  0x026050d7: mov    $0x5232800,%eax
  0x026050dc: call   0x025fbd40         ; OopMap{off=353}
                                        ;*new  ; - java.lang.String::<init>@21 (line 207)
                                        ;   {runtime_call}
  0x026050e1: jmp    0x02605028
  0x026050e6: mov    %edx,%edx
  0x026050e8: call   0x025fa300         ; OopMap{off=365}
                                        ;*new  ; - java.lang.String::<init>@21 (line 207)
                                        ;   {runtime_call}
  0x026050ed: jmp    0x02605032
  0x026050f2: mov    $0x0,%edx          ;   {oop(NULL)}
  0x026050f7: push   %eax
  0x026050f8: mov    %fs:0x0,%eax
  0x02605100: mov    0xfffffff4(%eax),%eax
  0x02605103: cmp    0xe8(%edx),%eax
  0x02605109: pop    %eax
  0x0260510a: jne    0x0260511a
  0x02605110: jmp    0x02605055
  0x02605115: mov    $0x5232800,%eax
  0x0260511a: call   0x025fbd40         ; OopMap{off=415}
                                        ;*new  ; - java.lang.String::<init>@8 (line 204)
                                        ;   {runtime_call}
  0x0260511f: jmp    0x02605050
  0x02605124: mov    %edx,%edx
  0x02605126: call   0x025fa300         ; OopMap{off=427}
                                        ;*new  ; - java.lang.String::<init>@8 (line 204)
                                        ;   {runtime_call}
  0x0260512b: jmp    0x0260505a
  0x02605130: nop    
  0x02605131: nop    
  0x02605132: mov    %fs:0x0,%esi
  0x0260513a: mov    0xfffffff4(%esi),%esi
  0x0260513d: mov    0x170(%esi),%eax
  0x02605143: movl   $0x0,0x170(%esi)
  0x0260514d: movl   $0x0,0x174(%esi)
  0x02605157: add    $0x38,%esp
  0x0260515a: pop    %ebp
  0x0260515b: jmp    0x025f9c00         ;   {runtime_call}
[Stub Code]
  0x02605160: nop                       ;   {no_reloc}
  0x02605161: nop    
  0x02605162: mov    $0x0,%ebx          ;   {static_stub}
  0x02605167: jmp    0x02605167         ;   {runtime_call}
  0x0260516c: nop    
  0x0260516d: nop    
  0x0260516e: mov    $0x0,%ebx          ;   {static_stub}
  0x02605173: jmp    0x02605173         ;   {runtime_call}
  0x02605178: nop    
  0x02605179: nop    
  0x0260517a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260517f: jmp    0x0260517f         ;   {runtime_call}
  0x02605184: nop    
  0x02605185: nop    
  0x02605186: mov    $0x0,%ebx          ;   {static_stub}
  0x0260518b: jmp    0x0260518b         ;   {runtime_call}
[Exception Handler]
  0x02605190: call   0x025fb1c0         ;   {runtime_call}
  0x02605195: push   $0x6dab698c        ;   {external_word}
  0x0260519a: call   0x0260519f
  0x0260519f: pusha  
  0x026051a0: call   0x6d8b2a00         ;   {runtime_call}
  0x026051a5: hlt    
[Deopt Handler Code]
  0x026051a6: push   $0x26051a6         ;   {section_word}
  0x026051ab: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x026054c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'getStackAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController'
  #           [sp+0x30]  (sp of caller)
  0x026055e0: cmp    0x4(%ecx),%eax
  0x026055e3: je     0x026055f0
  0x026055e9: jmp    0x025bcd40         ;   {runtime_call}
  0x026055ee: xchg   %ax,%ax
[Verified Entry Point]
  0x026055f0: mov    %eax,0xffffd000(%esp)
  0x026055f7: push   %ebp
  0x026055f8: mov    %esp,%ebp
  0x026055fa: sub    $0x28,%esp
  0x026055fd: mov    %fs:0x0,%edi
  0x02605605: mov    0xfffffff4(%edi),%edi
  0x02605608: mov    $0x14615f50,%esi   ;   {oop(a 'java/lang/Class' = 'java/security/AccessController')}
  0x0260560d: mov    %esi,0x10(%esp)
  0x02605611: lea    0x10(%esp),%esi
  0x02605615: mov    %esi,0x4(%esp)     ; OopMap{[16]=Oop off=57}
  0x02605619: movl   $0x2605619,0x10c(%edi)  ;   {section_word}
  0x02605623: mov    %esp,0x108(%edi)
  0x02605629: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x02605630: je     0x02605645
  0x02605636: mov    $0x14615b38,%eax   ;   {oop({method} 'getStackAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController')}
  0x0260563b: push   %eax
  0x0260563c: push   %edi
  0x0260563d: call   0x6da4d960         ;   {runtime_call}
  0x02605642: add    $0x8,%esp
  0x02605645: lea    0x118(%edi),%edx
  0x0260564b: mov    %edx,(%esp)
  0x0260564e: movl   $0x4,0x150(%edi)
  0x02605658: call   0x6d3d1064         ;   {runtime_call}
  0x0260565d: movl   $0x5,0x150(%edi)
  0x02605667: mov    %edi,%ecx
  0x02605669: shr    $0x3,%ecx
  0x0260566c: and    $0xffc,%ecx
  0x02605672: mov    %ecx,0x210000(,%ecx,1)  ;   {external_word}
  0x02605679: cmpl   $0x0,0x6db15300    ;   {external_word}
  0x02605683: jne    0x02605696
  0x02605689: cmpl   $0x0,0x18(%edi)
  0x02605690: je     0x026056a5
  0x02605696: mov    %eax,0xfffffffc(%ebp)
  0x02605699: push   %edi
  0x0260569a: call   0x6da889b0         ;   {runtime_call}
  0x0260569f: add    $0x4,%esp
  0x026056a2: mov    0xfffffffc(%ebp),%eax
  0x026056a5: movl   $0x8,0x150(%edi)
  0x026056af: cmpl   $0x1,0x16c(%edi)
  0x026056b9: je     0x0260571e
  0x026056bf: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x026056c6: je     0x026056e1
  0x026056cc: mov    %eax,0xfffffffc(%ebp)
  0x026056cf: mov    $0x14615b38,%eax   ;   {oop({method} 'getStackAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController')}
  0x026056d4: push   %eax
  0x026056d5: push   %edi
  0x026056d6: call   0x6da4d960         ;   {runtime_call}
  0x026056db: add    $0x8,%esp
  0x026056de: mov    0xfffffffc(%ebp),%eax
  0x026056e1: movl   $0x0,0x108(%edi)
  0x026056eb: movl   $0x0,0x10c(%edi)
  0x026056f5: cmp    $0x0,%eax
  0x026056f8: je     0x02605700
  0x026056fe: mov    (%eax),%eax
  0x02605700: mov    0x20(%edi),%ecx
  0x02605703: movl   $0x0,0x80(%ecx)
  0x0260570d: cmpl   $0x0,0x4(%edi)
  0x02605714: jne    0x0260572b
  0x0260571a: mov    %ebp,%esp
  0x0260571c: pop    %ebp
  0x0260571d: ret    
  0x0260571e: mov    %eax,0xfffffffc(%ebp)
  0x02605721: call   0x6da4d970         ;   {runtime_call}
  0x02605726: mov    0xfffffffc(%ebp),%eax
  0x02605729: jmp    0x026056bf
  0x0260572b: emms   
  0x0260572d: mov    %ebp,%esp
  0x0260572f: pop    %ebp
  0x02605730: jmp    Stub::forward exception  ;   {runtime_call}
  0x02605735: .byte 0x81
  0x02605736: jg     0x0260573c
Decoding compiled method 0x02605748:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    ecx       = '[C'
  # parm1:    edx       = int
  # parm2:    [sp+0x60]   = int  (sp of caller)
  0x026058a0: mov    %eax,0xffffd000(%esp)
  0x026058a7: push   %ebp
  0x026058a8: sub    $0x58,%esp         ;*iload_2
                                        ; - java.util.Arrays::copyOfRange@0 (line 3206)
  0x026058ab: mov    %edx,0x34(%esp)
  0x026058af: mov    0x60(%esp),%ebx
  0x026058b3: mov    %ebx,%esi
  0x026058b5: sub    %edx,%esi
  0x026058b7: cmp    $0x0,%esi
  0x026058ba: jl     0x026059ca         ;*ifge
                                        ; - java.util.Arrays::copyOfRange@5 (line 3207)
  0x026058c0: mov    %ecx,0x30(%esp)
  0x026058c4: mov    %esi,%ebx
  0x026058c6: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x026058cb: mov    %esi,0x38(%esp)
  0x026058cf: mov    %ebx,%edi
  0x026058d1: cmp    $0xffffff,%ebx
  0x026058d7: ja     0x02605b79
  0x026058dd: mov    $0x13,%esi
  0x026058e2: lea    (%esi,%ebx,2),%esi
  0x026058e5: and    $0xfffffff8,%esi
  0x026058e8: mov    %fs:0x0,%ecx
  0x026058f0: mov    0xfffffff4(%ecx),%ecx
  0x026058f3: mov    0x34(%ecx),%eax
  0x026058f6: lea    (%eax,%esi,1),%esi
  0x026058f9: cmp    0x3c(%ecx),%esi
  0x026058fc: ja     0x02605b79
  0x02605902: mov    %esi,0x34(%ecx)
  0x02605905: sub    %eax,%esi
  0x02605907: movl   $0x1,(%eax)
  0x0260590d: mov    %edx,0x4(%eax)
  0x02605910: mov    %ebx,0x8(%eax)
  0x02605913: sub    $0xc,%esi
  0x02605916: je     0x0260593c
  0x0260591c: xor    %ebx,%ebx
  0x0260591e: shr    $0x3,%esi
  0x02605921: jae    0x02605931
  0x02605927: mov    %ebx,0xc(%eax,%esi,8)
  0x0260592b: je     0x0260593c
  0x02605931: mov    %ebx,0x8(%eax,%esi,8)
  0x02605935: mov    %ebx,0x4(%eax,%esi,8)
  0x02605939: dec    %esi
  0x0260593a: jne    0x02605931         ;*newarray
                                        ; - java.util.Arrays::copyOfRange@40 (line 3209)
  0x0260593c: mov    0x30(%esp),%ecx
  0x02605940: mov    0x8(%ecx),%edx     ;*arraylength
                                        ; - java.util.Arrays::copyOfRange@50 (line 3210)
                                        ; implicit exception: dispatches to 0x02605b83
  0x02605943: sub    0x34(%esp),%edx
  0x02605947: cmp    0x38(%esp),%edx
  0x0260594b: mov    0x38(%esp),%esi
  0x0260594f: cmovle %edx,%esi
  0x02605952: mov    0x34(%esp),%edx
  0x02605956: mov    %eax,%edi
  0x02605958: mov    %edi,%eax
  0x0260595a: mov    $0x0,%ebx
  0x0260595f: mov    %edi,0x3c(%esp)
  0x02605963: mov    %esi,%edi
  0x02605965: test   %ecx,%ecx
  0x02605967: je     0x02605b88
  0x0260596d: test   %edx,%edx
  0x0260596f: jl     0x02605b88
  0x02605975: test   %edi,%edi
  0x02605977: jl     0x02605b88
  0x0260597d: lea    (%edx,%edi,1),%esi
  0x02605980: cmp    0x8(%ecx),%esi
  0x02605983: ja     0x02605b88
  0x02605989: lea    (%ebx,%edi,1),%esi
  0x0260598c: cmp    0x8(%eax),%esi
  0x0260598f: ja     0x02605b88
  0x02605995: mov    0x4(%ecx),%esi
  0x02605998: cmp    0x4(%eax),%esi
  0x0260599b: jne    0x02605b88
  0x026059a1: shl    %edi
  0x026059a3: lea    0xc(%ecx,%edx,2),%esi
  0x026059a7: mov    %esi,(%esp)
  0x026059aa: lea    0xc(%eax,%ebx,2),%esi
  0x026059ae: mov    %esi,0x4(%esp)
  0x026059b2: mov    %edi,0x8(%esp)
  0x026059b6: call   0x6d8fadf0         ;*invokestatic arraycopy
                                        ; - java.util.Arrays::copyOfRange@57 (line 3210)
                                        ;   {runtime_call}
  0x026059bb: mov    0x3c(%esp),%eax
  0x026059bf: add    $0x58,%esp
  0x026059c2: pop    %ebp
  0x026059c3: test   %eax,0x200100      ;   {poll_return}
  0x026059c9: ret                       ;*areturn
                                        ; - java.util.Arrays::copyOfRange@62 (line 3212)
  0x026059ca: mov    $0x146d4e88,%edx   ;   {oop('java/lang/IllegalArgumentException')}
  0x026059cf: cmpl   $0x5,0xe4(%edx)
  0x026059d9: jne    0x02605ba2         ; implicit exception: dispatches to 0x02605b9d
  0x026059df: mov    %fs:0x0,%ecx
  0x026059e7: mov    0xfffffff4(%ecx),%ecx
  0x026059ea: mov    0x34(%ecx),%eax
  0x026059ed: lea    0x18(%eax),%edi
  0x026059f0: cmp    0x3c(%ecx),%edi
  0x026059f3: ja     0x02605ba2
  0x026059f9: mov    %edi,0x34(%ecx)
  0x026059fc: mov    0x68(%edx),%ecx
  0x026059ff: mov    %ecx,(%eax)
  0x02605a01: mov    %edx,0x4(%eax)
  0x02605a04: xor    %ecx,%ecx
  0x02605a06: mov    %ecx,0x8(%eax)
  0x02605a09: mov    %ecx,0xc(%eax)
  0x02605a0c: mov    %ecx,0x10(%eax)
  0x02605a0f: mov    %ecx,0x14(%eax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3208)
  0x02605a12: mov    $0x145eaec8,%edx   ;   {oop('java/lang/StringBuilder')}
  0x02605a17: mov    %eax,0x40(%esp)
  0x02605a1b: mov    %fs:0x0,%ecx
  0x02605a23: mov    0xfffffff4(%ecx),%ecx
  0x02605a26: mov    0x34(%ecx),%eax
  0x02605a29: lea    0x10(%eax),%edi
  0x02605a2c: cmp    0x3c(%ecx),%edi
  0x02605a2f: ja     0x02605bae
  0x02605a35: mov    %edi,0x34(%ecx)
  0x02605a38: mov    0x68(%edx),%ecx
  0x02605a3b: mov    %ecx,(%eax)
  0x02605a3d: mov    %edx,0x4(%eax)
  0x02605a40: xor    %ecx,%ecx
  0x02605a42: mov    %ecx,0x8(%eax)
  0x02605a45: mov    %ecx,0xc(%eax)     ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3208)
  0x02605a48: mov    %eax,0x44(%esp)
  0x02605a4c: mov    $0x10,%ebx
  0x02605a51: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x02605a56: mov    %ebx,%edi
  0x02605a58: cmp    $0xffffff,%ebx
  0x02605a5e: ja     0x02605bba
  0x02605a64: mov    $0x13,%esi
  0x02605a69: lea    (%esi,%ebx,2),%esi
  0x02605a6c: and    $0xfffffff8,%esi
  0x02605a6f: mov    %fs:0x0,%ecx
  0x02605a77: mov    0xfffffff4(%ecx),%ecx
  0x02605a7a: mov    0x34(%ecx),%eax
  0x02605a7d: lea    (%eax,%esi,1),%esi
  0x02605a80: cmp    0x3c(%ecx),%esi
  0x02605a83: ja     0x02605bba
  0x02605a89: mov    %esi,0x34(%ecx)
  0x02605a8c: sub    %eax,%esi
  0x02605a8e: movl   $0x1,(%eax)
  0x02605a94: mov    %edx,0x4(%eax)
  0x02605a97: mov    %ebx,0x8(%eax)
  0x02605a9a: sub    $0xc,%esi
  0x02605a9d: je     0x02605ac3
  0x02605aa3: xor    %ebx,%ebx
  0x02605aa5: shr    $0x3,%esi
  0x02605aa8: jae    0x02605ab8
  0x02605aae: mov    %ebx,0xc(%eax,%esi,8)
  0x02605ab2: je     0x02605ac3
  0x02605ab8: mov    %ebx,0x8(%eax,%esi,8)
  0x02605abc: mov    %ebx,0x4(%eax,%esi,8)
  0x02605ac0: dec    %esi
  0x02605ac1: jne    0x02605ab8         ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.util.Arrays::copyOfRange@16 (line 3208)
  0x02605ac3: mov    0x44(%esp),%esi
  0x02605ac7: mov    %eax,0xc(%esi)
  0x02605aca: mov    %esi,%eax
  0x02605acc: shr    $0x9,%eax
  0x02605acf: movb   $0x0,0x1856d380(%eax)  ;*putfield value
                                        ; - java.lang.AbstractStringBuilder::<init>@8 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.util.Arrays::copyOfRange@16 (line 3208)
  0x02605ad6: mov    0x34(%esp),%edx
  0x02605ada: mov    %esi,%ecx          ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.util.Arrays::copyOfRange@20 (line 3208)
  0x02605adc: nop    
  0x02605add: nop    
  0x02605ade: nop    
  0x02605adf: call   0x025bcf40         ; OopMap{[64]=Oop [68]=Oop off=580}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.util.Arrays::copyOfRange@20 (line 3208)
                                        ;   {optimized virtual_call}
  0x02605ae4: mov    $0x147400d0,%edx   ;   {oop(" > ")}
  0x02605ae9: mov    0x44(%esp),%ecx    ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
                                        ; - java.util.Arrays::copyOfRange@25 (line 3208)
  0x02605aed: nop    
  0x02605aee: nop    
  0x02605aef: call   0x025bcf40         ; OopMap{[64]=Oop [68]=Oop off=596}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
                                        ; - java.util.Arrays::copyOfRange@25 (line 3208)
                                        ;   {optimized virtual_call}
  0x02605af4: mov    0x60(%esp),%edx
  0x02605af8: mov    0x44(%esp),%ecx    ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.util.Arrays::copyOfRange@29 (line 3208)
  0x02605afc: nop    
  0x02605afd: nop    
  0x02605afe: nop    
  0x02605aff: call   0x025bcf40         ; OopMap{[64]=Oop [68]=Oop off=612}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.util.Arrays::copyOfRange@29 (line 3208)
                                        ;   {optimized virtual_call}
  0x02605b04: mov    $0x1459d4b0,%edx   ;   {oop('java/lang/String')}
  0x02605b09: mov    %fs:0x0,%ecx
  0x02605b11: mov    0xfffffff4(%ecx),%ecx
  0x02605b14: mov    0x34(%ecx),%eax
  0x02605b17: lea    0x18(%eax),%edi
  0x02605b1a: cmp    0x3c(%ecx),%edi
  0x02605b1d: ja     0x02605bc4
  0x02605b23: mov    %edi,0x34(%ecx)
  0x02605b26: mov    0x68(%edx),%ecx
  0x02605b29: mov    %ecx,(%eax)
  0x02605b2b: mov    %edx,0x4(%eax)
  0x02605b2e: xor    %ecx,%ecx
  0x02605b30: mov    %ecx,0x8(%eax)
  0x02605b33: mov    %ecx,0xc(%eax)
  0x02605b36: mov    %ecx,0x10(%eax)
  0x02605b39: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
  0x02605b3c: mov    0x44(%esp),%edx
  0x02605b40: mov    0xc(%edx),%ecx     ;*getfield value
                                        ; - java.lang.StringBuilder::toString@5 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
  0x02605b43: mov    0x8(%edx),%esi     ;*getfield count
                                        ; - java.lang.StringBuilder::toString@10 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
  0x02605b46: mov    %ecx,%edx
  0x02605b48: movl   $0x0,(%esp)
  0x02605b4f: mov    %esi,0x4(%esp)
  0x02605b53: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
  0x02605b55: mov    %eax,0x48(%esp)
  0x02605b59: nop    
  0x02605b5a: nop    
  0x02605b5b: call   0x025bcf40         ; OopMap{[64]=Oop [72]=Oop off=704}
                                        ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
                                        ;   {optimized virtual_call}
  0x02605b60: mov    0x48(%esp),%edx
  0x02605b64: mov    0x40(%esp),%ecx    ;*invokespecial <init>
                                        ; - java.util.Arrays::copyOfRange@35 (line 3208)
  0x02605b68: nop    
  0x02605b69: nop    
  0x02605b6a: nop    
  0x02605b6b: call   0x025bcf40         ; OopMap{[64]=Oop off=720}
                                        ;*invokespecial <init>
                                        ; - java.util.Arrays::copyOfRange@35 (line 3208)
                                        ;   {optimized virtual_call}
  0x02605b70: mov    0x40(%esp),%eax
  0x02605b74: jmp    0x02605bf7
  0x02605b79: call   0x025faa40         ; OopMap{[48]=Oop off=734}
                                        ;*newarray
                                        ; - java.util.Arrays::copyOfRange@40 (line 3209)
                                        ;   {runtime_call}
  0x02605b7e: jmp    0x0260593c
  0x02605b83: call   0x025fa0d0         ; OopMap{eax=Oop ecx=Oop off=744}
                                        ;*arraylength
                                        ; - java.util.Arrays::copyOfRange@50 (line 3210)
                                        ;   {runtime_call}
  0x02605b88: mov    %eax,(%esp)
  0x02605b8b: mov    %ebx,0x4(%esp)
  0x02605b8f: mov    %edi,0x8(%esp)
  0x02605b93: call   0x025bd340         ; OopMap{[60]=Oop off=760}
                                        ;*invokestatic arraycopy
                                        ; - java.util.Arrays::copyOfRange@57 (line 3210)
                                        ;   {static_call}
  0x02605b98: jmp    0x026059bb
  0x02605b9d: call   0x025fa0d0         ; OopMap{off=770}
                                        ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3208)
                                        ;   {runtime_call}
  0x02605ba2: mov    %edx,%edx
  0x02605ba4: call   0x025fa740         ; OopMap{off=777}
                                        ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3208)
                                        ;   {runtime_call}
  0x02605ba9: jmp    0x02605a12
  0x02605bae: mov    %edx,%edx
  0x02605bb0: call   0x025fa480         ; OopMap{[64]=Oop off=789}
                                        ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3208)
                                        ;   {runtime_call}
  0x02605bb5: jmp    0x02605a48
  0x02605bba: call   0x025faa40         ; OopMap{[64]=Oop [68]=Oop off=799}
                                        ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.util.Arrays::copyOfRange@16 (line 3208)
                                        ;   {runtime_call}
  0x02605bbf: jmp    0x02605ac3
  0x02605bc4: mov    %edx,%edx
  0x02605bc6: call   0x025fa480         ; OopMap{[64]=Oop [68]=Oop off=811}
                                        ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
                                        ; - java.util.Arrays::copyOfRange@32 (line 3208)
                                        ;   {runtime_call}
  0x02605bcb: jmp    0x02605b3c
  0x02605bd0: nop    
  0x02605bd1: nop    
  0x02605bd2: mov    %fs:0x0,%esi
  0x02605bda: mov    0xfffffff4(%esi),%esi
  0x02605bdd: mov    0x170(%esi),%eax
  0x02605be3: movl   $0x0,0x170(%esi)
  0x02605bed: movl   $0x0,0x174(%esi)
  0x02605bf7: add    $0x58,%esp
  0x02605bfa: pop    %ebp
  0x02605bfb: jmp    0x025f9c00         ;   {runtime_call}
[Stub Code]
  0x02605c00: nop                       ;   {no_reloc}
  0x02605c01: nop    
  0x02605c02: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c07: jmp    0x02605c07         ;   {runtime_call}
  0x02605c0c: nop    
  0x02605c0d: nop    
  0x02605c0e: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c13: jmp    0x02605c13         ;   {runtime_call}
  0x02605c18: nop    
  0x02605c19: nop    
  0x02605c1a: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c1f: jmp    0x02605c1f         ;   {runtime_call}
  0x02605c24: nop    
  0x02605c25: nop    
  0x02605c26: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c2b: jmp    0x02605c2b         ;   {runtime_call}
  0x02605c30: nop    
  0x02605c31: nop    
  0x02605c32: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c37: jmp    0x02605c37         ;   {runtime_call}
  0x02605c3c: nop    
  0x02605c3d: nop    
  0x02605c3e: mov    $0x0,%ebx          ;   {static_stub}
  0x02605c43: jmp    0x02605c43         ;   {runtime_call}
[Exception Handler]
  0x02605c48: call   0x025fb1c0         ;   {runtime_call}
  0x02605c4d: push   $0x6dab698c        ;   {external_word}
  0x02605c52: call   0x02605c57
  0x02605c57: pusha  
  0x02605c58: call   0x6d8b2a00         ;   {runtime_call}
  0x02605c5d: hlt    
[Deopt Handler Code]
  0x02605c5e: push   $0x2605c5e         ;   {section_word}
  0x02605c63: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02606048:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'setPriority0' '(I)V' in 'java/lang/Thread'
  # this:     ecx       = 'java/lang/Thread'
  # parm0:    edx       = int
  #           [sp+0x30]  (sp of caller)
  0x02606150: cmp    0x4(%ecx),%eax
  0x02606153: je     0x02606160
  0x02606159: jmp    0x025bcd40         ;   {runtime_call}
  0x0260615e: xchg   %ax,%ax
[Verified Entry Point]
  0x02606160: mov    %eax,0xffffd000(%esp)
  0x02606167: push   %ebp
  0x02606168: mov    %esp,%ebp
  0x0260616a: sub    $0x28,%esp
  0x0260616d: mov    %fs:0x0,%edi
  0x02606175: mov    0xfffffff4(%edi),%edi
  0x02606178: mov    %ecx,0xc(%esp)
  0x0260617c: xor    %eax,%eax
  0x0260617e: cmp    $0x0,%ecx
  0x02606181: je     0x0260618b
  0x02606187: lea    0xc(%esp),%eax
  0x0260618b: mov    %eax,0x4(%esp)
  0x0260618f: mov    %edx,0x8(%esp)     ; OopMap{[12]=Oop off=67}
  0x02606193: movl   $0x2606193,0x10c(%edi)  ;   {section_word}
  0x0260619d: mov    %esp,0x108(%edi)
  0x026061a3: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x026061aa: je     0x026061bf
  0x026061b0: mov    $0x145c3358,%eax   ;   {oop({method} 'setPriority0' '(I)V' in 'java/lang/Thread')}
  0x026061b5: push   %eax
  0x026061b6: push   %edi
  0x026061b7: call   0x6da4d960         ;   {runtime_call}
  0x026061bc: add    $0x8,%esp
  0x026061bf: lea    0x118(%edi),%edx
  0x026061c5: mov    %edx,(%esp)
  0x026061c8: movl   $0x4,0x150(%edi)
  0x026061d2: call   0x6d3db2da         ;   {runtime_call}
  0x026061d7: movl   $0x5,0x150(%edi)
  0x026061e1: mov    %edi,%ecx
  0x026061e3: shr    $0x3,%ecx
  0x026061e6: and    $0xffc,%ecx
  0x026061ec: mov    %ecx,0x210000(,%ecx,1)  ;   {external_word}
  0x026061f3: cmpl   $0x0,0x6db15300    ;   {external_word}
  0x026061fd: jne    0x02606210
  0x02606203: cmpl   $0x0,0x18(%edi)
  0x0260620a: je     0x02606219
  0x02606210: push   %edi
  0x02606211: call   0x6da889b0         ;   {runtime_call}
  0x02606216: add    $0x4,%esp
  0x02606219: movl   $0x8,0x150(%edi)
  0x02606223: cmpl   $0x1,0x16c(%edi)
  0x0260622d: je     0x02606281
  0x02606233: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x0260623a: je     0x0260624f
  0x02606240: mov    $0x145c3358,%eax   ;   {oop({method} 'setPriority0' '(I)V' in 'java/lang/Thread')}
  0x02606245: push   %eax
  0x02606246: push   %edi
  0x02606247: call   0x6da4d960         ;   {runtime_call}
  0x0260624c: add    $0x8,%esp
  0x0260624f: movl   $0x0,0x108(%edi)
  0x02606259: movl   $0x0,0x10c(%edi)
  0x02606263: mov    0x20(%edi),%ecx
  0x02606266: movl   $0x0,0x80(%ecx)
  0x02606270: cmpl   $0x0,0x4(%edi)
  0x02606277: jne    0x02606288
  0x0260627d: mov    %ebp,%esp
  0x0260627f: pop    %ebp
  0x02606280: ret    
  0x02606281: call   0x6da4d970         ;   {runtime_call}
  0x02606286: jmp    0x02606233
  0x02606288: emms   
  0x0260628a: mov    %ebp,%esp
  0x0260628c: pop    %ebp
  0x0260628d: jmp    Stub::forward exception  ;   {runtime_call}
  0x02606292: stos   %al,%es:(%edi)
  0x02606293: .byte 0xd2
Decoding compiled method 0x026062c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     ecx       = 'java/lang/AbstractStringBuilder'
  # parm0:    edx       = int
  #           [sp+0x20]  (sp of caller)
  0x026063c0: nop    
  0x026063c1: nop    
  0x026063c2: nop    
  0x026063c3: nop    
  0x026063c4: nop    
  0x026063c5: nop    
  0x026063c6: nop    
  0x026063c7: cmp    0x4(%ecx),%eax
  0x026063ca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x026063d0: mov    %eax,0xffffd000(%esp)
  0x026063d7: push   %ebp
  0x026063d8: sub    $0x18,%esp         ;*aload_0
                                        ; - java.lang.AbstractStringBuilder::<init>@0 (line 44)
  0x026063db: mov    %ecx,0x10(%esp)
  0x026063df: mov    %edx,%ebx
  0x026063e1: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x026063e6: mov    %ebx,%edi
  0x026063e8: cmp    $0xffffff,%ebx
  0x026063ee: ja     0x0260646f
  0x026063f4: mov    $0x13,%esi
  0x026063f9: lea    (%esi,%ebx,2),%esi
  0x026063fc: and    $0xfffffff8,%esi
  0x026063ff: mov    %fs:0x0,%ecx
  0x02606407: mov    0xfffffff4(%ecx),%ecx
  0x0260640a: mov    0x34(%ecx),%eax
  0x0260640d: lea    (%eax,%esi,1),%esi
  0x02606410: cmp    0x3c(%ecx),%esi
  0x02606413: ja     0x0260646f
  0x02606419: mov    %esi,0x34(%ecx)
  0x0260641c: sub    %eax,%esi
  0x0260641e: movl   $0x1,(%eax)
  0x02606424: mov    %edx,0x4(%eax)
  0x02606427: mov    %ebx,0x8(%eax)
  0x0260642a: sub    $0xc,%esi
  0x0260642d: je     0x02606453
  0x02606433: xor    %ebx,%ebx
  0x02606435: shr    $0x3,%esi
  0x02606438: jae    0x02606448
  0x0260643e: mov    %ebx,0xc(%eax,%esi,8)
  0x02606442: je     0x02606453
  0x02606448: mov    %ebx,0x8(%eax,%esi,8)
  0x0260644c: mov    %ebx,0x4(%eax,%esi,8)
  0x02606450: dec    %esi
  0x02606451: jne    0x02606448         ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
  0x02606453: mov    0x10(%esp),%ecx
  0x02606457: mov    %eax,0xc(%ecx)
  0x0260645a: shr    $0x9,%ecx
  0x0260645d: movb   $0x0,0x1856d380(%ecx)  ;*putfield value
                                        ; - java.lang.AbstractStringBuilder::<init>@8 (line 45)
  0x02606464: add    $0x18,%esp
  0x02606467: pop    %ebp
  0x02606468: test   %eax,0x200100      ;   {poll_return}
  0x0260646e: ret    
  0x0260646f: call   0x025faa40         ; OopMap{[16]=Oop off=180}
                                        ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ;   {runtime_call}
  0x02606474: jmp    0x02606453
  0x02606476: nop    
  0x02606477: nop    
  0x02606478: mov    %fs:0x0,%esi
  0x02606480: mov    0xfffffff4(%esi),%esi
  0x02606483: mov    0x170(%esi),%eax
  0x02606489: movl   $0x0,0x170(%esi)
  0x02606493: movl   $0x0,0x174(%esi)
  0x0260649d: add    $0x18,%esp
  0x026064a0: pop    %ebp
  0x026064a1: jmp    0x025f9c00         ;   {runtime_call}
  0x026064a6: hlt    
  0x026064a7: hlt    
  0x026064a8: hlt    
  0x026064a9: hlt    
  0x026064aa: hlt    
  0x026064ab: hlt    
  0x026064ac: hlt    
  0x026064ad: hlt    
  0x026064ae: hlt    
  0x026064af: hlt    
[Exception Handler]
[Stub Code]
  0x026064b0: call   0x025fb1c0         ;   {no_reloc}
  0x026064b5: push   $0x6dab698c        ;   {external_word}
  0x026064ba: call   0x026064bf
  0x026064bf: pusha  
  0x026064c0: call   0x6d8b2a00         ;   {runtime_call}
  0x026064c5: hlt    
[Deopt Handler Code]
  0x026064c6: push   $0x26064c6         ;   {section_word}
  0x026064cb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02606588:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'getInheritedAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController'
  #           [sp+0x30]  (sp of caller)
  0x026066a0: cmp    0x4(%ecx),%eax
  0x026066a3: je     0x026066b0
  0x026066a9: jmp    0x025bcd40         ;   {runtime_call}
  0x026066ae: xchg   %ax,%ax
[Verified Entry Point]
  0x026066b0: mov    %eax,0xffffd000(%esp)
  0x026066b7: push   %ebp
  0x026066b8: mov    %esp,%ebp
  0x026066ba: sub    $0x28,%esp
  0x026066bd: mov    %fs:0x0,%edi
  0x026066c5: mov    0xfffffff4(%edi),%edi
  0x026066c8: mov    $0x14615f50,%esi   ;   {oop(a 'java/lang/Class' = 'java/security/AccessController')}
  0x026066cd: mov    %esi,0x10(%esp)
  0x026066d1: lea    0x10(%esp),%esi
  0x026066d5: mov    %esi,0x4(%esp)     ; OopMap{[16]=Oop off=57}
  0x026066d9: movl   $0x26066d9,0x10c(%edi)  ;   {section_word}
  0x026066e3: mov    %esp,0x108(%edi)
  0x026066e9: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x026066f0: je     0x02606705
  0x026066f6: mov    $0x14615bc0,%eax   ;   {oop({method} 'getInheritedAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController')}
  0x026066fb: push   %eax
  0x026066fc: push   %edi
  0x026066fd: call   0x6da4d960         ;   {runtime_call}
  0x02606702: add    $0x8,%esp
  0x02606705: lea    0x118(%edi),%edx
  0x0260670b: mov    %edx,(%esp)
  0x0260670e: movl   $0x4,0x150(%edi)
  0x02606718: call   0x6d3d1069         ;   {runtime_call}
  0x0260671d: movl   $0x5,0x150(%edi)
  0x02606727: mov    %edi,%ecx
  0x02606729: shr    $0x3,%ecx
  0x0260672c: and    $0xffc,%ecx
  0x02606732: mov    %ecx,0x210000(,%ecx,1)  ;   {external_word}
  0x02606739: cmpl   $0x0,0x6db15300    ;   {external_word}
  0x02606743: jne    0x02606756
  0x02606749: cmpl   $0x0,0x18(%edi)
  0x02606750: je     0x02606765
  0x02606756: mov    %eax,0xfffffffc(%ebp)
  0x02606759: push   %edi
  0x0260675a: call   0x6da889b0         ;   {runtime_call}
  0x0260675f: add    $0x4,%esp
  0x02606762: mov    0xfffffffc(%ebp),%eax
  0x02606765: movl   $0x8,0x150(%edi)
  0x0260676f: cmpl   $0x1,0x16c(%edi)
  0x02606779: je     0x026067de
  0x0260677f: cmpb   $0x0,0x6db1291d    ;   {external_word}
  0x02606786: je     0x026067a1
  0x0260678c: mov    %eax,0xfffffffc(%ebp)
  0x0260678f: mov    $0x14615bc0,%eax   ;   {oop({method} 'getInheritedAccessControlContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController')}
  0x02606794: push   %eax
  0x02606795: push   %edi
  0x02606796: call   0x6da4d960         ;   {runtime_call}
  0x0260679b: add    $0x8,%esp
  0x0260679e: mov    0xfffffffc(%ebp),%eax
  0x026067a1: movl   $0x0,0x108(%edi)
  0x026067ab: movl   $0x0,0x10c(%edi)
  0x026067b5: cmp    $0x0,%eax
  0x026067b8: je     0x026067c0
  0x026067be: mov    (%eax),%eax
  0x026067c0: mov    0x20(%edi),%ecx
  0x026067c3: movl   $0x0,0x80(%ecx)
  0x026067cd: cmpl   $0x0,0x4(%edi)
  0x026067d4: jne    0x026067eb
  0x026067da: mov    %ebp,%esp
  0x026067dc: pop    %ebp
  0x026067dd: ret    
  0x026067de: mov    %eax,0xfffffffc(%ebp)
  0x026067e1: call   0x6da4d970         ;   {runtime_call}
  0x026067e6: mov    0xfffffffc(%ebp),%eax
  0x026067e9: jmp    0x0260677f
  0x026067eb: emms   
  0x026067ed: mov    %ebp,%esp
  0x026067ef: pop    %ebp
  0x026067f0: jmp    Stub::forward exception  ;   {runtime_call}
  0x026067f5: .byte 0x81
  0x026067f6: jg     0x026067fc
Decoding compiled method 0x02606808:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder'
  #           [sp+0x30]  (sp of caller)
  0x02606910: nop    
  0x02606911: nop    
  0x02606912: nop    
  0x02606913: nop    
  0x02606914: nop    
  0x02606915: nop    
  0x02606916: nop    
  0x02606917: cmp    0x4(%ecx),%eax
  0x0260691a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02606920: mov    %eax,0xffffd000(%esp)
  0x02606927: push   %ebp
  0x02606928: sub    $0x28,%esp
  0x0260692b: mov    %ecx,%ebx
  0x0260692d: mov    $0x1459d4b0,%edx   ;   {oop('java/lang/String')}
  0x02606932: mov    %fs:0x0,%ecx
  0x0260693a: mov    0xfffffff4(%ecx),%ecx
  0x0260693d: mov    0x34(%ecx),%eax
  0x02606940: lea    0x18(%eax),%edi
  0x02606943: cmp    0x3c(%ecx),%edi
  0x02606946: ja     0x02606993
  0x0260694c: mov    %edi,0x34(%ecx)
  0x0260694f: mov    0x68(%edx),%ecx
  0x02606952: mov    %ecx,(%eax)
  0x02606954: mov    %edx,0x4(%eax)
  0x02606957: xor    %ecx,%ecx
  0x02606959: mov    %ecx,0x8(%eax)
  0x0260695c: mov    %ecx,0xc(%eax)
  0x0260695f: mov    %ecx,0x10(%eax)
  0x02606962: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
  0x02606965: mov    0xc(%ebx),%edx     ;*getfield value
                                        ; - java.lang.StringBuilder::toString@5 (line 430)
  0x02606968: mov    0x8(%ebx),%ecx     ;*getfield count
                                        ; - java.lang.StringBuilder::toString@10 (line 430)
  0x0260696b: movl   $0x0,(%esp)
  0x02606972: mov    %ecx,0x4(%esp)
  0x02606976: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
  0x02606978: mov    %eax,0x18(%esp)
  0x0260697c: nop    
  0x0260697d: nop    
  0x0260697e: nop    
  0x0260697f: call   0x025bcf40         ; OopMap{[24]=Oop off=116}
                                        ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
                                        ;   {optimized virtual_call}
  0x02606984: mov    0x18(%esp),%eax
  0x02606988: add    $0x28,%esp
  0x0260698b: pop    %ebp
  0x0260698c: test   %eax,0x200100      ;   {poll_return}
  0x02606992: ret    
  0x02606993: mov    %edx,%edx
  0x02606995: call   0x025fa480         ; OopMap{ebx=Oop off=138}
                                        ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
                                        ;   {runtime_call}
  0x0260699a: jmp    0x02606965
  0x0260699c: nop    
  0x0260699d: nop    
  0x0260699e: mov    %fs:0x0,%esi
  0x026069a6: mov    0xfffffff4(%esi),%esi
  0x026069a9: mov    0x170(%esi),%eax
  0x026069af: movl   $0x0,0x170(%esi)
  0x026069b9: movl   $0x0,0x174(%esi)
  0x026069c3: add    $0x28,%esp
  0x026069c6: pop    %ebp
  0x026069c7: jmp    0x025f9c00         ;   {runtime_call}
  0x026069cc: hlt    
  0x026069cd: hlt    
  0x026069ce: hlt    
  0x026069cf: hlt    
[Stub Code]
  0x026069d0: nop                       ;   {no_reloc}
  0x026069d1: nop    
  0x026069d2: mov    $0x0,%ebx          ;   {static_stub}
  0x026069d7: jmp    0x026069d7         ;   {runtime_call}
[Exception Handler]
  0x026069dc: call   0x025fb1c0         ;   {runtime_call}
  0x026069e1: push   $0x6dab698c        ;   {external_word}
  0x026069e6: call   0x026069eb
  0x026069eb: pusha  
  0x026069ec: call   0x6d8b2a00         ;   {runtime_call}
  0x026069f1: hlt    
[Deopt Handler Code]
  0x026069f2: push   $0x26069f2         ;   {section_word}
  0x026069f7: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02606ac8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '()V' in 'java/lang/StringBuilder'
  #           [sp+0x20]  (sp of caller)
  0x02606bc0: nop    
  0x02606bc1: nop    
  0x02606bc2: nop    
  0x02606bc3: nop    
  0x02606bc4: nop    
  0x02606bc5: nop    
  0x02606bc6: nop    
  0x02606bc7: cmp    0x4(%ecx),%eax
  0x02606bca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02606bd0: mov    %eax,0xffffd000(%esp)
  0x02606bd7: push   %ebp
  0x02606bd8: sub    $0x18,%esp         ;*aload_0
                                        ; - java.lang.StringBuilder::<init>@0 (line 68)
  0x02606bdb: mov    %ecx,0x10(%esp)
  0x02606bdf: mov    $0x10,%ebx
  0x02606be4: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x02606be9: mov    %ebx,%edi
  0x02606beb: cmp    $0xffffff,%ebx
  0x02606bf1: ja     0x02606c72
  0x02606bf7: mov    $0x13,%esi
  0x02606bfc: lea    (%esi,%ebx,2),%esi
  0x02606bff: and    $0xfffffff8,%esi
  0x02606c02: mov    %fs:0x0,%ecx
  0x02606c0a: mov    0xfffffff4(%ecx),%ecx
  0x02606c0d: mov    0x34(%ecx),%eax
  0x02606c10: lea    (%eax,%esi,1),%esi
  0x02606c13: cmp    0x3c(%ecx),%esi
  0x02606c16: ja     0x02606c72
  0x02606c1c: mov    %esi,0x34(%ecx)
  0x02606c1f: sub    %eax,%esi
  0x02606c21: movl   $0x1,(%eax)
  0x02606c27: mov    %edx,0x4(%eax)
  0x02606c2a: mov    %ebx,0x8(%eax)
  0x02606c2d: sub    $0xc,%esi
  0x02606c30: je     0x02606c56
  0x02606c36: xor    %ebx,%ebx
  0x02606c38: shr    $0x3,%esi
  0x02606c3b: jae    0x02606c4b
  0x02606c41: mov    %ebx,0xc(%eax,%esi,8)
  0x02606c45: je     0x02606c56
  0x02606c4b: mov    %ebx,0x8(%eax,%esi,8)
  0x02606c4f: mov    %ebx,0x4(%eax,%esi,8)
  0x02606c53: dec    %esi
  0x02606c54: jne    0x02606c4b         ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
  0x02606c56: mov    0x10(%esp),%ecx
  0x02606c5a: mov    %eax,0xc(%ecx)
  0x02606c5d: shr    $0x9,%ecx
  0x02606c60: movb   $0x0,0x1856d380(%ecx)  ;*putfield value
                                        ; - java.lang.AbstractStringBuilder::<init>@8 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
  0x02606c67: add    $0x18,%esp
  0x02606c6a: pop    %ebp
  0x02606c6b: test   %eax,0x200100      ;   {poll_return}
  0x02606c71: ret    
  0x02606c72: call   0x025faa40         ; OopMap{[16]=Oop off=183}
                                        ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ;   {runtime_call}
  0x02606c77: jmp    0x02606c56
  0x02606c79: nop    
  0x02606c7a: nop    
  0x02606c7b: mov    %fs:0x0,%esi
  0x02606c83: mov    0xfffffff4(%esi),%esi
  0x02606c86: mov    0x170(%esi),%eax
  0x02606c8c: movl   $0x0,0x170(%esi)
  0x02606c96: movl   $0x0,0x174(%esi)
  0x02606ca0: add    $0x18,%esp
  0x02606ca3: pop    %ebp
  0x02606ca4: jmp    0x025f9c00         ;   {runtime_call}
  0x02606ca9: hlt    
  0x02606caa: hlt    
  0x02606cab: hlt    
  0x02606cac: hlt    
  0x02606cad: hlt    
  0x02606cae: hlt    
  0x02606caf: hlt    
[Exception Handler]
[Stub Code]
  0x02606cb0: call   0x025fb1c0         ;   {no_reloc}
  0x02606cb5: push   $0x6dab698c        ;   {external_word}
  0x02606cba: call   0x02606cbf
  0x02606cbf: pusha  
  0x02606cc0: call   0x6d8b2a00         ;   {runtime_call}
  0x02606cc5: hlt    
[Deopt Handler Code]
  0x02606cc6: push   $0x2606cc6         ;   {section_word}
  0x02606ccb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02606d88:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'toCharArray' '()[C' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x02606e90: nop    
  0x02606e91: nop    
  0x02606e92: nop    
  0x02606e93: nop    
  0x02606e94: nop    
  0x02606e95: nop    
  0x02606e96: nop    
  0x02606e97: cmp    0x4(%ecx),%eax
  0x02606e9a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02606ea0: mov    %eax,0xffffd000(%esp)
  0x02606ea7: push   %ebp
  0x02606ea8: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.String::toCharArray@0 (line 2725)
  0x02606eab: mov    0x10(%ecx),%esi    ;*getfield count
                                        ; - java.lang.String::toCharArray@1 (line 2725)
  0x02606eae: mov    %esi,%ebx
  0x02606eb0: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x02606eb5: mov    %ecx,0x1c(%esp)
  0x02606eb9: mov    %esi,0x18(%esp)
  0x02606ebd: mov    %ebx,%edi
  0x02606ebf: cmp    $0xffffff,%ebx
  0x02606ec5: ja     0x02606f5f
  0x02606ecb: mov    $0x13,%esi
  0x02606ed0: lea    (%esi,%ebx,2),%esi
  0x02606ed3: and    $0xfffffff8,%esi
  0x02606ed6: mov    %fs:0x0,%ecx
  0x02606ede: mov    0xfffffff4(%ecx),%ecx
  0x02606ee1: mov    0x34(%ecx),%eax
  0x02606ee4: lea    (%eax,%esi,1),%esi
  0x02606ee7: cmp    0x3c(%ecx),%esi
  0x02606eea: ja     0x02606f5f
  0x02606ef0: mov    %esi,0x34(%ecx)
  0x02606ef3: sub    %eax,%esi
  0x02606ef5: movl   $0x1,(%eax)
  0x02606efb: mov    %edx,0x4(%eax)
  0x02606efe: mov    %ebx,0x8(%eax)
  0x02606f01: sub    $0xc,%esi
  0x02606f04: je     0x02606f2a
  0x02606f0a: xor    %ebx,%ebx
  0x02606f0c: shr    $0x3,%esi
  0x02606f0f: jae    0x02606f1f
  0x02606f15: mov    %ebx,0xc(%eax,%esi,8)
  0x02606f19: je     0x02606f2a
  0x02606f1f: mov    %ebx,0x8(%eax,%esi,8)
  0x02606f23: mov    %ebx,0x4(%eax,%esi,8)
  0x02606f27: dec    %esi
  0x02606f28: jne    0x02606f1f         ;*newarray
                                        ; - java.lang.String::toCharArray@4 (line 2725)
  0x02606f2a: mov    $0x0,%edx
  0x02606f2f: mov    0x18(%esp),%esi
  0x02606f33: mov    %esi,(%esp)
  0x02606f36: mov    %eax,0x4(%esp)
  0x02606f3a: movl   $0x0,0x8(%esp)
  0x02606f42: mov    0x1c(%esp),%ecx    ;*invokevirtual getChars
                                        ; - java.lang.String::toCharArray@15 (line 2726)
  0x02606f46: mov    %eax,0x20(%esp)
  0x02606f4a: nop    
  0x02606f4b: call   0x025bcf40         ; OopMap{[32]=Oop off=192}
                                        ;*invokevirtual getChars
                                        ; - java.lang.String::toCharArray@15 (line 2726)
                                        ;   {optimized virtual_call}
  0x02606f50: mov    0x20(%esp),%eax
  0x02606f54: add    $0x28,%esp
  0x02606f57: pop    %ebp
  0x02606f58: test   %eax,0x200100      ;   {poll_return}
  0x02606f5e: ret    
  0x02606f5f: call   0x025faa40         ; OopMap{[28]=Oop off=212}
                                        ;*newarray
                                        ; - java.lang.String::toCharArray@4 (line 2725)
                                        ;   {runtime_call}
  0x02606f64: jmp    0x02606f2a
  0x02606f66: nop    
  0x02606f67: nop    
  0x02606f68: mov    %fs:0x0,%esi
  0x02606f70: mov    0xfffffff4(%esi),%esi
  0x02606f73: mov    0x170(%esi),%eax
  0x02606f79: movl   $0x0,0x170(%esi)
  0x02606f83: movl   $0x0,0x174(%esi)
  0x02606f8d: add    $0x28,%esp
  0x02606f90: pop    %ebp
  0x02606f91: jmp    0x025f9c00         ;   {runtime_call}
  0x02606f96: hlt    
  0x02606f97: hlt    
  0x02606f98: hlt    
  0x02606f99: hlt    
  0x02606f9a: hlt    
  0x02606f9b: hlt    
  0x02606f9c: hlt    
  0x02606f9d: hlt    
  0x02606f9e: hlt    
  0x02606f9f: hlt    
[Stub Code]
  0x02606fa0: nop                       ;   {no_reloc}
  0x02606fa1: nop    
  0x02606fa2: mov    $0x0,%ebx          ;   {static_stub}
  0x02606fa7: jmp    0x02606fa7         ;   {runtime_call}
[Exception Handler]
  0x02606fac: call   0x025fb1c0         ;   {runtime_call}
  0x02606fb1: push   $0x6dab698c        ;   {external_word}
  0x02606fb6: call   0x02606fbb
  0x02606fbb: pusha  
  0x02606fbc: call   0x6d8b2a00         ;   {runtime_call}
  0x02606fc1: hlt    
[Deopt Handler Code]
  0x02606fc2: push   $0x2606fc2         ;   {section_word}
  0x02606fc7: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x026070c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'checkAccess' '()V' in 'java/lang/Thread'
  #           [sp+0x20]  (sp of caller)
  0x026071d0: nop    
  0x026071d1: nop    
  0x026071d2: nop    
  0x026071d3: nop    
  0x026071d4: nop    
  0x026071d5: nop    
  0x026071d6: nop    
  0x026071d7: cmp    0x4(%ecx),%eax
  0x026071da: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x026071e0: mov    %eax,0xffffd000(%esp)
  0x026071e7: push   %ebp
  0x026071e8: sub    $0x18,%esp         ;*invokestatic getSecurityManager
                                        ; - java.lang.Thread::checkAccess@0 (line 1304)
  0x026071eb: mov    $0x145b2858,%edx   ;   {oop('java/lang/System')}
  0x026071f0: mov    0x15c(%edx),%esi   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.Thread::checkAccess@0 (line 1304)
  0x026071f6: cmp    $0x0,%esi
  0x026071f9: je     0x02607210         ;*ifnull
                                        ; - java.lang.Thread::checkAccess@5 (line 1305)
  0x026071ff: cmp    (%esi),%eax        ; implicit exception: dispatches to 0x0260721b
  0x02607201: mov    %ecx,%edx
  0x02607203: mov    %esi,%ecx          ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
  0x02607205: nop    
  0x02607206: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260720b: call   0x025bd140         ; OopMap{off=64}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
                                        ;   {virtual_call}
  0x02607210: add    $0x18,%esp
  0x02607213: pop    %ebp
  0x02607214: test   %eax,0x200100      ;   {poll_return}
  0x0260721a: ret    
  0x0260721b: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop off=80}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
                                        ;   {runtime_call}
  0x02607220: nop    
  0x02607221: nop    
  0x02607222: mov    %fs:0x0,%esi
  0x0260722a: mov    0xfffffff4(%esi),%esi
  0x0260722d: mov    0x170(%esi),%eax
  0x02607233: movl   $0x0,0x170(%esi)
  0x0260723d: movl   $0x0,0x174(%esi)
  0x02607247: add    $0x18,%esp
  0x0260724a: pop    %ebp
  0x0260724b: jmp    0x025f9c00         ;   {runtime_call}
[Stub Code]
  0x02607250: nop                       ;   {no_reloc}
  0x02607251: nop    
  0x02607252: mov    $0x0,%ebx          ;   {static_stub}
  0x02607257: jmp    0x02607257         ;   {runtime_call}
[Exception Handler]
  0x0260725c: call   0x025fb1c0         ;   {runtime_call}
  0x02607261: push   $0x6dab698c        ;   {external_word}
  0x02607266: call   0x0260726b
  0x0260726b: pusha  
  0x0260726c: call   0x6d8b2a00         ;   {runtime_call}
  0x02607271: hlt    
[Deopt Handler Code]
  0x02607272: push   $0x2607272         ;   {section_word}
  0x02607277: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02607348:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'checkAccess' '()V' in 'java/lang/ThreadGroup'
  #           [sp+0x20]  (sp of caller)
  0x02607450: nop    
  0x02607451: nop    
  0x02607452: nop    
  0x02607453: nop    
  0x02607454: nop    
  0x02607455: nop    
  0x02607456: nop    
  0x02607457: cmp    0x4(%ecx),%eax
  0x0260745a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02607460: mov    %eax,0xffffd000(%esp)
  0x02607467: push   %ebp
  0x02607468: sub    $0x18,%esp         ;*invokestatic getSecurityManager
                                        ; - java.lang.ThreadGroup::checkAccess@0 (line 297)
  0x0260746b: mov    $0x145b2858,%edx   ;   {oop('java/lang/System')}
  0x02607470: mov    0x15c(%edx),%esi   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.ThreadGroup::checkAccess@0 (line 297)
  0x02607476: cmp    $0x0,%esi
  0x02607479: je     0x02607490         ;*ifnull
                                        ; - java.lang.ThreadGroup::checkAccess@5 (line 298)
  0x0260747f: cmp    (%esi),%eax        ; implicit exception: dispatches to 0x0260749b
  0x02607481: mov    %ecx,%edx
  0x02607483: mov    %esi,%ecx          ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
  0x02607485: nop    
  0x02607486: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260748b: call   0x025bd140         ; OopMap{off=64}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
                                        ;   {virtual_call}
  0x02607490: add    $0x18,%esp
  0x02607493: pop    %ebp
  0x02607494: test   %eax,0x200100      ;   {poll_return}
  0x0260749a: ret    
  0x0260749b: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop off=80}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
                                        ;   {runtime_call}
  0x026074a0: nop    
  0x026074a1: nop    
  0x026074a2: mov    %fs:0x0,%esi
  0x026074aa: mov    0xfffffff4(%esi),%esi
  0x026074ad: mov    0x170(%esi),%eax
  0x026074b3: movl   $0x0,0x170(%esi)
  0x026074bd: movl   $0x0,0x174(%esi)
  0x026074c7: add    $0x18,%esp
  0x026074ca: pop    %ebp
  0x026074cb: jmp    0x025f9c00         ;   {runtime_call}
[Stub Code]
  0x026074d0: nop                       ;   {no_reloc}
  0x026074d1: nop    
  0x026074d2: mov    $0x0,%ebx          ;   {static_stub}
  0x026074d7: jmp    0x026074d7         ;   {runtime_call}
[Exception Handler]
  0x026074dc: call   0x025fb1c0         ;   {runtime_call}
  0x026074e1: push   $0x6dab698c        ;   {external_word}
  0x026074e6: call   0x026074eb
  0x026074eb: pusha  
  0x026074ec: call   0x6d8b2a00         ;   {runtime_call}
  0x026074f1: hlt    
[Deopt Handler Code]
  0x026074f2: push   $0x26074f2         ;   {section_word}
  0x026074f7: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x026075c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'getContext' '()Ljava/security/AccessControlContext;' in 'java/security/AccessController'
  #           [sp+0x30]  (sp of caller)
  0x026076e0: mov    %eax,0xffffd000(%esp)
  0x026076e7: push   %ebp
  0x026076e8: sub    $0x28,%esp         ;*invokestatic getStackAccessControlContext
                                        ; - java.security.AccessController::getContext@0 (line 484)
  0x026076eb: call   0x025bd340         ; OopMap{off=16}
                                        ;*invokestatic getStackAccessControlContext
                                        ; - java.security.AccessController::getContext@0 (line 484)
                                        ;   {static_call}
  0x026076f0: cmp    $0x0,%eax
  0x026076f3: jne    0x02607740         ;*ifnonnull
                                        ; - java.security.AccessController::getContext@5 (line 485)
  0x026076f9: mov    $0x145b8cf0,%edx   ;   {oop('java/security/AccessControlContext')}
  0x026076fe: mov    %fs:0x0,%ecx
  0x02607706: mov    0xfffffff4(%ecx),%ecx
  0x02607709: mov    0x34(%ecx),%eax
  0x0260770c: lea    0x18(%eax),%edi
  0x0260770f: cmp    0x3c(%ecx),%edi
  0x02607712: ja     0x02607757
  0x02607718: mov    %edi,0x34(%ecx)
  0x0260771b: mov    0x68(%edx),%ecx
  0x0260771e: mov    %ecx,(%eax)
  0x02607720: mov    %edx,0x4(%eax)
  0x02607723: xor    %ecx,%ecx
  0x02607725: mov    %ecx,0x8(%eax)
  0x02607728: mov    %ecx,0xc(%eax)
  0x0260772b: mov    %ecx,0x10(%eax)
  0x0260772e: mov    %ecx,0x14(%eax)    ;*new  ; - java.security.AccessController::getContext@8 (line 488)
  0x02607731: movb   $0x1,0x8(%eax)     ;*putfield isPrivileged
                                        ; - java.security.AccessControlContext::<init>@16 (line 174)
                                        ; - java.security.AccessController::getContext@14 (line 488)
  0x02607735: add    $0x28,%esp
  0x02607738: pop    %ebp
  0x02607739: test   %eax,0x200100      ;   {poll_return}
  0x0260773f: ret                       ;*areturn
                                        ; - java.security.AccessController::getContext@17 (line 488)
  0x02607740: cmp    (%eax),%eax        ; implicit exception: dispatches to 0x02607760
  0x02607742: mov    %eax,%ecx          ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
  0x02607744: nop    
  0x02607745: nop    
  0x02607746: nop    
  0x02607747: call   0x025bcf40         ; OopMap{off=108}
                                        ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
                                        ;   {optimized virtual_call}
  0x0260774c: add    $0x28,%esp
  0x0260774f: pop    %ebp
  0x02607750: test   %eax,0x200100      ;   {poll_return}
  0x02607756: ret    
  0x02607757: mov    %edx,%edx
  0x02607759: call   0x025fa480         ; OopMap{off=126}
                                        ;*new  ; - java.security.AccessController::getContext@8 (line 488)
                                        ;   {runtime_call}
  0x0260775e: jmp    0x02607731
  0x02607760: call   0x025fa0d0         ; OopMap{eax=Oop off=133}
                                        ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
                                        ;   {runtime_call}
  0x02607765: nop    
  0x02607766: nop    
  0x02607767: mov    %fs:0x0,%esi
  0x0260776f: mov    0xfffffff4(%esi),%esi
  0x02607772: mov    0x170(%esi),%eax
  0x02607778: movl   $0x0,0x170(%esi)
  0x02607782: movl   $0x0,0x174(%esi)
  0x0260778c: add    $0x28,%esp
  0x0260778f: pop    %ebp
  0x02607790: jmp    0x025f9c00         ;   {runtime_call}
  0x02607795: hlt    
  0x02607796: hlt    
  0x02607797: hlt    
  0x02607798: hlt    
  0x02607799: hlt    
  0x0260779a: hlt    
  0x0260779b: hlt    
  0x0260779c: hlt    
  0x0260779d: hlt    
  0x0260779e: hlt    
  0x0260779f: hlt    
[Stub Code]
  0x026077a0: nop                       ;   {no_reloc}
  0x026077a1: nop    
  0x026077a2: mov    $0x0,%ebx          ;   {static_stub}
  0x026077a7: jmp    0x026077a7         ;   {runtime_call}
  0x026077ac: nop    
  0x026077ad: nop    
  0x026077ae: mov    $0x0,%ebx          ;   {static_stub}
  0x026077b3: jmp    0x026077b3         ;   {runtime_call}
[Exception Handler]
  0x026077b8: call   0x025fb1c0         ;   {runtime_call}
  0x026077bd: push   $0x6dab698c        ;   {external_word}
  0x026077c2: call   0x026077c7
  0x026077c7: pusha  
  0x026077c8: call   0x6d8b2a00         ;   {runtime_call}
  0x026077cd: hlt    
[Deopt Handler Code]
  0x026077ce: push   $0x26077ce         ;   {section_word}
  0x026077d3: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02607908:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'setPriority' '(I)V' in 'java/lang/Thread'
  # this:     ecx       = 'java/lang/Thread'
  # parm0:    edx       = int
  #           [sp+0x40]  (sp of caller)
  0x02607a30: nop    
  0x02607a31: nop    
  0x02607a32: nop    
  0x02607a33: nop    
  0x02607a34: nop    
  0x02607a35: nop    
  0x02607a36: nop    
  0x02607a37: cmp    0x4(%ecx),%eax
  0x02607a3a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02607a40: mov    %eax,0xffffd000(%esp)
  0x02607a47: push   %ebp
  0x02607a48: sub    $0x38,%esp         ;*aload_0
                                        ; - java.lang.Thread::setPriority@0 (line 1056)
  0x02607a4b: mov    $0x145b2858,%esi   ;   {oop('java/lang/System')}
  0x02607a50: mov    0x15c(%esi),%esi   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.Thread::checkAccess@0 (line 1304)
                                        ; - java.lang.Thread::setPriority@1 (line 1056)
  0x02607a56: cmp    $0x0,%esi
  0x02607a59: jne    0x02607a68
  0x02607a5f: mov    %ecx,0x24(%esp)
  0x02607a63: jmp    0x02607a84         ;*ifnull
                                        ; - java.lang.Thread::checkAccess@5 (line 1305)
                                        ; - java.lang.Thread::setPriority@1 (line 1056)
  0x02607a68: mov    %edx,0x20(%esp)
  0x02607a6c: cmp    (%esi),%eax        ; implicit exception: dispatches to 0x02607b25
  0x02607a6e: mov    %ecx,%edx
  0x02607a70: mov    %ecx,0x24(%esp)
  0x02607a74: mov    %esi,%ecx          ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
                                        ; - java.lang.Thread::setPriority@1 (line 1056)
  0x02607a76: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x02607a7b: call   0x025bd140         ; OopMap{[36]=Oop off=80}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
                                        ; - java.lang.Thread::setPriority@1 (line 1056)
                                        ;   {virtual_call}
  0x02607a80: mov    0x20(%esp),%edx
  0x02607a84: cmp    $0xa,%edx
  0x02607a87: jg     0x02607ac7         ;*if_icmpgt
                                        ; - java.lang.Thread::setPriority@7 (line 1057)
  0x02607a8d: cmp    $0x1,%edx
  0x02607a90: jl     0x02607ac7         ;*if_icmpge
                                        ; - java.lang.Thread::setPriority@12 (line 1057)
  0x02607a96: mov    0x24(%esp),%ecx
  0x02607a9a: mov    0x40(%ecx),%esi    ;*getfield group
                                        ; - java.lang.Thread::getThreadGroup@1 (line 1115)
                                        ; - java.lang.Thread::setPriority@24 (line 1060)
  0x02607a9d: cmp    $0x0,%esi
  0x02607aa0: je     0x02607abc         ;*ifnull
                                        ; - java.lang.Thread::setPriority@29 (line 1060)
  0x02607aa6: mov    0x8(%esi),%edi     ;*getfield maxPriority
                                        ; - java.lang.ThreadGroup::getMaxPriority@1 (line 165)
                                        ; - java.lang.Thread::setPriority@34 (line 1061)
                                        ; implicit exception: dispatches to 0x02607b2a
  0x02607aa9: cmp    %edi,%edx
  0x02607aab: jle    0x02607ab3         ;*if_icmple
                                        ; - java.lang.Thread::setPriority@37 (line 1061)
  0x02607ab1: mov    %edi,%edx          ;*istore_1
                                        ; - java.lang.Thread::setPriority@44 (line 1062)
  0x02607ab3: mov    %edx,0x28(%ecx)    ;*putfield priority
                                        ; - java.lang.Thread::setPriority@49 (line 1064)
  0x02607ab6: nop    
  0x02607ab7: call   0x025bcf40         ; OopMap{off=140}
                                        ;*invokespecial setPriority0
                                        ; - java.lang.Thread::setPriority@52 (line 1064)
                                        ;   {optimized virtual_call}
  0x02607abc: add    $0x38,%esp
  0x02607abf: pop    %ebp
  0x02607ac0: test   %eax,0x200100      ;   {poll_return}
  0x02607ac6: ret                       ;*return
                                        ; - java.lang.Thread::setPriority@55 (line 1066)
  0x02607ac7: mov    $0x146d4e88,%edx   ;   {oop('java/lang/IllegalArgumentException')}
  0x02607acc: cmpl   $0x5,0xe4(%edx)
  0x02607ad6: jne    0x02607b34         ; implicit exception: dispatches to 0x02607b2f
  0x02607adc: mov    %fs:0x0,%ecx
  0x02607ae4: mov    0xfffffff4(%ecx),%ecx
  0x02607ae7: mov    0x34(%ecx),%eax
  0x02607aea: lea    0x18(%eax),%edi
  0x02607aed: cmp    0x3c(%ecx),%edi
  0x02607af0: ja     0x02607b34
  0x02607af6: mov    %edi,0x34(%ecx)
  0x02607af9: mov    0x68(%edx),%ecx
  0x02607afc: mov    %ecx,(%eax)
  0x02607afe: mov    %edx,0x4(%eax)
  0x02607b01: xor    %ecx,%ecx
  0x02607b03: mov    %ecx,0x8(%eax)
  0x02607b06: mov    %ecx,0xc(%eax)
  0x02607b09: mov    %ecx,0x10(%eax)
  0x02607b0c: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.Thread::setPriority@15 (line 1058)
  0x02607b0f: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.Thread::setPriority@19 (line 1058)
  0x02607b11: mov    %eax,0x28(%esp)
  0x02607b15: nop    
  0x02607b16: nop    
  0x02607b17: call   0x025bcf40         ; OopMap{[40]=Oop off=236}
                                        ;*invokespecial <init>
                                        ; - java.lang.Thread::setPriority@19 (line 1058)
                                        ;   {optimized virtual_call}
  0x02607b1c: mov    0x28(%esp),%eax
  0x02607b20: jmp    0x02607b64
  0x02607b25: call   0x025fa0d0         ; OopMap{ecx=Oop esi=Oop off=250}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::checkAccess@10 (line 1306)
                                        ; - java.lang.Thread::setPriority@1 (line 1056)
                                        ;   {runtime_call}
  0x02607b2a: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop off=255}
                                        ;*invokevirtual getMaxPriority
                                        ; - java.lang.Thread::setPriority@34 (line 1061)
                                        ;   {runtime_call}
  0x02607b2f: call   0x025fa0d0         ; OopMap{off=260}
                                        ;*new  ; - java.lang.Thread::setPriority@15 (line 1058)
                                        ;   {runtime_call}
  0x02607b34: mov    %edx,%edx
  0x02607b36: call   0x025fa740         ; OopMap{off=267}
                                        ;*new  ; - java.lang.Thread::setPriority@15 (line 1058)
                                        ;   {runtime_call}
  0x02607b3b: jmp    0x02607b0f
  0x02607b3d: nop    
  0x02607b3e: nop    
  0x02607b3f: mov    %fs:0x0,%esi
  0x02607b47: mov    0xfffffff4(%esi),%esi
  0x02607b4a: mov    0x170(%esi),%eax
  0x02607b50: movl   $0x0,0x170(%esi)
  0x02607b5a: movl   $0x0,0x174(%esi)
  0x02607b64: add    $0x38,%esp
  0x02607b67: pop    %ebp
  0x02607b68: jmp    0x025f9c00         ;   {runtime_call}
  0x02607b6d: hlt    
  0x02607b6e: hlt    
  0x02607b6f: hlt    
[Stub Code]
  0x02607b70: nop                       ;   {no_reloc}
  0x02607b71: nop    
  0x02607b72: mov    $0x0,%ebx          ;   {static_stub}
  0x02607b77: jmp    0x02607b77         ;   {runtime_call}
  0x02607b7c: nop    
  0x02607b7d: nop    
  0x02607b7e: mov    $0x0,%ebx          ;   {static_stub}
  0x02607b83: jmp    0x02607b83         ;   {runtime_call}
  0x02607b88: nop    
  0x02607b89: nop    
  0x02607b8a: mov    $0x0,%ebx          ;   {static_stub}
  0x02607b8f: jmp    0x02607b8f         ;   {runtime_call}
[Exception Handler]
  0x02607b94: call   0x025fb1c0         ;   {runtime_call}
  0x02607b99: push   $0x6dab698c        ;   {external_word}
  0x02607b9e: call   0x02607ba3
  0x02607ba3: pusha  
  0x02607ba4: call   0x6d8b2a00         ;   {runtime_call}
  0x02607ba9: hlt    
[Deopt Handler Code]
  0x02607baa: push   $0x2607baa         ;   {section_word}
  0x02607baf: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02607e48:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'init' '(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V' in 'java/lang/Thread'
  # this:     ecx       = 'java/lang/Thread'
  # parm0:    edx       = 'java/lang/ThreadGroup'
  # parm1:    [sp+0x68]   = 'java/lang/Runnable'
  # parm2:    [sp+0x6c]   = 'java/lang/String'
  # parm3:    [sp+0x60]   = long  (sp of caller)
  0x02608000: nop    
  0x02608001: nop    
  0x02608002: nop    
  0x02608003: nop    
  0x02608004: nop    
  0x02608005: nop    
  0x02608006: nop    
  0x02608007: cmp    0x4(%ecx),%eax
  0x0260800a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02608010: mov    %eax,0xffffd000(%esp)
  0x02608017: push   %ebp
  0x02608018: sub    $0x58,%esp
  0x0260801b: mov    %ecx,0x30(%esp)
  0x0260801f: mov    %fs:0x0,%esi
  0x02608027: mov    0xfffffff4(%esi),%esi
  0x0260802a: mov    0x104(%esi),%esi   ;*invokestatic currentThread
                                        ; - java.lang.Thread::init@0 (line 316)
  0x02608030: mov    %esi,0x28(%esp)
  0x02608034: mov    $0x145b2858,%edi   ;   {oop('java/lang/System')}
  0x02608039: mov    0x15c(%edi),%edi
  0x0260803f: mov    %edi,0x2c(%esp)    ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.Thread::init@5 (line 317)
  0x02608043: cmp    $0x0,%edx
  0x02608046: jne    0x02608076         ;*ifnonnull
                                        ; - java.lang.Thread::init@11 (line 318)
  0x0260804c: cmp    $0x0,%edi
  0x0260804f: je     0x02608066         ;*ifnull
                                        ; - java.lang.Thread::init@16 (line 323)
  0x02608055: cmp    (%edi),%eax        ; implicit exception: dispatches to 0x0260849b
  0x02608057: mov    %edi,%ecx          ;*invokevirtual getThreadGroup
                                        ; - java.lang.Thread::init@21 (line 324)
  0x02608059: nop    
  0x0260805a: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260805f: call   0x025bd140         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [48]=Oop [40]=Oop off=100}
                                        ;*invokevirtual getThreadGroup
                                        ; - java.lang.Thread::init@21 (line 324)
                                        ;   {virtual_call}
  0x02608064: mov    %eax,%edx          ;*astore_1
                                        ; - java.lang.Thread::init@24 (line 324)
  0x02608066: cmp    $0x0,%edx
  0x02608069: mov    0x28(%esp),%esi
  0x0260806d: jne    0x02608076         ;*ifnonnull
                                        ; - java.lang.Thread::init@26 (line 329)
  0x02608073: mov    0x40(%esi),%edx    ;*getfield group
                                        ; - java.lang.Thread::getThreadGroup@1 (line 1115)
                                        ; - java.lang.Thread::init@31 (line 330)
                                        ; implicit exception: dispatches to 0x026084a0
  0x02608076: cmp    (%edx),%eax        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::init@36 (line 336)
                                        ; implicit exception: dispatches to 0x026084a5
  0x02608078: mov    $0x145b2858,%ecx   ;   {oop('java/lang/System')}
  0x0260807d: mov    0x15c(%ecx),%ecx   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.ThreadGroup::checkAccess@0 (line 297)
                                        ; - java.lang.Thread::init@36 (line 336)
  0x02608083: cmp    $0x0,%ecx
  0x02608086: jne    0x02608095
  0x0260808c: mov    %edx,0x34(%esp)
  0x02608090: jmp    0x026080ac         ;*ifnull
                                        ; - java.lang.ThreadGroup::checkAccess@5 (line 298)
                                        ; - java.lang.Thread::init@36 (line 336)
  0x02608095: cmp    (%ecx),%eax        ; implicit exception: dispatches to 0x026084aa
  0x02608097: mov    %edx,%edi
  0x02608099: mov    %edi,%edx          ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
                                        ; - java.lang.Thread::init@36 (line 336)
  0x0260809b: mov    %edi,0x34(%esp)
  0x0260809f: nop    
  0x026080a0: nop    
  0x026080a1: nop    
  0x026080a2: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x026080a7: call   0x025bd140         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [48]=Oop [40]=Oop [52]=Oop off=172}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
                                        ; - java.lang.Thread::init@36 (line 336)
                                        ;   {virtual_call}
  0x026080ac: mov    0x2c(%esp),%edi
  0x026080b0: cmp    $0x0,%edi
  0x026080b3: je     0x026080f4         ;*ifnull
                                        ; - java.lang.Thread::init@41 (line 341)
  0x026080b9: mov    0x30(%esp),%ecx
  0x026080bd: mov    0x4(%ecx),%esi     ; implicit exception: dispatches to 0x026084af
  0x026080c0: mov    0x3c(%esi),%esi    ;*invokevirtual getClass
                                        ; - java.lang.Thread::init@45 (line 342)
  0x026080c3: mov    %esi,%ecx          ;*invokestatic isCCLOverridden
                                        ; - java.lang.Thread::init@48 (line 342)
  0x026080c5: nop    
  0x026080c6: nop    
  0x026080c7: call   0x025bd340         ; OopMap{[104]=Oop [108]=Oop [40]=Oop [52]=Oop [48]=Oop [44]=Oop off=204}
                                        ;*invokestatic isCCLOverridden
                                        ; - java.lang.Thread::init@48 (line 342)
                                        ;   {static_call}
  0x026080cc: cmp    $0x0,%eax
  0x026080cf: je     0x026080f4         ;*ifeq
                                        ; - java.lang.Thread::init@51 (line 342)
  0x026080d5: mov    0x2c(%esp),%edi
  0x026080d9: mov    $0x145c3688,%edx   ;   {oop('java/lang/Thread')}
  0x026080de: mov    0x1c4(%edx),%edx   ;*getstatic SUBCLASS_IMPLEMENTATION_PERMISSION
                                        ; - java.lang.Thread::init@56 (line 343)
  0x026080e4: cmp    (%edi),%eax        ; implicit exception: dispatches to 0x026084b4
  0x026080e6: mov    %edi,%ecx          ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::init@59 (line 343)
  0x026080e8: nop    
  0x026080e9: nop    
  0x026080ea: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x026080ef: call   0x025bd140         ; OopMap{[104]=Oop [108]=Oop [40]=Oop [52]=Oop [48]=Oop [44]=Oop off=244}
                                        ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::init@59 (line 343)
                                        ;   {virtual_call}
  0x026080f4: mov    0x34(%esp),%edx
  0x026080f8: mov    %edx,%ecx          ;*invokevirtual addUnstarted
                                        ; - java.lang.Thread::init@63 (line 348)
  0x026080fa: mov    %edx,0x34(%esp)
  0x026080fe: nop    
  0x026080ff: call   0x025bcf40         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [40]=Oop [48]=Oop [52]=Oop off=260}
                                        ;*invokevirtual addUnstarted
                                        ; - java.lang.Thread::init@63 (line 348)
                                        ;   {optimized virtual_call}
  0x02608104: mov    0x30(%esp),%ecx
  0x02608108: mov    0x34(%esp),%edx
  0x0260810c: mov    %edx,0x40(%ecx)
  0x0260810f: mov    %ecx,%ebx
  0x02608111: shr    $0x9,%ebx
  0x02608114: movb   $0x0,0x1856d380(%ebx)  ;*putfield group
                                        ; - java.lang.Thread::init@68 (line 350)
  0x0260811b: mov    0x28(%esp),%esi
  0x0260811f: movsbl 0x31(%esi),%ebx    ;*getfield daemon
                                        ; - java.lang.Thread::isDaemon@1 (line 1288)
                                        ; - java.lang.Thread::init@74 (line 351)
                                        ; implicit exception: dispatches to 0x026084b9
  0x02608123: mov    %bl,0x31(%ecx)     ;*putfield daemon
                                        ; - java.lang.Thread::init@77 (line 351)
  0x02608126: mov    0x28(%esi),%ebx    ;*getfield priority
                                        ; - java.lang.Thread::getPriority@1 (line 1075)
                                        ; - java.lang.Thread::init@83 (line 352)
  0x02608129: mov    %ebx,0x28(%ecx)    ;*putfield priority
                                        ; - java.lang.Thread::init@86 (line 352)
  0x0260812c: mov    0x6c(%esp),%edi
  0x02608130: mov    0x10(%edi),%eax    ;*getfield count
                                        ; - java.lang.String::toCharArray@1 (line 2725)
                                        ; - java.lang.Thread::init@91 (line 353)
                                        ; implicit exception: dispatches to 0x026084be
  0x02608133: mov    %eax,%ebx
  0x02608135: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x0260813a: mov    %eax,0x38(%esp)
  0x0260813e: mov    %ebx,%edi
  0x02608140: cmp    $0xffffff,%ebx
  0x02608146: ja     0x026084c3
  0x0260814c: mov    $0x13,%esi
  0x02608151: lea    (%esi,%ebx,2),%esi
  0x02608154: and    $0xfffffff8,%esi
  0x02608157: mov    %fs:0x0,%ecx
  0x0260815f: mov    0xfffffff4(%ecx),%ecx
  0x02608162: mov    0x34(%ecx),%eax
  0x02608165: lea    (%eax,%esi,1),%esi
  0x02608168: cmp    0x3c(%ecx),%esi
  0x0260816b: ja     0x026084c3
  0x02608171: mov    %esi,0x34(%ecx)
  0x02608174: sub    %eax,%esi
  0x02608176: movl   $0x1,(%eax)
  0x0260817c: mov    %edx,0x4(%eax)
  0x0260817f: mov    %ebx,0x8(%eax)
  0x02608182: sub    $0xc,%esi
  0x02608185: je     0x026081ab
  0x0260818b: xor    %ebx,%ebx
  0x0260818d: shr    $0x3,%esi
  0x02608190: jae    0x026081a0
  0x02608196: mov    %ebx,0xc(%eax,%esi,8)
  0x0260819a: je     0x026081ab
  0x026081a0: mov    %ebx,0x8(%eax,%esi,8)
  0x026081a4: mov    %ebx,0x4(%eax,%esi,8)
  0x026081a8: dec    %esi
  0x026081a9: jne    0x026081a0         ;*newarray
                                        ; - java.lang.String::toCharArray@4 (line 2725)
                                        ; - java.lang.Thread::init@91 (line 353)
  0x026081ab: mov    $0x0,%edx
  0x026081b0: mov    0x38(%esp),%ecx
  0x026081b4: mov    %ecx,(%esp)
  0x026081b7: mov    %eax,0x4(%esp)
  0x026081bb: movl   $0x0,0x8(%esp)
  0x026081c3: mov    0x6c(%esp),%ecx    ;*invokevirtual getChars
                                        ; - java.lang.String::toCharArray@15 (line 2726)
                                        ; - java.lang.Thread::init@91 (line 353)
  0x026081c7: mov    %eax,0x3c(%esp)
  0x026081cb: call   0x025bcf40         ; OopMap{[104]=Oop [44]=Oop [48]=Oop [40]=Oop [60]=Oop off=464}
                                        ;*invokevirtual getChars
                                        ; - java.lang.String::toCharArray@15 (line 2726)
                                        ; - java.lang.Thread::init@91 (line 353)
                                        ;   {optimized virtual_call}
  0x026081d0: mov    0x30(%esp),%ecx
  0x026081d4: mov    0x3c(%esp),%eax
  0x026081d8: mov    %eax,0x34(%ecx)
  0x026081db: mov    %ecx,%esi
  0x026081dd: shr    $0x9,%esi
  0x026081e0: movb   $0x0,0x1856d380(%esi)  ;*putfield name
                                        ; - java.lang.Thread::init@94 (line 353)
  0x026081e7: mov    0x2c(%esp),%edi
  0x026081eb: cmp    $0x0,%edi
  0x026081ee: je     0x02608211         ;*ifnull
                                        ; - java.lang.Thread::init@99 (line 354)
  0x026081f4: mov    0x28(%esp),%esi
  0x026081f8: mov    0x4(%esi),%edi     ; implicit exception: dispatches to 0x026084cd
  0x026081fb: mov    0x3c(%edi),%edi    ;*invokevirtual getClass
                                        ; - java.lang.Thread::init@104 (line 354)
  0x026081fe: mov    %edi,%ecx          ;*invokestatic isCCLOverridden
                                        ; - java.lang.Thread::init@107 (line 354)
  0x02608200: nop    
  0x02608201: nop    
  0x02608202: nop    
  0x02608203: call   0x025bd340         ; OopMap{[104]=Oop [40]=Oop [48]=Oop off=520}
                                        ;*invokestatic isCCLOverridden
                                        ; - java.lang.Thread::init@107 (line 354)
                                        ;   {static_call}
  0x02608208: cmp    $0x0,%eax
  0x0260820b: je     0x02608234         ;*ifeq
                                        ; - java.lang.Thread::init@110 (line 354)
  0x02608211: mov    0x28(%esp),%ecx    ;*invokevirtual getContextClassLoader
                                        ; - java.lang.Thread::init@116 (line 355)
  0x02608215: nop    
  0x02608216: nop    
  0x02608217: call   0x025bcf40         ; OopMap{[104]=Oop [40]=Oop [48]=Oop off=540}
                                        ;*invokevirtual getContextClassLoader
                                        ; - java.lang.Thread::init@116 (line 355)
                                        ;   {optimized virtual_call}
  0x0260821c: mov    0x30(%esp),%ecx
  0x02608220: mov    %eax,0x44(%ecx)
  0x02608223: mov    %ecx,%esi
  0x02608225: shr    $0x9,%esi
  0x02608228: movb   $0x0,0x1856d380(%esi)  ;*putfield contextClassLoader
                                        ; - java.lang.Thread::init@119 (line 355)
  0x0260822f: jmp    0x0260824e         ;*goto
                                        ; - java.lang.Thread::init@122 (line 355)
  0x02608234: mov    0x28(%esp),%esi
  0x02608238: mov    0x30(%esp),%ecx
  0x0260823c: mov    0x44(%esi),%edi    ;*getfield contextClassLoader
                                        ; - java.lang.Thread::init@128 (line 357)
  0x0260823f: mov    %edi,0x44(%ecx)
  0x02608242: mov    %ecx,%edi
  0x02608244: shr    $0x9,%edi
  0x02608247: movb   $0x0,0x1856d380(%edi)  ;*putfield contextClassLoader
                                        ; - java.lang.Thread::init@131 (line 357)
  0x0260824e: nop    
  0x0260824f: call   0x025bd340         ; OopMap{[104]=Oop [40]=Oop [48]=Oop off=596}
                                        ;*invokestatic getStackAccessControlContext
                                        ; - java.security.AccessController::getContext@0 (line 484)
                                        ; - java.lang.Thread::init@135 (line 358)
                                        ;   {static_call}
  0x02608254: cmp    $0x0,%eax
  0x02608257: jne    0x0260829e         ;*ifnonnull
                                        ; - java.security.AccessController::getContext@5 (line 485)
                                        ; - java.lang.Thread::init@135 (line 358)
  0x0260825d: mov    $0x145b8cf0,%edx   ;   {oop('java/security/AccessControlContext')}
  0x02608262: mov    %fs:0x0,%ecx
  0x0260826a: mov    0xfffffff4(%ecx),%ecx
  0x0260826d: mov    0x34(%ecx),%eax
  0x02608270: lea    0x18(%eax),%edi
  0x02608273: cmp    0x3c(%ecx),%edi
  0x02608276: ja     0x026084d2
  0x0260827c: mov    %edi,0x34(%ecx)
  0x0260827f: mov    0x68(%edx),%ecx
  0x02608282: mov    %ecx,(%eax)
  0x02608284: mov    %edx,0x4(%eax)
  0x02608287: xor    %ecx,%ecx
  0x02608289: mov    %ecx,0x8(%eax)
  0x0260828c: mov    %ecx,0xc(%eax)
  0x0260828f: mov    %ecx,0x10(%eax)
  0x02608292: mov    %ecx,0x14(%eax)    ;*new  ; - java.security.AccessController::getContext@8 (line 488)
                                        ; - java.lang.Thread::init@135 (line 358)
  0x02608295: movb   $0x1,0x8(%eax)     ;*putfield isPrivileged
                                        ; - java.security.AccessControlContext::<init>@16 (line 174)
                                        ; - java.security.AccessController::getContext@14 (line 488)
                                        ; - java.lang.Thread::init@135 (line 358)
  0x02608299: jmp    0x026082a8         ;*putfield inheritedAccessControlContext
                                        ; - java.lang.Thread::init@138 (line 358)
  0x0260829e: cmp    (%eax),%eax        ; implicit exception: dispatches to 0x026084de
  0x026082a0: mov    %eax,%ecx          ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
                                        ; - java.lang.Thread::init@135 (line 358)
  0x026082a2: nop    
  0x026082a3: call   0x025bcf40         ; OopMap{[104]=Oop [40]=Oop [48]=Oop off=680}
                                        ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
                                        ; - java.lang.Thread::init@135 (line 358)
                                        ;   {optimized virtual_call}
  0x026082a8: mov    0x68(%esp),%edx
  0x026082ac: mov    0x30(%esp),%ecx
  0x026082b0: mov    %eax,0x48(%ecx)
  0x026082b3: mov    %ecx,%edi
  0x026082b5: shr    $0x9,%edi
  0x026082b8: movb   $0x0,0x1856d380(%edi)  ;*putfield inheritedAccessControlContext
                                        ; - java.lang.Thread::init@138 (line 358)
  0x026082bf: mov    %edx,0x3c(%ecx)
  0x026082c2: mov    %ecx,%edx
  0x026082c4: shr    $0x9,%edx
  0x026082c7: movb   $0x0,0x1856d380(%edx)  ;*putfield target
                                        ; - java.lang.Thread::init@143 (line 359)
  0x026082ce: mov    0x28(%ecx),%edx    ;*getfield priority
                                        ; - java.lang.Thread::init@148 (line 360)
  0x026082d1: mov    %ecx,%edi
  0x026082d3: mov    %edi,%ecx          ;*invokevirtual setPriority
                                        ; - java.lang.Thread::init@151 (line 360)
  0x026082d5: nop    
  0x026082d6: nop    
  0x026082d7: call   0x025bcf40         ; OopMap{[48]=Oop [40]=Oop off=732}
                                        ;*invokevirtual setPriority
                                        ; - java.lang.Thread::init@151 (line 360)
                                        ;   {optimized virtual_call}
  0x026082dc: mov    0x28(%esp),%esi
  0x026082e0: mov    0x50(%esi),%ebx    ;*getfield inheritableThreadLocals
                                        ; - java.lang.Thread::init@156 (line 361)
  0x026082e3: cmp    $0x0,%ebx
  0x026082e6: jne    0x026082fd
  0x026082ec: mov    0x60(%esp),%esi
  0x026082f0: mov    0x64(%esp),%eax
  0x026082f4: mov    0x30(%esp),%ecx
  0x026082f8: jmp    0x02608363         ;*ifnull
                                        ; - java.lang.Thread::init@159 (line 361)
  0x026082fd: mov    $0x146668c8,%edx   ;   {oop('java/lang/ThreadLocal$ThreadLocalMap')}
  0x02608302: mov    %fs:0x0,%ecx
  0x0260830a: mov    0xfffffff4(%ecx),%ecx
  0x0260830d: mov    0x34(%ecx),%eax
  0x02608310: lea    0x18(%eax),%edi
  0x02608313: cmp    0x3c(%ecx),%edi
  0x02608316: ja     0x026084e3
  0x0260831c: mov    %edi,0x34(%ecx)
  0x0260831f: mov    0x68(%edx),%ecx
  0x02608322: mov    %ecx,(%eax)
  0x02608324: mov    %edx,0x4(%eax)
  0x02608327: xor    %ecx,%ecx
  0x02608329: mov    %ecx,0x8(%eax)
  0x0260832c: mov    %ecx,0xc(%eax)
  0x0260832f: mov    %ecx,0x10(%eax)
  0x02608332: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.ThreadLocal::createInheritedMap@0 (line 217)
                                        ; - java.lang.Thread::init@168 (line 362)
  0x02608335: mov    %ebx,%edx
  0x02608337: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.ThreadLocal$ThreadLocalMap::<init>@2 (line 242)
                                        ; - java.lang.ThreadLocal::createInheritedMap@6 (line 217)
                                        ; - java.lang.Thread::init@168 (line 362)
  0x02608339: mov    %eax,0x40(%esp)
  0x0260833d: nop    
  0x0260833e: nop    
  0x0260833f: call   0x025bcf40         ; OopMap{[48]=Oop [64]=Oop off=836}
                                        ;*invokespecial <init>
                                        ; - java.lang.ThreadLocal$ThreadLocalMap::<init>@2 (line 242)
                                        ; - java.lang.ThreadLocal::createInheritedMap@6 (line 217)
                                        ; - java.lang.Thread::init@168 (line 362)
                                        ;   {optimized virtual_call}
  0x02608344: mov    0x30(%esp),%ecx
  0x02608348: mov    0x40(%esp),%eax
  0x0260834c: mov    %eax,0x50(%ecx)
  0x0260834f: mov    %ecx,%eax
  0x02608351: shr    $0x9,%eax
  0x02608354: movb   $0x0,0x1856d380(%eax)  ;*putfield inheritableThreadLocals
                                        ; - java.lang.Thread::init@171 (line 362)
  0x0260835b: mov    0x60(%esp),%esi
  0x0260835f: mov    0x64(%esp),%eax
  0x02608363: mov    %esi,0x10(%ecx)
  0x02608366: mov    %eax,0x14(%ecx)    ;*putfield stackSize
                                        ; - java.lang.Thread::init@177 (line 365)
  0x02608369: mov    $0x145c3878,%esi   ;   {oop(a 'java/lang/Class' = 'java/lang/Thread')}
  0x0260836e: lea    0x44(%esp),%edi
  0x02608372: mov    %esi,0x4(%edi)
  0x02608375: mov    (%esi),%eax        ; implicit exception: dispatches to 0x026084ef
  0x02608377: mov    %eax,%ebx
  0x02608379: and    $0x7,%ebx
  0x0260837c: cmp    $0x5,%ebx
  0x0260837f: jne    0x0260840b
  0x02608385: mov    %eax,(%edi)
  0x02608387: mov    %fs:0x0,%ebx
  0x0260838f: mov    0xfffffff4(%ebx),%ebx
  0x02608392: xor    %ebx,%eax
  0x02608394: mov    0x4(%esi),%ebx
  0x02608397: xor    0x68(%ebx),%eax
  0x0260839a: and    $0xffffff87,%eax
  0x0260839d: je     0x0260842c
  0x026083a3: test   $0x7,%eax
  0x026083a8: jne    0x026083ff
  0x026083ae: test   $0x180,%eax
  0x026083b3: jne    0x026083dd
  0x026083b9: mov    (%edi),%eax
  0x026083bb: and    $0x1ff,%eax
  0x026083c1: mov    %fs:0x0,%ebx
  0x026083c9: mov    0xfffffff4(%ebx),%ebx
  0x026083cc: or     %eax,%ebx
  0x026083ce: lock cmpxchg %ebx,(%esi)
  0x026083d2: jne    0x026084f4
  0x026083d8: jmp    0x0260842c
  0x026083dd: mov    %fs:0x0,%ebx
  0x026083e5: mov    0xfffffff4(%ebx),%ebx
  0x026083e8: mov    0x4(%esi),%eax
  0x026083eb: or     0x68(%eax),%ebx
  0x026083ee: mov    (%edi),%eax
  0x026083f0: lock cmpxchg %ebx,(%esi)
  0x026083f4: jne    0x026084f4
  0x026083fa: jmp    0x0260842c
  0x026083ff: mov    (%edi),%eax
  0x02608401: mov    0x4(%esi),%ebx
  0x02608404: mov    0x68(%ebx),%ebx
  0x02608407: lock cmpxchg %ebx,(%esi)
  0x0260840b: mov    (%esi),%eax
  0x0260840d: or     $0x1,%eax
  0x02608410: mov    %eax,(%edi)
  0x02608412: lock cmpxchg %edi,(%esi)
  0x02608416: je     0x0260842c
  0x0260841c: sub    %esp,%eax
  0x0260841e: and    $0xfffff003,%eax
  0x02608424: mov    %eax,(%edi)
  0x02608426: jne    0x026084f4         ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadID@-1 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
  0x0260842c: mov    $0x145c3688,%eax   ;   {oop('java/lang/Thread')}
  0x02608431: mov    0x1d0(%eax),%esi
  0x02608437: mov    0x1d4(%eax),%edi   ;*getstatic threadSeqNumber
                                        ; - java.lang.Thread::nextThreadID@0 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
  0x0260843d: add    $0x1,%esi
  0x02608440: adc    $0x0,%edi
  0x02608443: mov    %esi,0x1d0(%eax)
  0x02608449: mov    %edi,0x1d4(%eax)   ;*putstatic threadSeqNumber
                                        ; - java.lang.Thread::nextThreadID@6 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
  0x0260844f: lea    0x44(%esp),%eax
  0x02608453: mov    0x4(%eax),%edx
  0x02608456: mov    (%edx),%ebx
  0x02608458: and    $0x7,%ebx
  0x0260845b: cmp    $0x5,%ebx
  0x0260845e: je     0x02608478
  0x02608464: mov    (%eax),%ebx
  0x02608466: test   %ebx,%ebx
  0x02608468: je     0x02608478
  0x0260846e: lock cmpxchg %ebx,(%edx)
  0x02608472: jne    0x02608505         ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadID@-1 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
  0x02608478: mov    %esi,0x20(%ecx)
  0x0260847b: mov    %edi,0x24(%ecx)
  0x0260847e: mov    %ecx,0x64(%ecx)
  0x02608481: shr    $0x9,%ecx
  0x02608484: movb   $0x0,0x1856d380(%ecx)
  0x0260848b: lock addl $0x0,(%esp)     ;*putfield me
                                        ; - java.lang.Thread::init@189 (line 370)
  0x02608490: add    $0x58,%esp
  0x02608493: pop    %ebp
  0x02608494: test   %eax,0x200100      ;   {poll_return}
  0x0260849a: ret    
  0x0260849b: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop edi=Oop [44]=Oop [48]=Oop [40]=Oop off=1184}
                                        ;*invokevirtual getThreadGroup
                                        ; - java.lang.Thread::init@21 (line 324)
                                        ;   {runtime_call}
  0x026084a0: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [48]=Oop esi=Oop [40]=Oop off=1189}
                                        ;*invokevirtual getThreadGroup
                                        ; - java.lang.Thread::init@31 (line 330)
                                        ;   {runtime_call}
  0x026084a5: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [48]=Oop esi=Oop [40]=Oop edx=Oop off=1194}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.Thread::init@36 (line 336)
                                        ;   {runtime_call}
  0x026084aa: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [44]=Oop [48]=Oop edx=Oop [40]=Oop ecx=Oop off=1199}
                                        ;*invokevirtual checkAccess
                                        ; - java.lang.ThreadGroup::checkAccess@10 (line 299)
                                        ; - java.lang.Thread::init@36 (line 336)
                                        ;   {runtime_call}
  0x026084af: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [40]=Oop [52]=Oop ecx=Oop [48]=Oop [44]=Oop off=1204}
                                        ;*invokevirtual getClass
                                        ; - java.lang.Thread::init@45 (line 342)
                                        ;   {runtime_call}
  0x026084b4: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [40]=Oop [52]=Oop [48]=Oop edi=Oop [44]=Oop edx=Oop off=1209}
                                        ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::init@59 (line 343)
                                        ;   {runtime_call}
  0x026084b9: call   0x025fa0d0         ; OopMap{[104]=Oop [108]=Oop [44]=Oop ecx=Oop [48]=Oop esi=Oop [40]=Oop off=1214}
                                        ;*invokevirtual isDaemon
                                        ; - java.lang.Thread::init@74 (line 351)
                                        ;   {runtime_call}
  0x026084be: call   0x025fa0d0         ; OopMap{[104]=Oop [44]=Oop ecx=Oop [48]=Oop esi=Oop [40]=Oop edi=Oop [108]=Oop off=1219}
                                        ;*invokevirtual toCharArray
                                        ; - java.lang.Thread::init@91 (line 353)
                                        ;   {runtime_call}
  0x026084c3: call   0x025faa40         ; OopMap{[104]=Oop [44]=Oop [48]=Oop [108]=Oop [40]=Oop off=1224}
                                        ;*newarray
                                        ; - java.lang.String::toCharArray@4 (line 2725)
                                        ; - java.lang.Thread::init@91 (line 353)
                                        ;   {runtime_call}
  0x026084c8: jmp    0x026081ab
  0x026084cd: call   0x025fa0d0         ; OopMap{[104]=Oop [48]=Oop esi=Oop [40]=Oop off=1234}
                                        ;*invokevirtual getClass
                                        ; - java.lang.Thread::init@104 (line 354)
                                        ;   {runtime_call}
  0x026084d2: mov    %edx,%edx
  0x026084d4: call   0x025fa480         ; OopMap{[104]=Oop [40]=Oop [48]=Oop off=1241}
                                        ;*new  ; - java.security.AccessController::getContext@8 (line 488)
                                        ; - java.lang.Thread::init@135 (line 358)
                                        ;   {runtime_call}
  0x026084d9: jmp    0x02608295
  0x026084de: call   0x025fa0d0         ; OopMap{[104]=Oop [40]=Oop [48]=Oop eax=Oop off=1251}
                                        ;*invokevirtual optimize
                                        ; - java.security.AccessController::getContext@19 (line 490)
                                        ; - java.lang.Thread::init@135 (line 358)
                                        ;   {runtime_call}
  0x026084e3: mov    %edx,%edx
  0x026084e5: call   0x025fa480         ; OopMap{ebx=Oop [48]=Oop off=1258}
                                        ;*new  ; - java.lang.ThreadLocal::createInheritedMap@0 (line 217)
                                        ; - java.lang.Thread::init@168 (line 362)
                                        ;   {runtime_call}
  0x026084ea: jmp    0x02608335
  0x026084ef: call   0x025fa0d0         ; OopMap{ecx=Oop [48]=Oop esi=Oop off=1268}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadID@-1 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
                                        ;   {runtime_call}
  0x026084f4: mov    %esi,0x4(%esp)
  0x026084f8: mov    %edi,(%esp)
  0x026084fb: call   0x025fb8c0         ; OopMap{ecx=Oop [48]=Oop esi=Oop [72]=Oop off=1280}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadID@-1 (line 192)
                                        ; - java.lang.Thread::init@181 (line 368)
                                        ;   {runtime_call}
  0x02608500: jmp    0x0260842c
  0x02608505: lea    0x44(%esp),%eax
  0x02608509: mov    %eax,(%esp)
  0x0260850c: call   0x025fbac0         ;   {runtime_call}
  0x02608511: jmp    0x02608478
  0x02608516: nop    
  0x02608517: nop    
  0x02608518: mov    %fs:0x0,%esi
  0x02608520: mov    0xfffffff4(%esi),%esi
  0x02608523: mov    0x170(%esi),%eax
  0x02608529: movl   $0x0,0x170(%esi)
  0x02608533: movl   $0x0,0x174(%esi)
  0x0260853d: add    $0x58,%esp
  0x02608540: pop    %ebp
  0x02608541: jmp    0x025f9c00         ;   {runtime_call}
  0x02608546: hlt    
  0x02608547: hlt    
  0x02608548: hlt    
  0x02608549: hlt    
  0x0260854a: hlt    
  0x0260854b: hlt    
  0x0260854c: hlt    
  0x0260854d: hlt    
  0x0260854e: hlt    
  0x0260854f: hlt    
[Stub Code]
  0x02608550: nop                       ;   {no_reloc}
  0x02608551: nop    
  0x02608552: mov    $0x0,%ebx          ;   {static_stub}
  0x02608557: jmp    0x02608557         ;   {runtime_call}
  0x0260855c: nop    
  0x0260855d: nop    
  0x0260855e: mov    $0x0,%ebx          ;   {static_stub}
  0x02608563: jmp    0x02608563         ;   {runtime_call}
  0x02608568: nop    
  0x02608569: nop    
  0x0260856a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260856f: jmp    0x0260856f         ;   {runtime_call}
  0x02608574: nop    
  0x02608575: nop    
  0x02608576: mov    $0x0,%ebx          ;   {static_stub}
  0x0260857b: jmp    0x0260857b         ;   {runtime_call}
  0x02608580: nop    
  0x02608581: nop    
  0x02608582: mov    $0x0,%ebx          ;   {static_stub}
  0x02608587: jmp    0x02608587         ;   {runtime_call}
  0x0260858c: nop    
  0x0260858d: nop    
  0x0260858e: mov    $0x0,%ebx          ;   {static_stub}
  0x02608593: jmp    0x02608593         ;   {runtime_call}
  0x02608598: nop    
  0x02608599: nop    
  0x0260859a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260859f: jmp    0x0260859f         ;   {runtime_call}
  0x026085a4: nop    
  0x026085a5: nop    
  0x026085a6: mov    $0x0,%ebx          ;   {static_stub}
  0x026085ab: jmp    0x026085ab         ;   {runtime_call}
  0x026085b0: nop    
  0x026085b1: nop    
  0x026085b2: mov    $0x0,%ebx          ;   {static_stub}
  0x026085b7: jmp    0x026085b7         ;   {runtime_call}
  0x026085bc: nop    
  0x026085bd: nop    
  0x026085be: mov    $0x0,%ebx          ;   {static_stub}
  0x026085c3: jmp    0x026085c3         ;   {runtime_call}
  0x026085c8: nop    
  0x026085c9: nop    
  0x026085ca: mov    $0x0,%ebx          ;   {static_stub}
  0x026085cf: jmp    0x026085cf         ;   {runtime_call}
  0x026085d4: nop    
  0x026085d5: nop    
  0x026085d6: mov    $0x0,%ebx          ;   {static_stub}
  0x026085db: jmp    0x026085db         ;   {runtime_call}
[Exception Handler]
  0x026085e0: call   0x025fb1c0         ;   {runtime_call}
  0x026085e5: push   $0x6dab698c        ;   {external_word}
  0x026085ea: call   0x026085ef
  0x026085ef: pusha  
  0x026085f0: call   0x6d8b2a00         ;   {runtime_call}
  0x026085f5: hlt    
[Deopt Handler Code]
  0x026085f6: push   $0x26085f6         ;   {section_word}
  0x026085fb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02609088:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'addUnstarted' '()V' in 'java/lang/ThreadGroup'
  #           [sp+0x30]  (sp of caller)
  0x026091a0: nop    
  0x026091a1: nop    
  0x026091a2: nop    
  0x026091a3: nop    
  0x026091a4: nop    
  0x026091a5: nop    
  0x026091a6: nop    
  0x026091a7: cmp    0x4(%ecx),%eax
  0x026091aa: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x026091b0: mov    %eax,0xffffd000(%esp)
  0x026091b7: push   %ebp
  0x026091b8: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.ThreadGroup::addUnstarted@0 (line 841)
  0x026091bb: lea    0x18(%esp),%edx
  0x026091bf: mov    %ecx,0x4(%edx)
  0x026091c2: mov    (%ecx),%eax
  0x026091c4: mov    %eax,%esi
  0x026091c6: and    $0x7,%esi
  0x026091c9: cmp    $0x5,%esi
  0x026091cc: jne    0x02609258
  0x026091d2: mov    %eax,(%edx)
  0x026091d4: mov    %fs:0x0,%esi
  0x026091dc: mov    0xfffffff4(%esi),%esi
  0x026091df: xor    %esi,%eax
  0x026091e1: mov    0x4(%ecx),%esi
  0x026091e4: xor    0x68(%esi),%eax
  0x026091e7: and    $0xffffff87,%eax
  0x026091ea: je     0x02609279
  0x026091f0: test   $0x7,%eax
  0x026091f5: jne    0x0260924c
  0x026091fb: test   $0x180,%eax
  0x02609200: jne    0x0260922a
  0x02609206: mov    (%edx),%eax
  0x02609208: and    $0x1ff,%eax
  0x0260920e: mov    %fs:0x0,%esi
  0x02609216: mov    0xfffffff4(%esi),%esi
  0x02609219: or     %eax,%esi
  0x0260921b: lock cmpxchg %esi,(%ecx)
  0x0260921f: jne    0x02609346
  0x02609225: jmp    0x02609279
  0x0260922a: mov    %fs:0x0,%esi
  0x02609232: mov    0xfffffff4(%esi),%esi
  0x02609235: mov    0x4(%ecx),%eax
  0x02609238: or     0x68(%eax),%esi
  0x0260923b: mov    (%edx),%eax
  0x0260923d: lock cmpxchg %esi,(%ecx)
  0x02609241: jne    0x02609346
  0x02609247: jmp    0x02609279
  0x0260924c: mov    (%edx),%eax
  0x0260924e: mov    0x4(%ecx),%esi
  0x02609251: mov    0x68(%esi),%esi
  0x02609254: lock cmpxchg %esi,(%ecx)
  0x02609258: mov    (%ecx),%eax
  0x0260925a: or     $0x1,%eax
  0x0260925d: mov    %eax,(%edx)
  0x0260925f: lock cmpxchg %edx,(%ecx)
  0x02609263: je     0x02609279
  0x02609269: sub    %esp,%eax
  0x0260926b: and    $0xfffff003,%eax
  0x02609271: mov    %eax,(%edx)
  0x02609273: jne    0x02609346         ;*monitorenter
                                        ; - java.lang.ThreadGroup::addUnstarted@3 (line 841)
  0x02609279: movsbl 0x18(%ecx),%eax    ;*getfield destroyed
                                        ; - java.lang.ThreadGroup::addUnstarted@5 (line 842)
  0x0260927d: cmp    $0x0,%eax
  0x02609280: jne    0x026092c1         ;*ifeq
                                        ; - java.lang.ThreadGroup::addUnstarted@8 (line 842)
  0x02609286: mov    0xc(%ecx),%eax     ;*getfield nUnstartedThreads
                                        ; - java.lang.ThreadGroup::addUnstarted@21 (line 845)
  0x02609289: inc    %eax
  0x0260928a: mov    %eax,0xc(%ecx)     ;*putfield nUnstartedThreads
                                        ; - java.lang.ThreadGroup::addUnstarted@26 (line 845)
  0x0260928d: lea    0x18(%esp),%eax
  0x02609291: mov    0x4(%eax),%ecx
  0x02609294: mov    (%ecx),%edx
  0x02609296: and    $0x7,%edx
  0x02609299: cmp    $0x5,%edx
  0x0260929c: je     0x026092b6
  0x026092a2: mov    (%eax),%edx
  0x026092a4: test   %edx,%edx
  0x026092a6: je     0x026092b6
  0x026092ac: lock cmpxchg %edx,(%ecx)
  0x026092b0: jne    0x02609357         ;*monitorexit
                                        ; - java.lang.ThreadGroup::addUnstarted@30 (line 846)
  0x026092b6: add    $0x28,%esp
  0x026092b9: pop    %ebp
  0x026092ba: test   %eax,0x200100      ;   {poll_return}
  0x026092c0: ret                       ;*return
                                        ; - java.lang.ThreadGroup::addUnstarted@39 (line 847)
  0x026092c1: mov    %ecx,0x14(%esp)
  0x026092c5: xchg   %ax,%ax
  0x026092c8: jmp    0x02609390         ;   {no_reloc}
  0x026092cd: jmp    0x0260939a         ;*new  ; - java.lang.ThreadGroup::addUnstarted@11 (line 843)
  0x026092d2: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.ThreadGroup::addUnstarted@15 (line 843)
  0x026092d4: mov    %eax,0x10(%esp)
  0x026092d8: nop    
  0x026092d9: nop    
  0x026092da: nop    
  0x026092db: call   0x025bcf40         ; OopMap{[16]=Oop [20]=Oop [28]=Oop off=320}
                                        ;*invokespecial <init>
                                        ; - java.lang.ThreadGroup::addUnstarted@15 (line 843)
                                        ;   {optimized virtual_call}
  0x026092e0: mov    0x10(%esp),%eax    ; OopMap{[20]=Oop [28]=Oop eax=Oop off=324}
                                        ;*athrow
                                        ; - java.lang.ThreadGroup::addUnstarted@18 (line 843)
  0x026092e4: mov    $0x26092e4,%edx    ;   {section_word}
  0x026092e9: call   0x025fb1c0         ;   {runtime_call}
  0x026092ee: nop                       ;*athrow
                                        ; - java.lang.ThreadGroup::addUnstarted@18 (line 843)
  0x026092ef: mov    %fs:0x0,%esi
  0x026092f7: mov    0xfffffff4(%esi),%esi
  0x026092fa: mov    0x170(%esi),%eax
  0x02609300: movl   $0x0,0x170(%esi)
  0x0260930a: movl   $0x0,0x174(%esi)
  0x02609314: mov    %eax,%esi
  0x02609316: lea    0x18(%esp),%eax
  0x0260931a: mov    0x4(%eax),%ebx
  0x0260931d: mov    (%ebx),%edi
  0x0260931f: and    $0x7,%edi
  0x02609322: cmp    $0x5,%edi
  0x02609325: je     0x0260933f
  0x0260932b: mov    (%eax),%edi
  0x0260932d: test   %edi,%edi
  0x0260932f: je     0x0260933f
  0x02609335: lock cmpxchg %edi,(%ebx)
  0x02609339: jne    0x026093a6         ;*monitorexit
                                        ; - java.lang.ThreadGroup::addUnstarted@36 (line 846)
  0x0260933f: mov    %esi,%eax
  0x02609341: jmp    0x026093db
  0x02609346: mov    %ecx,0x4(%esp)
  0x0260934a: mov    %edx,(%esp)
  0x0260934d: call   0x025fb8c0         ; OopMap{ecx=Oop [28]=Oop off=434}
                                        ;*monitorenter
                                        ; - java.lang.ThreadGroup::addUnstarted@3 (line 841)
                                        ;   {runtime_call}
  0x02609352: jmp    0x02609279
  0x02609357: lea    0x18(%esp),%eax
  0x0260935b: mov    %eax,(%esp)
  0x0260935e: call   0x025fbac0         ;   {runtime_call}
  0x02609363: jmp    0x026092b6
  0x02609368: mov    $0x0,%edx          ;   {oop(NULL)}
  0x0260936d: push   %eax
  0x0260936e: mov    %fs:0x0,%eax
  0x02609376: mov    0xfffffff4(%eax),%eax
  0x02609379: cmp    0xe8(%edx),%eax
  0x0260937f: pop    %eax
  0x02609380: jne    0x02609390
  0x02609386: jmp    0x026092cd
  0x0260938b: mov    $0x5232800,%eax
  0x02609390: call   0x025fbd40         ; OopMap{[20]=Oop [28]=Oop off=501}
                                        ;*new  ; - java.lang.ThreadGroup::addUnstarted@11 (line 843)
                                        ;   {runtime_call}
  0x02609395: jmp    0x026092c8
  0x0260939a: mov    %edx,%edx
  0x0260939c: call   0x025fa300         ; OopMap{[20]=Oop [28]=Oop off=513}
                                        ;*new  ; - java.lang.ThreadGroup::addUnstarted@11 (line 843)
                                        ;   {runtime_call}
  0x026093a1: jmp    0x026092d2
  0x026093a6: lea    0x18(%esp),%eax
  0x026093aa: mov    %eax,(%esp)
  0x026093ad: call   0x025fbac0         ;   {runtime_call}
  0x026093b2: jmp    0x0260933f
  0x026093b4: nop    
  0x026093b5: nop    
  0x026093b6: mov    %fs:0x0,%esi
  0x026093be: mov    0xfffffff4(%esi),%esi
  0x026093c1: mov    0x170(%esi),%eax
  0x026093c7: movl   $0x0,0x170(%esi)
  0x026093d1: movl   $0x0,0x174(%esi)
  0x026093db: add    $0x28,%esp
  0x026093de: pop    %ebp
  0x026093df: jmp    0x025f9c00         ;   {runtime_call}
  0x026093e4: hlt    
  0x026093e5: hlt    
  0x026093e6: hlt    
  0x026093e7: hlt    
  0x026093e8: hlt    
  0x026093e9: hlt    
  0x026093ea: hlt    
  0x026093eb: hlt    
  0x026093ec: hlt    
  0x026093ed: hlt    
  0x026093ee: hlt    
  0x026093ef: hlt    
[Stub Code]
  0x026093f0: nop                       ;   {no_reloc}
  0x026093f1: nop    
  0x026093f2: mov    $0x0,%ebx          ;   {static_stub}
  0x026093f7: jmp    0x026093f7         ;   {runtime_call}
[Exception Handler]
  0x026093fc: call   0x025fb1c0         ;   {runtime_call}
  0x02609401: push   $0x6dab698c        ;   {external_word}
  0x02609406: call   0x0260940b
  0x0260940b: pusha  
  0x0260940c: call   0x6d8b2a00         ;   {runtime_call}
  0x02609411: hlt    
[Deopt Handler Code]
  0x02609412: push   $0x2609412         ;   {section_word}
  0x02609417: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02609648:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'getContextClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Thread'
  #           [sp+0x30]  (sp of caller)
  0x02609780: nop    
  0x02609781: nop    
  0x02609782: nop    
  0x02609783: nop    
  0x02609784: nop    
  0x02609785: nop    
  0x02609786: nop    
  0x02609787: cmp    0x4(%ecx),%eax
  0x0260978a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02609790: mov    %eax,0xffffd000(%esp)
  0x02609797: push   %ebp
  0x02609798: sub    $0x28,%esp         ;*aload_0
                                        ; - java.lang.Thread::getContextClassLoader@0 (line 1357)
  0x0260979b: mov    %ecx,0x10(%esp)
  0x0260979f: mov    0x44(%ecx),%esi    ;*getfield contextClassLoader
                                        ; - java.lang.Thread::getContextClassLoader@1 (line 1357)
  0x026097a2: cmp    $0x0,%esi
  0x026097a5: je     0x02609876         ;*ifnonnull
                                        ; - java.lang.Thread::getContextClassLoader@4 (line 1357)
  0x026097ab: mov    $0x145b2858,%esi   ;   {oop('java/lang/System')}
  0x026097b0: mov    0x15c(%esi),%esi   ;*getstatic security
                                        ; - java.lang.System::getSecurityManager@0 (line 306)
                                        ; - java.lang.Thread::getContextClassLoader@9 (line 1359)
  0x026097b6: cmp    $0x0,%esi
  0x026097b9: je     0x02609868         ;*ifnull
                                        ; - java.lang.Thread::getContextClassLoader@14 (line 1360)
  0x026097bf: mov    %esi,0x14(%esp)
  0x026097c3: mov    $0x3,%ecx          ;*invokestatic getCallerClass
                                        ; - java.lang.ClassLoader::getCallerClassLoader@1 (line 1384)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
  0x026097c8: nop    
  0x026097c9: nop    
  0x026097ca: nop    
  0x026097cb: call   0x025bd340         ; OopMap{[20]=Oop [16]=Oop off=80}
                                        ;*invokestatic getCallerClass
                                        ; - java.lang.ClassLoader::getCallerClassLoader@1 (line 1384)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
                                        ;   {static_call}
  0x026097d0: cmp    $0x0,%eax
  0x026097d3: jne    0x026097e3         ;*ifnonnull
                                        ; - java.lang.ClassLoader::getCallerClassLoader@6 (line 1386)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
  0x026097d9: mov    $0x0,%esi          ;   {oop(NULL)}
  0x026097de: jmp    0x026097ee         ;*astore_2
                                        ; - java.lang.Thread::getContextClassLoader@20 (line 1361)
  0x026097e3: cmp    (%eax),%eax        ; implicit exception: dispatches to 0x02609886
  0x026097e5: mov    %eax,%ecx          ;*invokevirtual getClassLoader0
                                        ; - java.lang.ClassLoader::getCallerClassLoader@12 (line 1390)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
  0x026097e7: call   0x025bcf40         ; OopMap{[20]=Oop [16]=Oop off=108}
                                        ;*invokevirtual getClassLoader0
                                        ; - java.lang.ClassLoader::getCallerClassLoader@12 (line 1390)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
                                        ;   {optimized virtual_call}
  0x026097ec: mov    %eax,%esi          ;*astore_2
                                        ; - java.lang.Thread::getContextClassLoader@20 (line 1361)
  0x026097ee: cmp    $0x0,%esi
  0x026097f1: mov    0x10(%esp),%ecx
  0x026097f5: je     0x02609868         ;*ifnull
                                        ; - java.lang.Thread::getContextClassLoader@22 (line 1362)
  0x026097fb: mov    0x44(%ecx),%edx    ;*getfield contextClassLoader
                                        ; - java.lang.Thread::getContextClassLoader@27 (line 1362)
  0x026097fe: cmp    %edx,%esi
  0x02609800: je     0x02609868         ;*if_acmpeq
                                        ; - java.lang.Thread::getContextClassLoader@30 (line 1362)
  0x02609806: cmp    (%edx),%eax        ;*invokevirtual isAncestor
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
                                        ; implicit exception: dispatches to 0x0260988b
  0x02609808: jmp    0x0260981f         ;*astore_2
                                        ; - java.lang.ClassLoader::isAncestor@1 (line 1368)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
  0x0260980d: xchg   %ax,%ax            ; OopMap{ecx=Oop [16]=Oop [20]=Oop esi=Oop edx=Oop off=144}
                                        ;*ifnonnull
                                        ; - java.lang.ClassLoader::isAncestor@15 (line 1374)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
  0x02609810: test   %eax,0x200100      ;   {poll}
  0x02609816: cmp    $0x0,%edx
  0x02609819: je     0x0260982b         ;*ifnonnull
                                        ; - java.lang.ClassLoader::isAncestor@15 (line 1374)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
  0x0260981f: mov    0x8(%edx),%edx     ;*getfield parent
                                        ; - java.lang.ClassLoader::isAncestor@3 (line 1370)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
                                        ; implicit exception: dispatches to 0x02609890
  0x02609822: cmp    %edx,%esi
  0x02609824: jne    0x02609810
  0x02609826: jmp    0x02609835         ;*if_acmpne
                                        ; - java.lang.ClassLoader::isAncestor@9 (line 1371)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
  0x0260982b: mov    $0x0,%edx
  0x02609830: jmp    0x0260983a
  0x02609835: mov    $0x1,%edx
  0x0260983a: cmp    $0x0,%edx
  0x0260983d: jne    0x02609868         ;*ifne
                                        ; - java.lang.Thread::getContextClassLoader@41 (line 1362)
  0x02609843: mov    0x14(%esp),%esi
  0x02609847: nop    
  0x02609848: jmp    0x026098ba         ;   {no_reloc}
  0x0260984d: xchg   %ax,%ax
  0x02609850: jmp    0x026098d4         ; implicit exception: dispatches to 0x026098c4
  0x02609855: nop                       ;*getstatic GET_CLASSLOADER_PERMISSION
                                        ; - java.lang.Thread::getContextClassLoader@45 (line 1364)
  0x02609856: cmp    (%esi),%eax        ; implicit exception: dispatches to 0x026098de
  0x02609858: mov    %esi,%ecx          ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::getContextClassLoader@48 (line 1364)
  0x0260985a: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260985f: call   0x025bd140         ; OopMap{[16]=Oop off=228}
                                        ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::getContextClassLoader@48 (line 1364)
                                        ;   {virtual_call}
  0x02609864: mov    0x10(%esp),%ecx
  0x02609868: mov    0x44(%ecx),%eax    ;*getfield contextClassLoader
                                        ; - java.lang.Thread::getContextClassLoader@52 (line 1367)
  0x0260986b: add    $0x28,%esp
  0x0260986e: pop    %ebp
  0x0260986f: test   %eax,0x200100      ;   {poll_return}
  0x02609875: ret                       ;*areturn
                                        ; - java.lang.Thread::getContextClassLoader@55 (line 1367)
  0x02609876: mov    $0x0,%eax          ;   {oop(NULL)}
  0x0260987b: add    $0x28,%esp
  0x0260987e: pop    %ebp
  0x0260987f: test   %eax,0x200100      ;   {poll_return}
  0x02609885: ret    
  0x02609886: call   0x025fa0d0         ; OopMap{[20]=Oop [16]=Oop eax=Oop off=267}
                                        ;*invokevirtual getClassLoader0
                                        ; - java.lang.ClassLoader::getCallerClassLoader@12 (line 1390)
                                        ; - java.lang.Thread::getContextClassLoader@17 (line 1361)
                                        ;   {runtime_call}
  0x0260988b: call   0x025fa0d0         ; OopMap{ecx=Oop [16]=Oop edx=Oop [20]=Oop esi=Oop off=272}
                                        ;*invokevirtual isAncestor
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
                                        ;   {runtime_call}
  0x02609890: call   0x025fa0d0         ; OopMap{ecx=Oop [16]=Oop [20]=Oop esi=Oop off=277}
                                        ;*getfield parent
                                        ; - java.lang.ClassLoader::isAncestor@3 (line 1370)
                                        ; - java.lang.Thread::getContextClassLoader@38 (line 1362)
                                        ;   {runtime_call}
  0x02609895: mov    $0x0,%edx          ;   {oop(NULL)}
  0x0260989a: push   %eax
  0x0260989b: mov    %fs:0x0,%eax
  0x026098a3: mov    0xfffffff4(%eax),%eax
  0x026098a6: cmp    0xe8(%edx),%eax
  0x026098ac: pop    %eax
  0x026098ad: jne    0x026098ba
  0x026098b3: jmp    0x0260984d
  0x026098b5: mov    $0x5202500,%eax
  0x026098ba: call   0x025fbd40         ; OopMap{esi=Oop [16]=Oop off=319}
                                        ;*getstatic GET_CLASSLOADER_PERMISSION
                                        ; - java.lang.Thread::getContextClassLoader@45 (line 1364)
                                        ;   {runtime_call}
  0x026098bf: jmp    0x02609848
  0x026098c1: nop    
  0x026098c2: nop    
  0x026098c3: nop    
  0x026098c4: call   0x025fa0d0         ; OopMap{esi=Oop [16]=Oop edx=Oop off=329}
                                        ;*getstatic GET_CLASSLOADER_PERMISSION
                                        ; - java.lang.Thread::getContextClassLoader@45 (line 1364)
                                        ;   {runtime_call}
  0x026098c9: mov    0x0(%edx),%edx
  0x026098cf: mov    $0x6050b00,%eax
  0x026098d4: call   0x025fbb80         ; OopMap{esi=Oop [16]=Oop edx=Oop off=345}
                                        ;*getstatic GET_CLASSLOADER_PERMISSION
                                        ; - java.lang.Thread::getContextClassLoader@45 (line 1364)
                                        ;   {runtime_call}
  0x026098d9: jmp    0x02609850
  0x026098de: call   0x025fa0d0         ; OopMap{esi=Oop [16]=Oop edx=Oop off=355}
                                        ;*invokevirtual checkPermission
                                        ; - java.lang.Thread::getContextClassLoader@48 (line 1364)
                                        ;   {runtime_call}
  0x026098e3: nop    
  0x026098e4: nop    
  0x026098e5: mov    %fs:0x0,%esi
  0x026098ed: mov    0xfffffff4(%esi),%esi
  0x026098f0: mov    0x170(%esi),%eax
  0x026098f6: movl   $0x0,0x170(%esi)
  0x02609900: movl   $0x0,0x174(%esi)
  0x0260990a: add    $0x28,%esp
  0x0260990d: pop    %ebp
  0x0260990e: jmp    0x025f9c00         ;   {runtime_call}
  0x02609913: hlt    
  0x02609914: hlt    
  0x02609915: hlt    
  0x02609916: hlt    
  0x02609917: hlt    
  0x02609918: hlt    
  0x02609919: hlt    
  0x0260991a: hlt    
  0x0260991b: hlt    
  0x0260991c: hlt    
  0x0260991d: hlt    
  0x0260991e: hlt    
  0x0260991f: hlt    
[Stub Code]
  0x02609920: nop                       ;   {no_reloc}
  0x02609921: nop    
  0x02609922: mov    $0x0,%ebx          ;   {static_stub}
  0x02609927: jmp    0x02609927         ;   {runtime_call}
  0x0260992c: nop    
  0x0260992d: nop    
  0x0260992e: mov    $0x0,%ebx          ;   {static_stub}
  0x02609933: jmp    0x02609933         ;   {runtime_call}
  0x02609938: nop    
  0x02609939: nop    
  0x0260993a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260993f: jmp    0x0260993f         ;   {runtime_call}
[Exception Handler]
  0x02609944: call   0x025fb1c0         ;   {runtime_call}
  0x02609949: push   $0x6dab698c        ;   {external_word}
  0x0260994e: call   0x02609953
  0x02609953: pusha  
  0x02609954: call   0x6d8b2a00         ;   {runtime_call}
  0x02609959: hlt    
[Deopt Handler Code]
  0x0260995a: push   $0x260995a         ;   {section_word}
  0x0260995f: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x02609d08:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'optimize' '()Ljava/security/AccessControlContext;' in 'java/security/AccessControlContext'
  #           [sp+0x50]  (sp of caller)
  0x02609e80: nop    
  0x02609e81: nop    
  0x02609e82: nop    
  0x02609e83: nop    
  0x02609e84: nop    
  0x02609e85: nop    
  0x02609e86: nop    
  0x02609e87: cmp    0x4(%ecx),%eax
  0x02609e8a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x02609e90: mov    %eax,0xffffd000(%esp)
  0x02609e97: push   %ebp
  0x02609e98: sub    $0x48,%esp         ;*aload_0
                                        ; - java.security.AccessControlContext::optimize@0 (line 342)
  0x02609e9b: mov    %ecx,0x18(%esp)
  0x02609e9f: movsbl 0x8(%ecx),%ebx     ;*getfield isPrivileged
                                        ; - java.security.AccessControlContext::optimize@1 (line 342)
  0x02609ea3: cmp    $0x0,%ebx
  0x02609ea6: je     0x02609eb4         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@4 (line 342)
  0x02609eac: mov    0x10(%ecx),%esi    ;*getfield privilegedContext
                                        ; - java.security.AccessControlContext::optimize@8 (line 343)
  0x02609eaf: jmp    0x02609ec2         ;*goto
                                        ; - java.security.AccessControlContext::optimize@12 (line 343)
  0x02609eb4: nop    
  0x02609eb5: nop    
  0x02609eb6: nop    
  0x02609eb7: call   0x025bd340         ; OopMap{[24]=Oop off=60}
                                        ;*invokestatic getInheritedAccessControlContext
                                        ; - java.security.AccessControlContext::optimize@15 (line 345)
                                        ;   {static_call}
  0x02609ebc: mov    %eax,%esi          ;*astore_1
                                        ; - java.security.AccessControlContext::optimize@18 (line 345)
  0x02609ebe: mov    0x18(%esp),%ecx
  0x02609ec2: mov    0xc(%ecx),%edi     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@20 (line 350)
  0x02609ec5: cmp    $0x0,%edi
  0x02609ec8: mov    $0x0,%ebx
  0x02609ecd: jne    0x02609ed8
  0x02609ed3: mov    $0x1,%ebx
  0x02609ed8: cmp    $0x0,%esi
  0x02609edb: je     0x02609efc         ;*ifnull
                                        ; - java.security.AccessControlContext::optimize@33 (line 354)
  0x02609ee1: mov    0xc(%esi),%edx     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@37 (line 354)
                                        ; implicit exception: dispatches to 0x0260a33b
  0x02609ee4: cmp    $0x0,%edx
  0x02609ee7: mov    $0x0,%edx
  0x02609eec: jne    0x02609ef7
  0x02609ef2: mov    $0x1,%edx
  0x02609ef7: jmp    0x02609f01         ;*istore_3
                                        ; - java.security.AccessControlContext::optimize@48 (line 354)
  0x02609efc: mov    $0x1,%edx          ;*goto
                                        ; - java.security.AccessControlContext::optimize@44 (line 354)
  0x02609f01: cmp    $0x0,%esi
  0x02609f04: je     0x02609f16         ;*ifnull
                                        ; - java.security.AccessControlContext::optimize@50 (line 356)
  0x02609f0a: mov    0x14(%esi),%eax    ;*getfield combiner
                                        ; - java.security.AccessControlContext::optimize@54 (line 356)
                                        ; implicit exception: dispatches to 0x0260a340
  0x02609f0d: cmp    $0x0,%eax
  0x02609f10: jne    0x0260a325         ;*ifnull
                                        ; - java.security.AccessControlContext::optimize@57 (line 356)
  0x02609f16: cmp    $0x0,%edx
  0x02609f19: je     0x02609f28         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@71 (line 363)
  0x02609f1f: cmp    $0x0,%ebx
  0x02609f22: jne    0x0260a318         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@75 (line 363)
  0x02609f28: cmp    $0x0,%ebx
  0x02609f2b: jne    0x0260a30b         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@81 (line 369)
  0x02609f31: mov    0x8(%edi),%eax     ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@90 (line 373)
                                        ; implicit exception: dispatches to 0x0260a345
  0x02609f34: cmp    $0x0,%edx
  0x02609f37: je     0x02609f46         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@94 (line 378)
  0x02609f3d: cmp    $0x2,%eax
  0x02609f40: jle    0x0260a2fe         ;*if_icmpgt
                                        ; - java.security.AccessControlContext::optimize@100 (line 378)
  0x02609f46: cmp    $0x1,%eax
  0x02609f49: jne    0x02609f7a         ;*if_icmpne
                                        ; - java.security.AccessControlContext::optimize@108 (line 384)
  0x02609f4f: cmpl   $0x0,0x8(%edi)     ; implicit exception: dispatches to 0x0260a34a
  0x02609f56: jbe    0x0260a354
  0x02609f5c: mov    0xc(%edi),%ebx     ;*aaload
                                        ; - java.security.AccessControlContext::optimize@116 (line 384)
  0x02609f5f: mov    0xc(%esi),%edi     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@118 (line 384)
                                        ; implicit exception: dispatches to 0x0260a360
  0x02609f62: cmpl   $0x0,0x8(%edi)     ; implicit exception: dispatches to 0x0260a365
  0x02609f69: jbe    0x0260a36f
  0x02609f6f: mov    0xc(%edi),%edi     ;*aaload
                                        ; - java.security.AccessControlContext::optimize@122 (line 384)
  0x02609f72: cmp    %edi,%ebx
  0x02609f74: je     0x0260a2f1         ;*if_acmpne
                                        ; - java.security.AccessControlContext::optimize@123 (line 384)
  0x02609f7a: cmp    $0x0,%edx
  0x02609f7d: je     0x02609f8d         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@129 (line 388)
  0x02609f83: mov    $0x0,%edi
  0x02609f88: jmp    0x02609f95         ;*goto
                                        ; - java.security.AccessControlContext::optimize@133 (line 388)
  0x02609f8d: mov    0xc(%esi),%ebx     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@137 (line 388)
                                        ; implicit exception: dispatches to 0x0260a37b
  0x02609f90: mov    0x8(%ebx),%ebx     ; implicit exception: dispatches to 0x0260a380
  0x02609f93: mov    %ebx,%edi          ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@140 (line 388)
  0x02609f95: mov    %edx,0x1c(%esp)
  0x02609f99: mov    %esi,0x20(%esp)
  0x02609f9d: mov    %edi,%ebx
  0x02609f9f: add    %eax,%ebx
  0x02609fa1: mov    $0x1473ff28,%edx   ;   {oop('java/security/ProtectionDomain'[])}
  0x02609fa6: mov    %eax,0x28(%esp)
  0x02609faa: mov    %edi,0x24(%esp)
  0x02609fae: mov    %ebx,%edi
  0x02609fb0: cmp    $0xffffff,%ebx
  0x02609fb6: ja     0x0260a385
  0x02609fbc: mov    $0x13,%esi
  0x02609fc1: lea    (%esi,%ebx,4),%esi
  0x02609fc4: and    $0xfffffff8,%esi
  0x02609fc7: mov    %fs:0x0,%ecx
  0x02609fcf: mov    0xfffffff4(%ecx),%ecx
  0x02609fd2: mov    0x34(%ecx),%eax
  0x02609fd5: lea    (%eax,%esi,1),%esi
  0x02609fd8: cmp    0x3c(%ecx),%esi
  0x02609fdb: ja     0x0260a385
  0x02609fe1: mov    %esi,0x34(%ecx)
  0x02609fe4: sub    %eax,%esi
  0x02609fe6: movl   $0x1,(%eax)
  0x02609fec: mov    %edx,0x4(%eax)
  0x02609fef: mov    %ebx,0x8(%eax)
  0x02609ff2: sub    $0xc,%esi
  0x02609ff5: je     0x0260a01b
  0x02609ffb: xor    %ebx,%ebx
  0x02609ffd: shr    $0x3,%esi
  0x0260a000: jae    0x0260a010
  0x0260a006: mov    %ebx,0xc(%eax,%esi,8)
  0x0260a00a: je     0x0260a01b
  0x0260a010: mov    %ebx,0x8(%eax,%esi,8)
  0x0260a014: mov    %ebx,0x4(%eax,%esi,8)
  0x0260a018: dec    %esi
  0x0260a019: jne    0x0260a010         ;*anewarray
                                        ; - java.security.AccessControlContext::optimize@148 (line 391)
  0x0260a01b: mov    %eax,0x2c(%esp)
  0x0260a01f: mov    0x1c(%esp),%edx
  0x0260a023: cmp    $0x0,%edx
  0x0260a026: je     0x0260a039
  0x0260a02c: mov    0x24(%esp),%edi
  0x0260a030: mov    %edx,0x1c(%esp)
  0x0260a034: jmp    0x0260a09e         ;*ifne
                                        ; - java.security.AccessControlContext::optimize@154 (line 394)
  0x0260a039: mov    %edx,0x1c(%esp)
  0x0260a03d: mov    0x20(%esp),%esi
  0x0260a041: mov    0xc(%esi),%ecx     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@158 (line 395)
                                        ; implicit exception: dispatches to 0x0260a38f
  0x0260a044: mov    $0x0,%edx
  0x0260a049: mov    %eax,%ebx
  0x0260a04b: mov    %ebx,%eax
  0x0260a04d: mov    $0x0,%ebx
  0x0260a052: mov    0x24(%esp),%edi
  0x0260a056: mov    %esi,0x20(%esp)
  0x0260a05a: test   %ecx,%ecx
  0x0260a05c: je     0x0260a394
  0x0260a062: test   %edi,%edi
  0x0260a064: jl     0x0260a394
  0x0260a06a: lea    (%edx,%edi,1),%esi
  0x0260a06d: cmp    0x8(%ecx),%esi
  0x0260a070: ja     0x0260a394
  0x0260a076: lea    (%ebx,%edi,1),%esi
  0x0260a079: cmp    0x8(%eax),%esi
  0x0260a07c: ja     0x0260a394
  0x0260a082: lea    0xc(%ecx,%edx,4),%esi
  0x0260a086: mov    %esi,(%esp)
  0x0260a089: lea    0xc(%eax,%ebx,4),%esi
  0x0260a08d: mov    %esi,0x4(%esp)
  0x0260a091: mov    %edi,0x8(%esp)
  0x0260a095: call   0x6d8fae10         ;*invokestatic arraycopy
                                        ; - java.security.AccessControlContext::optimize@167 (line 395)
                                        ;   {runtime_call}
  0x0260a09a: mov    0x24(%esp),%edi
  0x0260a09e: mov    $0x0,%ebx          ;*istore
                                        ; - java.security.AccessControlContext::optimize@171 (line 400)
  0x0260a0a3: mov    0x2c(%esp),%eax
  0x0260a0a7: nop    
  0x0260a0a8: mov    0x18(%esp),%ecx
  0x0260a0ac: mov    0xc(%ecx),%edx     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@176 (line 400)
  0x0260a0af: mov    0x8(%edx),%esi     ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@179 (line 400)
                                        ; implicit exception: dispatches to 0x0260a3a9
  0x0260a0b2: cmp    %esi,%ebx
  0x0260a0b4: jge    0x0260a18f         ;*if_icmpge
                                        ; - java.security.AccessControlContext::optimize@180 (line 400)
  0x0260a0ba: cmp    0x8(%edx),%ebx     ; implicit exception: dispatches to 0x0260a3ae
  0x0260a0bd: jae    0x0260a3b8
  0x0260a0c3: mov    0xc(%edx,%ebx,4),%edx  ;*aaload
                                        ; - java.security.AccessControlContext::optimize@189 (line 401)
  0x0260a0c7: cmp    $0x0,%edx
  0x0260a0ca: jne    0x0260a0d9
  0x0260a0d0: mov    %ebx,0x30(%esp)
  0x0260a0d4: jmp    0x0260a17f         ;*ifnull
                                        ; - java.security.AccessControlContext::optimize@194 (line 402)
  0x0260a0d9: mov    $0x0,%esi
  0x0260a0de: jmp    0x0260a100         ;*istore
                                        ; - java.security.AccessControlContext::optimize@198 (line 403)
  0x0260a0e3: nop    
  0x0260a0e4: cmp    0x8(%eax),%esi
  0x0260a0e7: jae    0x0260a3c0
  0x0260a0ed: mov    0xc(%eax,%esi,4),%ecx  ;*aaload
                                        ; - java.security.AccessControlContext::optimize@213 (line 404)
  0x0260a0f1: cmp    %ecx,%edx
  0x0260a0f3: je     0x0260a10a         ;*if_acmpne
                                        ; - java.security.AccessControlContext::optimize@214 (line 404)
  0x0260a0f9: inc    %esi               ; OopMap{[32]=Oop eax=Oop [44]=Oop edx=Oop [24]=Oop off=634}
                                        ;*goto
                                        ; - java.security.AccessControlContext::optimize@223 (line 403)
  0x0260a0fa: test   %eax,0x200100      ;*goto
                                        ; - java.security.AccessControlContext::optimize@223 (line 403)
                                        ;   {poll}
  0x0260a100: cmp    %edi,%esi
  0x0260a102: jge    0x0260a113
  0x0260a108: jmp    0x0260a0e4         ;*if_icmpge
                                        ; - java.security.AccessControlContext::optimize@204 (line 403)
  0x0260a10a: mov    %ebx,0x30(%esp)
  0x0260a10e: jmp    0x0260a17f         ;*goto
                                        ; - java.security.AccessControlContext::optimize@217 (line 405)
  0x0260a113: mov    %ebx,0x30(%esp)
  0x0260a117: mov    %edi,%esi
  0x0260a119: inc    %esi
  0x0260a11a: lea    0xc(%eax,%edi,4),%ecx
  0x0260a11e: cmp    0x8(%eax),%edi
  0x0260a121: jae    0x0260a3c8
  0x0260a127: mov    %esi,0x34(%esp)
  0x0260a12b: cmp    $0x0,%edx
  0x0260a12e: je     0x0260a16f
  0x0260a134: mov    0x4(%eax),%edi     ; implicit exception: dispatches to 0x0260a3d0
  0x0260a137: mov    0x4(%edx),%ebx
  0x0260a13a: mov    0x88(%edi),%edi
  0x0260a140: cmp    %edi,%ebx
  0x0260a142: je     0x0260a16f
  0x0260a148: mov    0x10(%edi),%esi
  0x0260a14b: cmp    (%ebx,%esi,1),%edi
  0x0260a14e: je     0x0260a16f
  0x0260a154: cmp    $0x14,%esi
  0x0260a157: jne    0x0260a3d5
  0x0260a15d: push   %ebx
  0x0260a15e: push   %edi
  0x0260a15f: call   0x025fb700         ;   {runtime_call}
  0x0260a164: pop    %ebx
  0x0260a165: pop    %edi
  0x0260a166: cmp    $0x0,%edi
  0x0260a169: je     0x0260a3d5
  0x0260a16f: mov    %edx,(%ecx)
  0x0260a171: shr    $0x9,%ecx
  0x0260a174: movb   $0x0,0x1856d380(%ecx)
  0x0260a17b: mov    0x34(%esp),%edi    ;*aastore
                                        ; - java.security.AccessControlContext::optimize@235 (line 408)
  0x0260a17f: mov    0x30(%esp),%ebx
  0x0260a183: inc    %ebx               ; OopMap{[32]=Oop eax=Oop [44]=Oop [24]=Oop off=772}
                                        ;*goto
                                        ; - java.security.AccessControlContext::optimize@239 (line 400)
  0x0260a184: test   %eax,0x200100      ;   {poll}
  0x0260a18a: jmp    0x0260a0a8         ;*goto
                                        ; - java.security.AccessControlContext::optimize@239 (line 400)
  0x0260a18f: mov    0x8(%eax),%ebx     ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@246 (line 413)
  0x0260a192: cmp    %ebx,%edi
  0x0260a194: je     0x0260a29c         ;*if_icmpeq
                                        ; - java.security.AccessControlContext::optimize@247 (line 413)
  0x0260a19a: mov    0x1c(%esp),%edx
  0x0260a19e: cmp    $0x0,%edx
  0x0260a1a1: jne    0x0260a1b9         ;*ifne
                                        ; - java.security.AccessControlContext::optimize@251 (line 415)
  0x0260a1a7: mov    0x20(%esp),%esi
  0x0260a1ab: mov    0xc(%esi),%ebx     ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@257 (line 415)
                                        ; implicit exception: dispatches to 0x0260a3da
  0x0260a1ae: mov    0x8(%ebx),%ebx     ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@260 (line 415)
                                        ; implicit exception: dispatches to 0x0260a3df
  0x0260a1b1: cmp    %ebx,%edi
  0x0260a1b3: je     0x0260a2e4         ;*if_icmpne
                                        ; - java.security.AccessControlContext::optimize@261 (line 415)
  0x0260a1b9: cmp    $0x0,%edx
  0x0260a1bc: je     0x0260a1ce         ;*ifeq
                                        ; - java.security.AccessControlContext::optimize@267 (line 417)
  0x0260a1c2: mov    0x28(%esp),%ebx
  0x0260a1c6: cmp    %ebx,%edi
  0x0260a1c8: je     0x0260a2d3         ;*if_icmpne
                                        ; - java.security.AccessControlContext::optimize@274 (line 417)
  0x0260a1ce: mov    %edi,%ebx
  0x0260a1d0: mov    $0x1473ff28,%edx   ;   {oop('java/security/ProtectionDomain'[])}
  0x0260a1d5: mov    %edi,0x38(%esp)
  0x0260a1d9: mov    %ebx,%edi
  0x0260a1db: cmp    $0xffffff,%ebx
  0x0260a1e1: ja     0x0260a3e4
  0x0260a1e7: mov    $0x13,%esi
  0x0260a1ec: lea    (%esi,%ebx,4),%esi
  0x0260a1ef: and    $0xfffffff8,%esi
  0x0260a1f2: mov    %fs:0x0,%ecx
  0x0260a1fa: mov    0xfffffff4(%ecx),%ecx
  0x0260a1fd: mov    0x34(%ecx),%eax
  0x0260a200: lea    (%eax,%esi,1),%esi
  0x0260a203: cmp    0x3c(%ecx),%esi
  0x0260a206: ja     0x0260a3e4
  0x0260a20c: mov    %esi,0x34(%ecx)
  0x0260a20f: sub    %eax,%esi
  0x0260a211: movl   $0x1,(%eax)
  0x0260a217: mov    %edx,0x4(%eax)
  0x0260a21a: mov    %ebx,0x8(%eax)
  0x0260a21d: sub    $0xc,%esi
  0x0260a220: je     0x0260a246
  0x0260a226: xor    %ebx,%ebx
  0x0260a228: shr    $0x3,%esi
  0x0260a22b: jae    0x0260a23b
  0x0260a231: mov    %ebx,0xc(%eax,%esi,8)
  0x0260a235: je     0x0260a246
  0x0260a23b: mov    %ebx,0x8(%eax,%esi,8)
  0x0260a23f: mov    %ebx,0x4(%eax,%esi,8)
  0x0260a243: dec    %esi
  0x0260a244: jne    0x0260a23b         ;*anewarray
                                        ; - java.security.AccessControlContext::optimize@281 (line 420)
  0x0260a246: mov    0x2c(%esp),%ecx
  0x0260a24a: mov    $0x0,%edx
  0x0260a24f: mov    %eax,%esi
  0x0260a251: mov    %esi,%eax
  0x0260a253: mov    $0x0,%ebx
  0x0260a258: mov    0x38(%esp),%edi
  0x0260a25c: mov    %esi,0x3c(%esp)
  0x0260a260: test   %edi,%edi
  0x0260a262: jl     0x0260a3ee
  0x0260a268: lea    (%edx,%edi,1),%esi
  0x0260a26b: cmp    0x8(%ecx),%esi
  0x0260a26e: ja     0x0260a3ee
  0x0260a274: lea    (%ebx,%edi,1),%esi
  0x0260a277: cmp    0x8(%eax),%esi
  0x0260a27a: ja     0x0260a3ee
  0x0260a280: lea    0xc(%ecx,%edx,4),%esi
  0x0260a284: mov    %esi,(%esp)
  0x0260a287: lea    0xc(%eax,%ebx,4),%esi
  0x0260a28b: mov    %esi,0x4(%esp)
  0x0260a28f: mov    %edi,0x8(%esp)
  0x0260a293: call   0x6d8fae10         ;*invokestatic arraycopy
                                        ; - java.security.AccessControlContext::optimize@294 (line 421)
                                        ;   {runtime_call}
  0x0260a298: mov    0x3c(%esp),%eax    ;*astore
                                        ; - java.security.AccessControlContext::optimize@299 (line 422)
  0x0260a29c: mov    0x18(%esp),%ecx
  0x0260a2a0: mov    %eax,0xc(%ecx)
  0x0260a2a3: mov    %ecx,%eax
  0x0260a2a5: shr    $0x9,%eax
  0x0260a2a8: movb   $0x0,0x1856d380(%eax)  ;*putfield context
                                        ; - java.security.AccessControlContext::optimize@304 (line 429)
  0x0260a2af: movl   $0x0,0x14(%ecx)
  0x0260a2b6: mov    %ecx,%eax
  0x0260a2b8: shr    $0x9,%eax
  0x0260a2bb: movb   $0x0,0x1856d380(%eax)  ;*putfield combiner
                                        ; - java.security.AccessControlContext::optimize@309 (line 430)
  0x0260a2c2: movb   $0x0,0x8(%ecx)     ;*putfield isPrivileged
                                        ; - java.security.AccessControlContext::optimize@314 (line 431)
  0x0260a2c6: mov    %ecx,%eax
  0x0260a2c8: add    $0x48,%esp
  0x0260a2cb: pop    %ebp
  0x0260a2cc: test   %eax,0x200100      ;   {poll_return}
  0x0260a2d2: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@318 (line 433)
  0x0260a2d3: mov    0x18(%esp),%ecx
  0x0260a2d7: mov    %ecx,%eax
  0x0260a2d9: add    $0x48,%esp
  0x0260a2dc: pop    %ebp
  0x0260a2dd: test   %eax,0x200100      ;   {poll_return}
  0x0260a2e3: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@278 (line 418)
  0x0260a2e4: mov    %esi,%eax
  0x0260a2e6: add    $0x48,%esp
  0x0260a2e9: pop    %ebp
  0x0260a2ea: test   %eax,0x200100      ;   {poll_return}
  0x0260a2f0: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@265 (line 416)
  0x0260a2f1: mov    %esi,%eax
  0x0260a2f3: add    $0x48,%esp
  0x0260a2f6: pop    %ebp
  0x0260a2f7: test   %eax,0x200100      ;   {poll_return}
  0x0260a2fd: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@127 (line 385)
  0x0260a2fe: mov    %ecx,%eax
  0x0260a300: add    $0x48,%esp
  0x0260a303: pop    %ebp
  0x0260a304: test   %eax,0x200100      ;   {poll_return}
  0x0260a30a: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@104 (line 379)
  0x0260a30b: mov    %esi,%eax
  0x0260a30d: add    $0x48,%esp
  0x0260a310: pop    %ebp
  0x0260a311: test   %eax,0x200100      ;   {poll_return}
  0x0260a317: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@85 (line 370)
  0x0260a318: mov    %ecx,%eax
  0x0260a31a: add    $0x48,%esp
  0x0260a31d: pop    %ebp
  0x0260a31e: test   %eax,0x200100      ;   {poll_return}
  0x0260a324: ret                       ;*areturn
                                        ; - java.security.AccessControlContext::optimize@79 (line 364)
  0x0260a325: mov    %edi,%edx
  0x0260a327: mov    %esi,(%esp)        ;*invokespecial goCombiner
                                        ; - java.security.AccessControlContext::optimize@66 (line 358)
  0x0260a32a: nop    
  0x0260a32b: call   0x025bcf40         ; OopMap{off=1200}
                                        ;*invokespecial goCombiner
                                        ; - java.security.AccessControlContext::optimize@66 (line 358)
                                        ;   {optimized virtual_call}
  0x0260a330: add    $0x48,%esp
  0x0260a333: pop    %ebp
  0x0260a334: test   %eax,0x200100      ;   {poll_return}
  0x0260a33a: ret    
  0x0260a33b: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1216}
                                        ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@37 (line 354)
                                        ;   {runtime_call}
  0x0260a340: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1221}
                                        ;*getfield combiner
                                        ; - java.security.AccessControlContext::optimize@54 (line 356)
                                        ;   {runtime_call}
  0x0260a345: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1226}
                                        ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@90 (line 373)
                                        ;   {runtime_call}
  0x0260a34a: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1231}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@116 (line 384)
                                        ;   {runtime_call}
  0x0260a34f: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1236}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@116 (line 384)
                                        ;   {runtime_call}
  0x0260a354: movl   $0x0,(%esp)
  0x0260a35b: call   0x025f9dd0         ; OopMap{esi=Oop ecx=Oop [24]=Oop edi=Oop off=1248}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@116 (line 384)
                                        ;   {runtime_call}
  0x0260a360: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop ebx=Oop off=1253}
                                        ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@118 (line 384)
                                        ;   {runtime_call}
  0x0260a365: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop ebx=Oop edi=Oop off=1258}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@122 (line 384)
                                        ;   {runtime_call}
  0x0260a36a: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop ebx=Oop edi=Oop off=1263}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@122 (line 384)
                                        ;   {runtime_call}
  0x0260a36f: movl   $0x0,(%esp)
  0x0260a376: call   0x025f9dd0         ; OopMap{esi=Oop ecx=Oop [24]=Oop ebx=Oop edi=Oop off=1275}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@122 (line 384)
                                        ;   {runtime_call}
  0x0260a37b: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop off=1280}
                                        ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@137 (line 388)
                                        ;   {runtime_call}
  0x0260a380: call   0x025fa0d0         ; OopMap{esi=Oop ecx=Oop [24]=Oop off=1285}
                                        ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@140 (line 388)
                                        ;   {runtime_call}
  0x0260a385: call   0x025fad80         ; OopMap{[24]=Oop [32]=Oop off=1290}
                                        ;*anewarray
                                        ; - java.security.AccessControlContext::optimize@148 (line 391)
                                        ;   {runtime_call}
  0x0260a38a: jmp    0x0260a01b
  0x0260a38f: call   0x025fa0d0         ; OopMap{[24]=Oop eax=Oop [44]=Oop esi=Oop off=1300}
                                        ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@158 (line 395)
                                        ;   {runtime_call}
  0x0260a394: mov    %eax,(%esp)
  0x0260a397: mov    %ebx,0x4(%esp)
  0x0260a39b: mov    %edi,0x8(%esp)
  0x0260a39f: call   0x025bd340         ; OopMap{[24]=Oop [44]=Oop [32]=Oop off=1316}
                                        ;*invokestatic arraycopy
                                        ; - java.security.AccessControlContext::optimize@167 (line 395)
                                        ;   {static_call}
  0x0260a3a4: jmp    0x0260a09a
  0x0260a3a9: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop [44]=Oop ecx=Oop [24]=Oop edx=Oop off=1326}
                                        ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@179 (line 400)
                                        ;   {runtime_call}
  0x0260a3ae: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop [44]=Oop ecx=Oop [24]=Oop edx=Oop off=1331}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@189 (line 401)
                                        ;   {runtime_call}
  0x0260a3b3: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop [44]=Oop ecx=Oop [24]=Oop edx=Oop off=1336}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@189 (line 401)
                                        ;   {runtime_call}
  0x0260a3b8: mov    %ebx,(%esp)
  0x0260a3bb: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop [44]=Oop ecx=Oop [24]=Oop edx=Oop off=1344}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@189 (line 401)
                                        ;   {runtime_call}
  0x0260a3c0: mov    %esi,(%esp)
  0x0260a3c3: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop [44]=Oop edx=Oop [24]=Oop off=1352}
                                        ;*aaload
                                        ; - java.security.AccessControlContext::optimize@213 (line 404)
                                        ;   {runtime_call}
  0x0260a3c8: mov    %edi,(%esp)
  0x0260a3cb: call   0x025f9dd0         ; OopMap{[32]=Oop eax=Oop [44]=Oop [24]=Oop edx=Oop off=1360}
                                        ;*aastore
                                        ; - java.security.AccessControlContext::optimize@235 (line 408)
                                        ;   {runtime_call}
  0x0260a3d0: call   0x025fa0d0         ; OopMap{[32]=Oop eax=Oop [44]=Oop [24]=Oop edx=Oop off=1365}
                                        ;*aastore
                                        ; - java.security.AccessControlContext::optimize@235 (line 408)
                                        ;   {runtime_call}
  0x0260a3d5: call   0x025fb410         ; OopMap{[32]=Oop eax=Oop [44]=Oop [24]=Oop edx=Oop off=1370}
                                        ;*aastore
                                        ; - java.security.AccessControlContext::optimize@235 (line 408)
                                        ;   {runtime_call}
  0x0260a3da: call   0x025fa0d0         ; OopMap{[24]=Oop eax=Oop [44]=Oop esi=Oop off=1375}
                                        ;*getfield context
                                        ; - java.security.AccessControlContext::optimize@257 (line 415)
                                        ;   {runtime_call}
  0x0260a3df: call   0x025fa0d0         ; OopMap{[24]=Oop eax=Oop [44]=Oop esi=Oop off=1380}
                                        ;*arraylength
                                        ; - java.security.AccessControlContext::optimize@260 (line 415)
                                        ;   {runtime_call}
  0x0260a3e4: call   0x025fad80         ; OopMap{[24]=Oop [44]=Oop off=1385}
                                        ;*anewarray
                                        ; - java.security.AccessControlContext::optimize@281 (line 420)
                                        ;   {runtime_call}
  0x0260a3e9: jmp    0x0260a246
  0x0260a3ee: mov    %eax,(%esp)
  0x0260a3f1: mov    %ebx,0x4(%esp)
  0x0260a3f5: mov    %edi,0x8(%esp)
  0x0260a3f9: nop    
  0x0260a3fa: nop    
  0x0260a3fb: call   0x025bd340         ; OopMap{[24]=Oop [60]=Oop off=1408}
                                        ;*invokestatic arraycopy
                                        ; - java.security.AccessControlContext::optimize@294 (line 421)
                                        ;   {static_call}
  0x0260a400: jmp    0x0260a298
  0x0260a405: nop    
  0x0260a406: nop    
  0x0260a407: mov    %fs:0x0,%esi
  0x0260a40f: mov    0xfffffff4(%esi),%esi
  0x0260a412: mov    0x170(%esi),%eax
  0x0260a418: movl   $0x0,0x170(%esi)
  0x0260a422: movl   $0x0,0x174(%esi)
  0x0260a42c: add    $0x48,%esp
  0x0260a42f: pop    %ebp
  0x0260a430: jmp    0x025f9c00         ;   {runtime_call}
  0x0260a435: hlt    
  0x0260a436: hlt    
  0x0260a437: hlt    
  0x0260a438: hlt    
  0x0260a439: hlt    
  0x0260a43a: hlt    
  0x0260a43b: hlt    
  0x0260a43c: hlt    
  0x0260a43d: hlt    
  0x0260a43e: hlt    
  0x0260a43f: hlt    
[Stub Code]
  0x0260a440: nop                       ;   {no_reloc}
  0x0260a441: nop    
  0x0260a442: mov    $0x0,%ebx          ;   {static_stub}
  0x0260a447: jmp    0x0260a447         ;   {runtime_call}
  0x0260a44c: nop    
  0x0260a44d: nop    
  0x0260a44e: mov    $0x0,%ebx          ;   {static_stub}
  0x0260a453: jmp    0x0260a453         ;   {runtime_call}
  0x0260a458: nop    
  0x0260a459: nop    
  0x0260a45a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260a45f: jmp    0x0260a45f         ;   {runtime_call}
  0x0260a464: nop    
  0x0260a465: nop    
  0x0260a466: mov    $0x0,%ebx          ;   {static_stub}
  0x0260a46b: jmp    0x0260a46b         ;   {runtime_call}
[Exception Handler]
  0x0260a470: call   0x025fb1c0         ;   {runtime_call}
  0x0260a475: push   $0x6dab698c        ;   {external_word}
  0x0260a47a: call   0x0260a47f
  0x0260a47f: pusha  
  0x0260a480: call   0x6d8b2a00         ;   {runtime_call}
  0x0260a485: hlt    
[Deopt Handler Code]
  0x0260a486: push   $0x260a486         ;   {section_word}
  0x0260a48b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260afc8:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'nextThreadID' '()J' in 'java/lang/Thread'
  #           [sp+0x30]  (sp of caller)
  0x0260b0c0: mov    %eax,0xffffd000(%esp)
  0x0260b0c7: push   %ebp
  0x0260b0c8: sub    $0x28,%esp
  0x0260b0cb: mov    $0x145c3878,%edx   ;   {oop(a 'java/lang/Class' = 'java/lang/Thread')}
  0x0260b0d0: lea    0x10(%esp),%esi
  0x0260b0d4: mov    %edx,0x4(%esi)
  0x0260b0d7: mov    (%edx),%eax
  0x0260b0d9: mov    %eax,%edi
  0x0260b0db: and    $0x7,%edi
  0x0260b0de: cmp    $0x5,%edi
  0x0260b0e1: jne    0x0260b16d
  0x0260b0e7: mov    %eax,(%esi)
  0x0260b0e9: mov    %fs:0x0,%edi
  0x0260b0f1: mov    0xfffffff4(%edi),%edi
  0x0260b0f4: xor    %edi,%eax
  0x0260b0f6: mov    0x4(%edx),%edi
  0x0260b0f9: xor    0x68(%edi),%eax
  0x0260b0fc: and    $0xffffff87,%eax
  0x0260b0ff: je     0x0260b18e
  0x0260b105: test   $0x7,%eax
  0x0260b10a: jne    0x0260b161
  0x0260b110: test   $0x180,%eax
  0x0260b115: jne    0x0260b13f
  0x0260b11b: mov    (%esi),%eax
  0x0260b11d: and    $0x1ff,%eax
  0x0260b123: mov    %fs:0x0,%edi
  0x0260b12b: mov    0xfffffff4(%edi),%edi
  0x0260b12e: or     %eax,%edi
  0x0260b130: lock cmpxchg %edi,(%edx)
  0x0260b134: jne    0x0260b1e7
  0x0260b13a: jmp    0x0260b18e
  0x0260b13f: mov    %fs:0x0,%edi
  0x0260b147: mov    0xfffffff4(%edi),%edi
  0x0260b14a: mov    0x4(%edx),%eax
  0x0260b14d: or     0x68(%eax),%edi
  0x0260b150: mov    (%esi),%eax
  0x0260b152: lock cmpxchg %edi,(%edx)
  0x0260b156: jne    0x0260b1e7
  0x0260b15c: jmp    0x0260b18e
  0x0260b161: mov    (%esi),%eax
  0x0260b163: mov    0x4(%edx),%edi
  0x0260b166: mov    0x68(%edi),%edi
  0x0260b169: lock cmpxchg %edi,(%edx)
  0x0260b16d: mov    (%edx),%eax
  0x0260b16f: or     $0x1,%eax
  0x0260b172: mov    %eax,(%esi)
  0x0260b174: lock cmpxchg %esi,(%edx)
  0x0260b178: je     0x0260b18e
  0x0260b17e: sub    %esp,%eax
  0x0260b180: and    $0xfffff003,%eax
  0x0260b186: mov    %eax,(%esi)
  0x0260b188: jne    0x0260b1e7
  0x0260b18e: mov    $0x145c3688,%eax   ;   {oop('java/lang/Thread')}
  0x0260b193: mov    0x1d0(%eax),%esi
  0x0260b199: mov    0x1d4(%eax),%edx   ;*getstatic threadSeqNumber
                                        ; - java.lang.Thread::nextThreadID@0 (line 192)
  0x0260b19f: add    $0x1,%esi
  0x0260b1a2: adc    $0x0,%edx
  0x0260b1a5: mov    %esi,0x1d0(%eax)
  0x0260b1ab: mov    %edx,0x1d4(%eax)   ;*putstatic threadSeqNumber
                                        ; - java.lang.Thread::nextThreadID@6 (line 192)
  0x0260b1b1: lea    0x10(%esp),%eax
  0x0260b1b5: mov    0x4(%eax),%ebx
  0x0260b1b8: mov    (%ebx),%edi
  0x0260b1ba: and    $0x7,%edi
  0x0260b1bd: cmp    $0x5,%edi
  0x0260b1c0: je     0x0260b1da
  0x0260b1c6: mov    (%eax),%edi
  0x0260b1c8: test   %edi,%edi
  0x0260b1ca: je     0x0260b1da
  0x0260b1d0: lock cmpxchg %edi,(%ebx)
  0x0260b1d4: jne    0x0260b1f5         ;*lreturn
                                        ; - java.lang.Thread::nextThreadID@9 (line 192)
  0x0260b1da: mov    %esi,%eax
  0x0260b1dc: add    $0x28,%esp
  0x0260b1df: pop    %ebp
  0x0260b1e0: test   %eax,0x200100      ;   {poll_return}
  0x0260b1e6: ret    
  0x0260b1e7: mov    %edx,0x4(%esp)
  0x0260b1eb: mov    %esi,(%esp)
  0x0260b1ee: call   0x025fb8c0         ; OopMap{edx=Oop [20]=Oop off=307}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadID@-1 (line 192)
                                        ;   {runtime_call}
  0x0260b1f3: jmp    0x0260b18e
  0x0260b1f5: lea    0x10(%esp),%eax
  0x0260b1f9: mov    %eax,(%esp)
  0x0260b1fc: call   0x025fbac0         ;   {runtime_call}
  0x0260b201: jmp    0x0260b1da
  0x0260b203: nop    
  0x0260b204: nop    
  0x0260b205: mov    %fs:0x0,%esi
  0x0260b20d: mov    0xfffffff4(%esi),%esi
  0x0260b210: mov    0x170(%esi),%eax
  0x0260b216: movl   $0x0,0x170(%esi)
  0x0260b220: movl   $0x0,0x174(%esi)
  0x0260b22a: mov    %eax,%esi
  0x0260b22c: lea    0x10(%esp),%eax
  0x0260b230: mov    0x4(%eax),%ebx
  0x0260b233: mov    (%ebx),%edi
  0x0260b235: and    $0x7,%edi
  0x0260b238: cmp    $0x5,%edi
  0x0260b23b: je     0x0260b255
  0x0260b241: mov    (%eax),%edi
  0x0260b243: test   %edi,%edi
  0x0260b245: je     0x0260b255
  0x0260b24b: lock cmpxchg %edi,(%ebx)
  0x0260b24f: jne    0x0260b260
  0x0260b255: mov    %esi,%eax
  0x0260b257: add    $0x28,%esp
  0x0260b25a: pop    %ebp
  0x0260b25b: jmp    0x025f9c00         ;   {runtime_call}
  0x0260b260: lea    0x10(%esp),%eax
  0x0260b264: mov    %eax,(%esp)
  0x0260b267: call   0x025fbac0         ;   {runtime_call}
  0x0260b26c: jmp    0x0260b255
  0x0260b26e: hlt    
  0x0260b26f: hlt    
[Exception Handler]
[Stub Code]
  0x0260b270: call   0x025fb1c0         ;   {no_reloc}
  0x0260b275: push   $0x6dab698c        ;   {external_word}
  0x0260b27a: call   0x0260b27f
  0x0260b27f: pusha  
  0x0260b280: call   0x6d8b2a00         ;   {runtime_call}
  0x0260b285: hlt    
[Deopt Handler Code]
  0x0260b286: push   $0x260b286         ;   {section_word}
  0x0260b28b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260b348:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '()V' in 'DoubleCheckTest$TestThread'
  #           [sp+0x20]  (sp of caller)
  0x0260b440: nop    
  0x0260b441: nop    
  0x0260b442: nop    
  0x0260b443: nop    
  0x0260b444: nop    
  0x0260b445: nop    
  0x0260b446: nop    
  0x0260b447: cmp    0x4(%ecx),%eax
  0x0260b44a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x0260b450: mov    %eax,0xffffd000(%esp)
  0x0260b457: push   %ebp
  0x0260b458: sub    $0x18,%esp         ;*aload_0
                                        ; - DoubleCheckTest$TestThread::<init>@0 (line 89)
  0x0260b45b: add    $0x18,%esp
  0x0260b45e: pop    %ebp
  0x0260b45f: test   %eax,0x200100      ;   {poll_return}
  0x0260b465: ret    
  0x0260b466: nop    
  0x0260b467: nop    
  0x0260b468: mov    %fs:0x0,%esi
  0x0260b470: mov    0xfffffff4(%esi),%esi
  0x0260b473: mov    0x170(%esi),%eax
  0x0260b479: movl   $0x0,0x170(%esi)
  0x0260b483: movl   $0x0,0x174(%esi)
  0x0260b48d: add    $0x18,%esp
  0x0260b490: pop    %ebp
  0x0260b491: jmp    0x025f9c00         ;   {runtime_call}
  0x0260b496: hlt    
  0x0260b497: hlt    
  0x0260b498: hlt    
  0x0260b499: hlt    
  0x0260b49a: hlt    
  0x0260b49b: hlt    
  0x0260b49c: hlt    
  0x0260b49d: hlt    
  0x0260b49e: hlt    
  0x0260b49f: hlt    
[Exception Handler]
[Stub Code]
  0x0260b4a0: call   0x025fb1c0         ;   {no_reloc}
  0x0260b4a5: push   $0x6dab698c        ;   {external_word}
  0x0260b4aa: call   0x0260b4af
  0x0260b4af: pusha  
  0x0260b4b0: call   0x6d8b2a00         ;   {runtime_call}
  0x0260b4b5: hlt    
[Deopt Handler Code]
  0x0260b4b6: push   $0x260b4b6         ;   {section_word}
  0x0260b4bb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260b548:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} '<init>' '(Ljava/lang/Runnable;)V' in 'java/lang/Thread'
  # this:     ecx       = 'java/lang/Thread'
  # parm0:    edx       = 'java/lang/Runnable'
  #           [sp+0x60]  (sp of caller)
  0x0260b690: nop    
  0x0260b691: nop    
  0x0260b692: nop    
  0x0260b693: nop    
  0x0260b694: nop    
  0x0260b695: nop    
  0x0260b696: nop    
  0x0260b697: cmp    0x4(%ecx),%eax
  0x0260b69a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x0260b6a0: mov    %eax,0xffffd000(%esp)
  0x0260b6a7: push   %ebp
  0x0260b6a8: sub    $0x58,%esp         ;*aload_0
                                        ; - java.lang.Thread::<init>@0 (line 433)
  0x0260b6ab: mov    %edx,0x30(%esp)
  0x0260b6af: movb   $0x0,0x31(%ecx)    ;*putfield daemon
                                        ; - java.lang.Thread::<init>@6 (line 131)
  0x0260b6b3: movb   $0x0,0x32(%ecx)    ;*putfield stillborn
                                        ; - java.lang.Thread::<init>@11 (line 134)
  0x0260b6b7: movl   $0x0,0x4c(%ecx)
  0x0260b6be: mov    %ecx,%esi
  0x0260b6c0: shr    $0x9,%esi
  0x0260b6c3: movb   $0x0,0x1856d380(%esi)  ;*putfield threadLocals
                                        ; - java.lang.Thread::<init>@16 (line 156)
  0x0260b6ca: movl   $0x0,0x50(%ecx)
  0x0260b6d1: mov    %ecx,%esi
  0x0260b6d3: shr    $0x9,%esi
  0x0260b6d6: movb   $0x0,0x1856d380(%esi)  ;*putfield inheritableThreadLocals
                                        ; - java.lang.Thread::<init>@21 (line 162)
  0x0260b6dd: movl   $0x0,0x2c(%ecx)    ;*putfield threadStatus
                                        ; - java.lang.Thread::<init>@26 (line 188)
  0x0260b6e4: mov    $0x145967e8,%edx   ;   {oop('java/lang/Object')}
  0x0260b6e9: mov    %ecx,%ebx
  0x0260b6eb: mov    %fs:0x0,%ecx
  0x0260b6f3: mov    0xfffffff4(%ecx),%ecx
  0x0260b6f6: mov    0x34(%ecx),%eax
  0x0260b6f9: lea    0x8(%eax),%edi
  0x0260b6fc: cmp    0x3c(%ecx),%edi
  0x0260b6ff: ja     0x0260b997
  0x0260b705: mov    %edi,0x34(%ecx)
  0x0260b708: mov    0x68(%edx),%ecx
  0x0260b70b: mov    %ecx,(%eax)
  0x0260b70d: mov    %edx,0x4(%eax)
  0x0260b710: xor    %ecx,%ecx          ;*new  ; - java.lang.Thread::<init>@30 (line 208)
  0x0260b712: mov    %eax,0x5c(%ebx)
  0x0260b715: mov    %ebx,%ecx
  0x0260b717: shr    $0x9,%ecx
  0x0260b71a: movb   $0x0,0x1856d380(%ecx)  ;*putfield blockerLock
                                        ; - java.lang.Thread::<init>@37 (line 208)
  0x0260b721: mov    $0x145eaec8,%edx   ;   {oop('java/lang/StringBuilder')}
  0x0260b726: mov    %fs:0x0,%ecx
  0x0260b72e: mov    0xfffffff4(%ecx),%ecx
  0x0260b731: mov    0x34(%ecx),%eax
  0x0260b734: lea    0x10(%eax),%edi
  0x0260b737: cmp    0x3c(%ecx),%edi
  0x0260b73a: ja     0x0260b9a3
  0x0260b740: mov    %edi,0x34(%ecx)
  0x0260b743: mov    0x68(%edx),%ecx
  0x0260b746: mov    %ecx,(%eax)
  0x0260b748: mov    %edx,0x4(%eax)
  0x0260b74b: xor    %ecx,%ecx
  0x0260b74d: mov    %ecx,0x8(%eax)
  0x0260b750: mov    %ecx,0xc(%eax)     ;*new  ; - java.lang.Thread::<init>@43 (line 434)
  0x0260b753: mov    %eax,0x34(%esp)
  0x0260b757: mov    %ebx,0x38(%esp)
  0x0260b75b: mov    $0x10,%ebx
  0x0260b760: mov    $0x14590448,%edx   ;   {oop({type array char})}
  0x0260b765: mov    %ebx,%edi
  0x0260b767: cmp    $0xffffff,%ebx
  0x0260b76d: ja     0x0260b9af
  0x0260b773: mov    $0x13,%esi
  0x0260b778: lea    (%esi,%ebx,2),%esi
  0x0260b77b: and    $0xfffffff8,%esi
  0x0260b77e: mov    %fs:0x0,%ecx
  0x0260b786: mov    0xfffffff4(%ecx),%ecx
  0x0260b789: mov    0x34(%ecx),%eax
  0x0260b78c: lea    (%eax,%esi,1),%esi
  0x0260b78f: cmp    0x3c(%ecx),%esi
  0x0260b792: ja     0x0260b9af
  0x0260b798: mov    %esi,0x34(%ecx)
  0x0260b79b: sub    %eax,%esi
  0x0260b79d: movl   $0x1,(%eax)
  0x0260b7a3: mov    %edx,0x4(%eax)
  0x0260b7a6: mov    %ebx,0x8(%eax)
  0x0260b7a9: sub    $0xc,%esi
  0x0260b7ac: je     0x0260b7d2
  0x0260b7b2: xor    %ebx,%ebx
  0x0260b7b4: shr    $0x3,%esi
  0x0260b7b7: jae    0x0260b7c7
  0x0260b7bd: mov    %ebx,0xc(%eax,%esi,8)
  0x0260b7c1: je     0x0260b7d2
  0x0260b7c7: mov    %ebx,0x8(%eax,%esi,8)
  0x0260b7cb: mov    %ebx,0x4(%eax,%esi,8)
  0x0260b7cf: dec    %esi
  0x0260b7d0: jne    0x0260b7c7         ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.lang.Thread::<init>@47 (line 434)
  0x0260b7d2: mov    0x34(%esp),%esi
  0x0260b7d6: mov    %eax,0xc(%esi)
  0x0260b7d9: mov    %esi,%eax
  0x0260b7db: shr    $0x9,%eax
  0x0260b7de: movb   $0x0,0x1856d380(%eax)  ;*putfield value
                                        ; - java.lang.AbstractStringBuilder::<init>@8 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.lang.Thread::<init>@47 (line 434)
  0x0260b7e5: mov    $0x1473fef0,%edx   ;   {oop("Thread-")}
  0x0260b7ea: mov    %esi,%ecx          ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
                                        ; - java.lang.Thread::<init>@52 (line 434)
  0x0260b7ec: nop    
  0x0260b7ed: nop    
  0x0260b7ee: nop    
  0x0260b7ef: call   0x025bcf40         ; OopMap{[48]=Oop [56]=Oop [52]=Oop off=356}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 119)
                                        ; - java.lang.Thread::<init>@52 (line 434)
                                        ;   {optimized virtual_call}
  0x0260b7f4: mov    $0x145c3878,%edx   ;   {oop(a 'java/lang/Class' = 'java/lang/Thread')}
  0x0260b7f9: lea    0x40(%esp),%ecx
  0x0260b7fd: mov    %edx,0x4(%ecx)
  0x0260b800: mov    (%edx),%eax        ; implicit exception: dispatches to 0x0260b9b9
  0x0260b802: mov    %eax,%esi
  0x0260b804: and    $0x7,%esi
  0x0260b807: cmp    $0x5,%esi
  0x0260b80a: jne    0x0260b896
  0x0260b810: mov    %eax,(%ecx)
  0x0260b812: mov    %fs:0x0,%esi
  0x0260b81a: mov    0xfffffff4(%esi),%esi
  0x0260b81d: xor    %esi,%eax
  0x0260b81f: mov    0x4(%edx),%esi
  0x0260b822: xor    0x68(%esi),%eax
  0x0260b825: and    $0xffffff87,%eax
  0x0260b828: je     0x0260b8b7
  0x0260b82e: test   $0x7,%eax
  0x0260b833: jne    0x0260b88a
  0x0260b839: test   $0x180,%eax
  0x0260b83e: jne    0x0260b868
  0x0260b844: mov    (%ecx),%eax
  0x0260b846: and    $0x1ff,%eax
  0x0260b84c: mov    %fs:0x0,%esi
  0x0260b854: mov    0xfffffff4(%esi),%esi
  0x0260b857: or     %eax,%esi
  0x0260b859: lock cmpxchg %esi,(%edx)
  0x0260b85d: jne    0x0260b9be
  0x0260b863: jmp    0x0260b8b7
  0x0260b868: mov    %fs:0x0,%esi
  0x0260b870: mov    0xfffffff4(%esi),%esi
  0x0260b873: mov    0x4(%edx),%eax
  0x0260b876: or     0x68(%eax),%esi
  0x0260b879: mov    (%ecx),%eax
  0x0260b87b: lock cmpxchg %esi,(%edx)
  0x0260b87f: jne    0x0260b9be
  0x0260b885: jmp    0x0260b8b7
  0x0260b88a: mov    (%ecx),%eax
  0x0260b88c: mov    0x4(%edx),%esi
  0x0260b88f: mov    0x68(%esi),%esi
  0x0260b892: lock cmpxchg %esi,(%edx)
  0x0260b896: mov    (%edx),%eax
  0x0260b898: or     $0x1,%eax
  0x0260b89b: mov    %eax,(%ecx)
  0x0260b89d: lock cmpxchg %ecx,(%edx)
  0x0260b8a1: je     0x0260b8b7
  0x0260b8a7: sub    %esp,%eax
  0x0260b8a9: and    $0xfffff003,%eax
  0x0260b8af: mov    %eax,(%ecx)
  0x0260b8b1: jne    0x0260b9be         ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadNum@-1 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
  0x0260b8b7: mov    $0x145c3688,%eax   ;   {oop('java/lang/Thread')}
  0x0260b8bc: mov    0x1d8(%eax),%edx   ;*getstatic threadInitNumber
                                        ; - java.lang.Thread::nextThreadNum@0 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
  0x0260b8c2: mov    %edx,%ecx
  0x0260b8c4: inc    %ecx
  0x0260b8c5: mov    %ecx,0x1d8(%eax)   ;*putstatic threadInitNumber
                                        ; - java.lang.Thread::nextThreadNum@6 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
  0x0260b8cb: lea    0x40(%esp),%eax
  0x0260b8cf: mov    0x4(%eax),%esi
  0x0260b8d2: mov    (%esi),%ecx
  0x0260b8d4: and    $0x7,%ecx
  0x0260b8d7: cmp    $0x5,%ecx
  0x0260b8da: je     0x0260b8f4
  0x0260b8e0: mov    (%eax),%ecx
  0x0260b8e2: test   %ecx,%ecx
  0x0260b8e4: je     0x0260b8f4
  0x0260b8ea: lock cmpxchg %ecx,(%esi)
  0x0260b8ee: jne    0x0260b9cf         ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadNum@-1 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
  0x0260b8f4: mov    0x34(%esp),%ecx    ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.lang.Thread::<init>@58 (line 434)
  0x0260b8f8: nop    
  0x0260b8f9: nop    
  0x0260b8fa: nop    
  0x0260b8fb: call   0x025bcf40         ; OopMap{[48]=Oop [56]=Oop [52]=Oop off=624}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ; - java.lang.Thread::<init>@58 (line 434)
                                        ;   {optimized virtual_call}
  0x0260b900: mov    $0x1459d4b0,%edx   ;   {oop('java/lang/String')}
  0x0260b905: mov    %fs:0x0,%ecx
  0x0260b90d: mov    0xfffffff4(%ecx),%ecx
  0x0260b910: mov    0x34(%ecx),%eax
  0x0260b913: lea    0x18(%eax),%edi
  0x0260b916: cmp    0x3c(%ecx),%edi
  0x0260b919: ja     0x0260b9e0
  0x0260b91f: mov    %edi,0x34(%ecx)
  0x0260b922: mov    0x68(%edx),%ecx
  0x0260b925: mov    %ecx,(%eax)
  0x0260b927: mov    %edx,0x4(%eax)
  0x0260b92a: xor    %ecx,%ecx
  0x0260b92c: mov    %ecx,0x8(%eax)
  0x0260b92f: mov    %ecx,0xc(%eax)
  0x0260b932: mov    %ecx,0x10(%eax)
  0x0260b935: mov    %ecx,0x14(%eax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
  0x0260b938: mov    0x34(%esp),%edx
  0x0260b93c: mov    0xc(%edx),%ecx     ;*getfield value
                                        ; - java.lang.StringBuilder::toString@5 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
  0x0260b93f: mov    0x8(%edx),%esi     ;*getfield count
                                        ; - java.lang.StringBuilder::toString@10 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
  0x0260b942: mov    %ecx,%edx
  0x0260b944: movl   $0x0,(%esp)
  0x0260b94b: mov    %esi,0x4(%esp)
  0x0260b94f: mov    %eax,%ecx          ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
  0x0260b951: mov    %eax,0x3c(%esp)
  0x0260b955: nop    
  0x0260b956: nop    
  0x0260b957: call   0x025bcf40         ; OopMap{[48]=Oop [56]=Oop [60]=Oop off=716}
                                        ;*invokespecial <init>
                                        ; - java.lang.StringBuilder::toString@13 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
                                        ;   {optimized virtual_call}
  0x0260b95c: mov    $0x0,%edx          ;   {oop(NULL)}
  0x0260b961: mov    0x30(%esp),%ecx
  0x0260b965: mov    %ecx,0x8(%esp)
  0x0260b969: mov    0x3c(%esp),%eax
  0x0260b96d: mov    %eax,0xc(%esp)
  0x0260b971: movl   $0x0,0x4(%esp)
  0x0260b979: movl   $0x0,(%esp)
  0x0260b980: mov    0x38(%esp),%ecx    ;*invokespecial init
                                        ; - java.lang.Thread::<init>@65 (line 434)
  0x0260b984: nop    
  0x0260b985: nop    
  0x0260b986: nop    
  0x0260b987: call   0x025bcf40         ; OopMap{off=764}
                                        ;*invokespecial init
                                        ; - java.lang.Thread::<init>@65 (line 434)
                                        ;   {optimized virtual_call}
  0x0260b98c: add    $0x58,%esp
  0x0260b98f: pop    %ebp
  0x0260b990: test   %eax,0x200100      ;   {poll_return}
  0x0260b996: ret    
  0x0260b997: mov    %edx,%edx
  0x0260b999: call   0x025fa480         ; OopMap{[48]=Oop ebx=Oop off=782}
                                        ;*new  ; - java.lang.Thread::<init>@30 (line 208)
                                        ;   {runtime_call}
  0x0260b99e: jmp    0x0260b712
  0x0260b9a3: mov    %edx,%edx
  0x0260b9a5: call   0x025fa480         ; OopMap{[48]=Oop ebx=Oop off=794}
                                        ;*new  ; - java.lang.Thread::<init>@43 (line 434)
                                        ;   {runtime_call}
  0x0260b9aa: jmp    0x0260b753
  0x0260b9af: call   0x025faa40         ; OopMap{[48]=Oop [56]=Oop [52]=Oop off=804}
                                        ;*newarray
                                        ; - java.lang.AbstractStringBuilder::<init>@6 (line 45)
                                        ; - java.lang.StringBuilder::<init>@3 (line 68)
                                        ; - java.lang.Thread::<init>@47 (line 434)
                                        ;   {runtime_call}
  0x0260b9b4: jmp    0x0260b7d2
  0x0260b9b9: call   0x025fa0d0         ; OopMap{[48]=Oop [56]=Oop [52]=Oop edx=Oop off=814}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadNum@-1 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
                                        ;   {runtime_call}
  0x0260b9be: mov    %edx,0x4(%esp)
  0x0260b9c2: mov    %ecx,(%esp)
  0x0260b9c5: call   0x025fb8c0         ; OopMap{[48]=Oop [56]=Oop [52]=Oop edx=Oop [68]=Oop off=826}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadNum@-1 (line 151)
                                        ; - java.lang.Thread::<init>@55 (line 434)
                                        ;   {runtime_call}
  0x0260b9ca: jmp    0x0260b8b7
  0x0260b9cf: lea    0x40(%esp),%eax
  0x0260b9d3: mov    %eax,(%esp)
  0x0260b9d6: call   0x025fbac0         ;   {runtime_call}
  0x0260b9db: jmp    0x0260b8f4
  0x0260b9e0: mov    %edx,%edx
  0x0260b9e2: call   0x025fa480         ; OopMap{[48]=Oop [56]=Oop [52]=Oop off=855}
                                        ;*new  ; - java.lang.StringBuilder::toString@0 (line 430)
                                        ; - java.lang.Thread::<init>@61 (line 434)
                                        ;   {runtime_call}
  0x0260b9e7: jmp    0x0260b938
  0x0260b9ec: nop    
  0x0260b9ed: nop    
  0x0260b9ee: mov    %fs:0x0,%esi
  0x0260b9f6: mov    0xfffffff4(%esi),%esi
  0x0260b9f9: mov    0x170(%esi),%eax
  0x0260b9ff: movl   $0x0,0x170(%esi)
  0x0260ba09: movl   $0x0,0x174(%esi)
  0x0260ba13: add    $0x58,%esp
  0x0260ba16: pop    %ebp
  0x0260ba17: jmp    0x025f9c00         ;   {runtime_call}
  0x0260ba1c: hlt    
  0x0260ba1d: hlt    
  0x0260ba1e: hlt    
  0x0260ba1f: hlt    
[Stub Code]
  0x0260ba20: nop                       ;   {no_reloc}
  0x0260ba21: nop    
  0x0260ba22: mov    $0x0,%ebx          ;   {static_stub}
  0x0260ba27: jmp    0x0260ba27         ;   {runtime_call}
  0x0260ba2c: nop    
  0x0260ba2d: nop    
  0x0260ba2e: mov    $0x0,%ebx          ;   {static_stub}
  0x0260ba33: jmp    0x0260ba33         ;   {runtime_call}
  0x0260ba38: nop    
  0x0260ba39: nop    
  0x0260ba3a: mov    $0x0,%ebx          ;   {static_stub}
  0x0260ba3f: jmp    0x0260ba3f         ;   {runtime_call}
  0x0260ba44: nop    
  0x0260ba45: nop    
  0x0260ba46: mov    $0x0,%ebx          ;   {static_stub}
  0x0260ba4b: jmp    0x0260ba4b         ;   {runtime_call}
[Exception Handler]
  0x0260ba50: call   0x025fb1c0         ;   {runtime_call}
  0x0260ba55: push   $0x6dab698c        ;   {external_word}
  0x0260ba5a: call   0x0260ba5f
  0x0260ba5f: pusha  
  0x0260ba60: call   0x6d8b2a00         ;   {runtime_call}
  0x0260ba65: hlt    
[Deopt Handler Code]
  0x0260ba66: push   $0x260ba66         ;   {section_word}
  0x0260ba6b: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260be48:
Code:
[Disassembling for mach='i386']
[Entry Point]
[Verified Entry Point]
  # {method} 'nextThreadNum' '()I' in 'java/lang/Thread'
  #           [sp+0x30]  (sp of caller)
  0x0260bf40: mov    %eax,0xffffd000(%esp)
  0x0260bf47: push   %ebp
  0x0260bf48: sub    $0x28,%esp
  0x0260bf4b: mov    $0x145c3878,%esi   ;   {oop(a 'java/lang/Class' = 'java/lang/Thread')}
  0x0260bf50: lea    0x10(%esp),%edi
  0x0260bf54: mov    %esi,0x4(%edi)
  0x0260bf57: mov    (%esi),%eax
  0x0260bf59: mov    %eax,%ebx
  0x0260bf5b: and    $0x7,%ebx
  0x0260bf5e: cmp    $0x5,%ebx
  0x0260bf61: jne    0x0260bfed
  0x0260bf67: mov    %eax,(%edi)
  0x0260bf69: mov    %fs:0x0,%ebx
  0x0260bf71: mov    0xfffffff4(%ebx),%ebx
  0x0260bf74: xor    %ebx,%eax
  0x0260bf76: mov    0x4(%esi),%ebx
  0x0260bf79: xor    0x68(%ebx),%eax
  0x0260bf7c: and    $0xffffff87,%eax
  0x0260bf7f: je     0x0260c00e
  0x0260bf85: test   $0x7,%eax
  0x0260bf8a: jne    0x0260bfe1
  0x0260bf90: test   $0x180,%eax
  0x0260bf95: jne    0x0260bfbf
  0x0260bf9b: mov    (%edi),%eax
  0x0260bf9d: and    $0x1ff,%eax
  0x0260bfa3: mov    %fs:0x0,%ebx
  0x0260bfab: mov    0xfffffff4(%ebx),%ebx
  0x0260bfae: or     %eax,%ebx
  0x0260bfb0: lock cmpxchg %ebx,(%esi)
  0x0260bfb4: jne    0x0260c058
  0x0260bfba: jmp    0x0260c00e
  0x0260bfbf: mov    %fs:0x0,%ebx
  0x0260bfc7: mov    0xfffffff4(%ebx),%ebx
  0x0260bfca: mov    0x4(%esi),%eax
  0x0260bfcd: or     0x68(%eax),%ebx
  0x0260bfd0: mov    (%edi),%eax
  0x0260bfd2: lock cmpxchg %ebx,(%esi)
  0x0260bfd6: jne    0x0260c058
  0x0260bfdc: jmp    0x0260c00e
  0x0260bfe1: mov    (%edi),%eax
  0x0260bfe3: mov    0x4(%esi),%ebx
  0x0260bfe6: mov    0x68(%ebx),%ebx
  0x0260bfe9: lock cmpxchg %ebx,(%esi)
  0x0260bfed: mov    (%esi),%eax
  0x0260bfef: or     $0x1,%eax
  0x0260bff2: mov    %eax,(%edi)
  0x0260bff4: lock cmpxchg %edi,(%esi)
  0x0260bff8: je     0x0260c00e
  0x0260bffe: sub    %esp,%eax
  0x0260c000: and    $0xfffff003,%eax
  0x0260c006: mov    %eax,(%edi)
  0x0260c008: jne    0x0260c058
  0x0260c00e: mov    $0x145c3688,%eax   ;   {oop('java/lang/Thread')}
  0x0260c013: mov    0x1d8(%eax),%esi   ;*getstatic threadInitNumber
                                        ; - java.lang.Thread::nextThreadNum@0 (line 151)
  0x0260c019: mov    %esi,%edi
  0x0260c01b: inc    %edi
  0x0260c01c: mov    %edi,0x1d8(%eax)   ;*putstatic threadInitNumber
                                        ; - java.lang.Thread::nextThreadNum@6 (line 151)
  0x0260c022: lea    0x10(%esp),%eax
  0x0260c026: mov    0x4(%eax),%ebx
  0x0260c029: mov    (%ebx),%edi
  0x0260c02b: and    $0x7,%edi
  0x0260c02e: cmp    $0x5,%edi
  0x0260c031: je     0x0260c04b
  0x0260c037: mov    (%eax),%edi
  0x0260c039: test   %edi,%edi
  0x0260c03b: je     0x0260c04b
  0x0260c041: lock cmpxchg %edi,(%ebx)
  0x0260c045: jne    0x0260c066         ;*ireturn
                                        ; - java.lang.Thread::nextThreadNum@9 (line 151)
  0x0260c04b: mov    %esi,%eax
  0x0260c04d: add    $0x28,%esp
  0x0260c050: pop    %ebp
  0x0260c051: test   %eax,0x200100      ;   {poll_return}
  0x0260c057: ret    
  0x0260c058: mov    %esi,0x4(%esp)
  0x0260c05c: mov    %edi,(%esp)
  0x0260c05f: call   0x025fb8c0         ; OopMap{esi=Oop [20]=Oop off=292}
                                        ;*synchronization entry
                                        ; - java.lang.Thread::nextThreadNum@-1 (line 151)
                                        ;   {runtime_call}
  0x0260c064: jmp    0x0260c00e
  0x0260c066: lea    0x10(%esp),%eax
  0x0260c06a: mov    %eax,(%esp)
  0x0260c06d: call   0x025fbac0         ;   {runtime_call}
  0x0260c072: jmp    0x0260c04b
  0x0260c074: nop    
  0x0260c075: nop    
  0x0260c076: mov    %fs:0x0,%esi
  0x0260c07e: mov    0xfffffff4(%esi),%esi
  0x0260c081: mov    0x170(%esi),%eax
  0x0260c087: movl   $0x0,0x170(%esi)
  0x0260c091: movl   $0x0,0x174(%esi)
  0x0260c09b: mov    %eax,%esi
  0x0260c09d: lea    0x10(%esp),%eax
  0x0260c0a1: mov    0x4(%eax),%ebx
  0x0260c0a4: mov    (%ebx),%edi
  0x0260c0a6: and    $0x7,%edi
  0x0260c0a9: cmp    $0x5,%edi
  0x0260c0ac: je     0x0260c0c6
  0x0260c0b2: mov    (%eax),%edi
  0x0260c0b4: test   %edi,%edi
  0x0260c0b6: je     0x0260c0c6
  0x0260c0bc: lock cmpxchg %edi,(%ebx)
  0x0260c0c0: jne    0x0260c0d1
  0x0260c0c6: mov    %esi,%eax
  0x0260c0c8: add    $0x28,%esp
  0x0260c0cb: pop    %ebp
  0x0260c0cc: jmp    0x025f9c00         ;   {runtime_call}
  0x0260c0d1: lea    0x10(%esp),%eax
  0x0260c0d5: mov    %eax,(%esp)
  0x0260c0d8: call   0x025fbac0         ;   {runtime_call}
  0x0260c0dd: jmp    0x0260c0c6
  0x0260c0df: hlt    
[Exception Handler]
[Stub Code]
  0x0260c0e0: call   0x025fb1c0         ;   {no_reloc}
  0x0260c0e5: push   $0x6dab698c        ;   {external_word}
  0x0260c0ea: call   0x0260c0ef
  0x0260c0ef: pusha  
  0x0260c0f0: call   0x6d8b2a00         ;   {runtime_call}
  0x0260c0f5: hlt    
[Deopt Handler Code]
  0x0260c0f6: push   $0x260c0f6         ;   {section_word}
  0x0260c0fb: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260c1c8:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     ecx       = 'java/lang/StringBuilder'
  # parm0:    edx       = int
  #           [sp+0x20]  (sp of caller)
  0x0260c2c0: nop    
  0x0260c2c1: nop    
  0x0260c2c2: nop    
  0x0260c2c3: nop    
  0x0260c2c4: nop    
  0x0260c2c5: nop    
  0x0260c2c6: nop    
  0x0260c2c7: cmp    0x4(%ecx),%eax
  0x0260c2ca: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x0260c2d0: mov    %eax,0xffffd000(%esp)
  0x0260c2d7: push   %ebp
  0x0260c2d8: sub    $0x18,%esp         ;*aload_0
                                        ; - java.lang.StringBuilder::append@0 (line 212)
  0x0260c2db: mov    %ecx,%esi
  0x0260c2dd: mov    %esi,%ecx          ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
  0x0260c2df: mov    %esi,0x10(%esp)
  0x0260c2e3: call   0x025bcf40         ; OopMap{[16]=Oop off=40}
                                        ;*invokespecial append
                                        ; - java.lang.StringBuilder::append@2 (line 212)
                                        ;   {optimized virtual_call}
  0x0260c2e8: mov    0x10(%esp),%eax
  0x0260c2ec: add    $0x18,%esp
  0x0260c2ef: pop    %ebp
  0x0260c2f0: test   %eax,0x200100      ;   {poll_return}
  0x0260c2f6: ret    
  0x0260c2f7: nop    
  0x0260c2f8: nop    
  0x0260c2f9: mov    %fs:0x0,%esi
  0x0260c301: mov    0xfffffff4(%esi),%esi
  0x0260c304: mov    0x170(%esi),%eax
  0x0260c30a: movl   $0x0,0x170(%esi)
  0x0260c314: movl   $0x0,0x174(%esi)
  0x0260c31e: add    $0x18,%esp
  0x0260c321: pop    %ebp
  0x0260c322: jmp    0x025f9c00         ;   {runtime_call}
  0x0260c327: hlt    
  0x0260c328: hlt    
  0x0260c329: hlt    
  0x0260c32a: hlt    
  0x0260c32b: hlt    
  0x0260c32c: hlt    
  0x0260c32d: hlt    
  0x0260c32e: hlt    
  0x0260c32f: hlt    
[Stub Code]
  0x0260c330: nop                       ;   {no_reloc}
  0x0260c331: nop    
  0x0260c332: mov    $0x0,%ebx          ;   {static_stub}
  0x0260c337: jmp    0x0260c337         ;   {runtime_call}
[Exception Handler]
  0x0260c33c: call   0x025fb1c0         ;   {runtime_call}
  0x0260c341: push   $0x6dab698c        ;   {external_word}
  0x0260c346: call   0x0260c34b
  0x0260c34b: pusha  
  0x0260c34c: call   0x6d8b2a00         ;   {runtime_call}
  0x0260c351: hlt    
[Deopt Handler Code]
  0x0260c352: push   $0x260c352         ;   {section_word}
  0x0260c357: jmp    0x025bd930         ;   {runtime_call}
Decoding compiled method 0x0260c408:
Code:
[Disassembling for mach='i386']
[Entry Point]
  # {method} 'append' '(I)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     ecx       = 'java/lang/AbstractStringBuilder'
  # parm0:    edx       = int
  #           [sp+0x30]  (sp of caller)
  0x0260c540: nop    
  0x0260c541: nop    
  0x0260c542: nop    
  0x0260c543: nop    
  0x0260c544: nop    
  0x0260c545: nop    
  0x0260c546: nop    
  0x0260c547: cmp    0x4(%ecx),%eax
  0x0260c54a: jne    0x025bcd40         ;   {runtime_call}
[Verified Entry Point]
  0x0260c550: mov    %eax,0xffffd000(%esp)
  0x0260c557: push   %ebp
  0x0260c558: sub    $0x28,%esp         ;*iload_1
                                        ; - java.lang.AbstractStringBuilder::append@0 (line 589)
  0x0260c55b: mov    %ecx,0x18(%esp)
  0x0260c55f: cmp    $0x80000000,%edx
  0x0260c565: je     0x0260c640         ;*if_icmpne
                                        ; - java.lang.AbstractStringBuilder::append@3 (line 589)
  0x0260c56b: cmp    $0x0,%edx
  0x0260c56e: jge    0x0260c5b2         ;*ifge
                                        ; - java.lang.AbstractStringBuilder::append@16 (line 593)
  0x0260c574: mov    %edx,%esi
  0x0260c576: neg    %esi
  0x0260c578: mov    $0x0,%edi
  0x0260c57d: jmp    0x0260c58b         ;*istore_1
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@1 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
  0x0260c582: xchg   %ax,%ax
  0x0260c584: inc    %edi               ; OopMap{ecx=Oop [24]=Oop off=69}
                                        ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
  0x0260c585: test   %eax,0x200100      ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
                                        ;   {poll}
  0x0260c58b: mov    $0x145e67d0,%ebx   ;   {oop('java/lang/AbstractStringBuilder')}
  0x0260c590: mov    0x250(%ebx),%ebx   ;*getstatic sizeTable
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@3 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
  0x0260c596: mov    $0xa,%eax
  0x0260c59b: cmp    %edi,%eax
  0x0260c59d: jbe    0x0260c663
  0x0260c5a3: mov    0xc(%ebx,%edi,4),%ebx  ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
  0x0260c5a7: cmp    %ebx,%esi
  0x0260c5a9: jg     0x0260c584         ;*if_icmpgt
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@8 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
  0x0260c5ab: inc    %edi
  0x0260c5ac: inc    %edi
  0x0260c5ad: jmp    0x0260c5e6         ;*goto
                                        ; - java.lang.AbstractStringBuilder::append@26 (line 593)
  0x0260c5b2: mov    $0x0,%esi
  0x0260c5b7: jmp    0x0260c5c3         ;*istore_1
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@1 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
  0x0260c5bc: inc    %esi               ; OopMap{ecx=Oop [24]=Oop off=125}
                                        ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
  0x0260c5bd: test   %eax,0x200100      ;*goto
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@18 (line 608)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
                                        ;   {poll}
  0x0260c5c3: mov    $0x145e67d0,%edi   ;   {oop('java/lang/AbstractStringBuilder')}
  0x0260c5c8: mov    0x250(%edi),%edi   ;*getstatic sizeTable
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@3 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
  0x0260c5ce: mov    $0xa,%ebx
  0x0260c5d3: cmp    %esi,%ebx
  0x0260c5d5: jbe    0x0260c66b
  0x0260c5db: mov    0xc(%edi,%esi,4),%edi  ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
  0x0260c5df: cmp    %edi,%edx
  0x0260c5e1: jg     0x0260c5bc         ;*if_icmpgt
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@8 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
  0x0260c5e3: inc    %esi
  0x0260c5e4: mov    %esi,%edi          ;*istore_2
                                        ; - java.lang.AbstractStringBuilder::append@33 (line 593)
  0x0260c5e6: mov    0x8(%ecx),%esi     ;*getfield count
                                        ; - java.lang.AbstractStringBuilder::append@35 (line 595)
  0x0260c5e9: add    %edi,%esi
  0x0260c5eb: mov    %esi,0x20(%esp)
  0x0260c5ef: mov    0xc(%ecx),%edi     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@43 (line 596)
  0x0260c5f2: mov    0x8(%edi),%edi     ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@46 (line 596)
                                        ; implicit exception: dispatches to 0x0260c673
  0x0260c5f5: cmp    %edi,%esi
  0x0260c5f7: jle    0x0260c618         ;*if_icmple
                                        ; - java.lang.AbstractStringBuilder::append@47 (line 596)
  0x0260c5fd: mov    %edx,0x1c(%esp)
  0x0260c601: mov    %esi,%edx
  0x0260c603: mov    %ecx,%ebx
  0x0260c605: mov    %ebx,%ecx          ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@52 (line 597)
  0x0260c607: call   0x025bcf40         ; OopMap{[24]=Oop off=204}
                                        ;*invokevirtual expandCapacity
                                        ; - java.lang.AbstractStringBuilder::append@52 (line 597)
                                        ;   {optimized virtual_call}
  0x0260c60c: mov    0x20(%esp),%esi
  0x0260c610: mov    0x1c(%esp),%edx
  0x0260c614: mov    0x18(%esp),%ecx
  0x0260c618: mov    0xc(%ecx),%edi     ;*getfield value
                                        ; - java.lang.AbstractStringBuilder::append@58 (line 598)
  0x0260c61b: mov    %edx,%ecx
  0x0260c61d: mov    %esi,%edx
  0x0260c61f: mov    %edi,(%esp)        ;*invokestatic getChars
                                        ; - java.lang.AbstractStringBuilder::append@61 (line 598)
  0x0260c622: nop    
  0x0260c623: call   0x025bd340         ; OopMap{[24]=Oop off=232}
                                        ;*invokestatic getChars
                                        ; - java.lang.AbstractStringBuilder::append@61 (line 598)
                                        ;   {static_call}
  0x0260c628: mov    0x18(%esp),%ecx
  0x0260c62c: mov    0x20(%esp),%esi
  0x0260c630: mov    %esi,0x8(%ecx)     ;*putfield count
                                        ; - java.lang.AbstractStringBuilder::append@66 (line 599)
  0x0260c633: mov    %ecx,%eax
  0x0260c635: add    $0x28,%esp
  0x0260c638: pop    %ebp
  0x0260c639: test   %eax,0x200100      ;   {poll_return}
  0x0260c63f: ret                       ;*areturn
                                        ; - java.lang.AbstractStringBuilder::append@70 (line 600)
  0x0260c640: mov    $0x14601e50,%edx   ;   {oop("-2147483648")}
  0x0260c645: mov    %ecx,%esi
  0x0260c647: mov    %esi,%ecx          ;*invokevirtual append
                                        ; - java.lang.AbstractStringBuilder::append@9 (line 590)
  0x0260c649: nop    
  0x0260c64a: mov    $0xffffffff,%eax   ;   {oop(NULL)}
  0x0260c64f: call   0x025bd140         ; OopMap{[24]=Oop off=276}
                                        ;*invokevirtual append
                                        ; - java.lang.AbstractStringBuilder::append@9 (line 590)
                                        ;   {virtual_call}
  0x0260c654: mov    0x18(%esp),%eax
  0x0260c658: add    $0x28,%esp
  0x0260c65b: pop    %ebp
  0x0260c65c: test   %eax,0x200100      ;   {poll_return}
  0x0260c662: ret    
  0x0260c663: mov    %edi,(%esp)
  0x0260c666: call   0x025f9dd0         ; OopMap{ecx=Oop [24]=Oop ebx=Oop off=299}
                                        ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@21 (line 593)
                                        ;   {runtime_call}
  0x0260c66b: mov    %esi,(%esp)
  0x0260c66e: call   0x025f9dd0         ; OopMap{ecx=Oop [24]=Oop edi=Oop off=307}
                                        ;*iaload
                                        ; - java.lang.AbstractStringBuilder::stringSizeOfInt@7 (line 609)
                                        ; - java.lang.AbstractStringBuilder::append@30 (line 593)
                                        ;   {runtime_call}
  0x0260c673: call   0x025fa0d0         ; OopMap{ecx=Oop [24]=Oop off=312}
                                        ;*arraylength
                                        ; - java.lang.AbstractStringBuilder::append@46 (line 596)
                                        ;   {runtime_call}
  0x0260c678: nop    
  0x0260c679: nop    
  0x0260c67a: mov    %fs:0x0,%esi
  0x0260c682: mov    0xfffffff4(%esi),%esi
  0x0260c685: mov    0x170(%esi),%eax
  0x0260c68b: movl   $0x0,0x170(%esi)
  0x0260c695: movl   $0x0,0x174(%esi)
  0x0260c69f: add    $0x28,%esp
  0x0260c6a2: pop    %ebp
  0x0260c6a3: jmp    0x025f9c00         ;   {runtime_call}
  0x0260c6a8: hlt    
  0x0260c6a9: hlt    
  0x0260c6aa: hlt    
  0x0260c6ab: hlt    
  0x0260c6ac: hlt    
  0x0260c6ad: hlt    
  0x0260c6ae: hlt    
  0x0260c6af: hlt    
[Stub Code]
  0x0260c6b0: nop                       ;   {no_reloc}
  0x0260c6b1: nop    
  0x0260c6b2: mov    $0x0,%ebx          ;   {static_stub}
  0x0260c6b7: jmp    0x0260c6b7         ;   {runtime_call}
  0x0260c6bc: nop    
  0x0260c6bd: nop    
  0x0260c6be: mov    $0x0,%ebx          ;   {static_stub}
  0x0260c6c3: jmp    0x0260c6c3         ;   {runtime_call}
  0x0260c6c8: nop    
  0x0260c6c9: nop    
  0x0260c6ca: mov    $0x0,%ebx          ;   {static_stub}
  0x0260c6cf: jmp    0x0260c6cf         ;   {runtime_call}
[Exception Handler]
  0x0260c6d4: call   0x025fb1c0         ;   {runtime_call}
  0x0260c6d9: push   $0x6dab698c        ;   {external_word}
  0x0260c6de: call   0x0260c6e3
  0x0260c6e3: pusha  
  0x0260c6e4: call   0x6d8b2a00         ;   {runtime_call}
  0x0260c6e9: hlt    
[Deopt Handler Code]
  0x0260c6ea: push   $0x260c6ea         ;   {section_word}
  0x0260c6ef: jmp    0x025bd930         ;   {runtime_call}
